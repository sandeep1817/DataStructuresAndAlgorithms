<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/</description>
	<atom:link rel="self" href="http://planeteclipse.org/rss20.xml" type="application/rss+xml"/>

<item>
	<title>Maximilian and Jonas: Eclipse Theia extensions vs. plugins vs. Che-Theia plugins</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=42068</guid>
	<link>https://eclipsesource.com/blogs/2019/10/10/eclipse-theia-extensions-vs-plugins-vs-che-theia-plugins/</link>
	<description>&lt;p&gt;In this article, we compare Eclipse Theia plugins with Theia extensions, with Che-Theia plugins and with VS Code extensions/plugins. In case ...&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/10/10/eclipse-theia-extensions-vs-plugins-vs-che-theia-plugins/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Theia extensions vs. plugins vs. Che-Theia plugins&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 10 Oct 2019 13:40:57 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Revising the Eclipse IP Policy: Third Party Content</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5580</guid>
	<link>https://waynebeaton.wordpress.com/2019/10/09/revising-the-eclipse-ip-policy-third-party-content/</link>
	<description>&lt;p&gt;The Eclipse Foundation is in the process of making a major update to our Intellectual Property Policy. A big part of this update is a change in the way that we will manage third party content. &lt;/p&gt;



&lt;p&gt;In the context of the Eclipse IP Policy, “third party content” is content that is leveraged by the Eclipse open source project, but not otherwise produced or managed by an Eclipse open source project. A library produced by, say, an Apache open source project, is considered to be third party content. Today, the IP Policy requires that all third party content must be vetted by the Eclipse IP Team before it can be used by an Eclipse Project. Pending approval from the Eclipse Board of Directors, we’re planning to turn this around.&lt;/p&gt;



&lt;p&gt;Upon approval of these updates, project teams will be able to introduce new third party content during a development cycle without first checking with the IP Team. That is, a project team may commit build scripts, code references, etc. to third party content to their source code repository without first creating a contribution questionnaire (CQ) to request IP Team review and approval of the third party content. At least during the development period between releases, the onus is on the project team to–with reasonable confidence–ensure any third party content that they introduce is license compatible with the project’s license. Before any content may be included in any formal release the project team must validate that the third party content licenses are compatible with the project license.&lt;/p&gt;



&lt;p&gt;Traditionally, releases are preceded by a release review and, as part of that release review, the Eclipse IP Team engages in a review of the project’s record of intellectual property contributions and third party content use (the IP Log). It is during that IP Log review that the IP Team will validate the state of license compatibility. I say “traditionally”, because we changed tradition, or more specifically, we changed the Eclipse Development Process in late 2018, to make it so that a project team may engage in any number of major and minor releases for an entire year following a successful release review. In the case where a release does not require a review (and so there is no trigger to engage in an IP Log review), the onus is on the project team to ensure the license compatibility of all referenced third party content. But we’re not leaving project teams high-and-dry: the IP Team can still help with the validation, even when a formal review is not required.&lt;/p&gt;



&lt;p&gt;We’ve been experimenting with processes and tools to help us with license compatibility validation. These tools will be used by the IP Team during their evaluation, and will be made available to project teams as well. Ideally, project teams will integrate the license compatibility validation tool into their builds so that the tool may identify content that requires further scrutiny, and present it to the IP Team to resolve early in their development cycle so that–by the time we run the tool to validate the content at the end of the release cycle–all identified content will already have been resolved and the IP Team can just “rubber stamp” it. &lt;/p&gt;



&lt;p&gt;This should provide significant flexibility for project teams to experiment with different libraries and versions, while also making the IP due diligence process more streamlined and predictable.&lt;/p&gt;



&lt;p&gt;An important part of making this work, is the leveraging of existing databases of information. Over the years, we’ve accumulated a significant amount of knowledge about a great many libraries, but others have also done a great deal of work. The new process will leverage other trusted sources of information (more on this in a future post). We’re going to get out of the business of scanning through every single bit of source code ourselves, and instead trust our own database and other sources of information (and contribute to these other sources of information). &lt;/p&gt;



&lt;p&gt;Our prototype tool focuses on a bill of materials. Each entry in the bill of materials identifies a particular third party library. To identify a particular third party library, we’ve decided to adopt the &lt;a href=&quot;http://clearlydefined.io&quot;&gt;ClearlyDefined&lt;/a&gt; project’s five part identifiers which includes, the type of content, its software repository source, its namespace and name, and version. ClearlyDefined coordinates are roughly analogous to Maven coordinates which unambiguously identify a particular piece of software by &lt;em&gt;groupid&lt;/em&gt;, &lt;em&gt;artifactid&lt;/em&gt;, and &lt;em&gt;version&lt;/em&gt; (e.g., &lt;code&gt;org.junit.jupiter:junit-jupiter:5.5.2&lt;/code&gt; unambiguously identifies content that is known to be under the EPL-2.0). The ClearlyDefined coordinate system adds the &lt;em&gt;type&lt;/em&gt; of the content as “maven” and its &lt;em&gt;source&lt;/em&gt; as “mavencentral”, so &lt;code&gt;org.junit.jupiter:junit-jupiter:5.5.2&lt;/code&gt; becomes &lt;code&gt;maven/mavencentral/org.junit.jupiter/junit-jupiter/5.5.2&lt;/code&gt; (note that, at least theoretically, the source could be a different Maven repository). We selected ClearlyDefined coordinates at least in part because we have projects that use languages that are not Java and software repositories that are not Maven Central; using these coordinates, we can also identify, for example, NPM content (e.g., &lt;code&gt;npm/npmjs/@babel/generator/7.6.2&lt;/code&gt;). &lt;/p&gt;



&lt;p&gt;A bill of materials, then, is a list of ClearlyDefined coordinates (the prototype tool automatically translates a Maven dependency list or a node package-lock file into this coordinate system).&lt;/p&gt;



&lt;p&gt;The Maven Dependency plugin can be used to generate a list of dependencies (as Maven coordinates):&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$&amp;gt; mvn dependency:list -DoutputFile=project.deps -DappendOutput=true&lt;/pre&gt;



&lt;p&gt;The output from the Maven Dependency plugin takes the following form:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;The following files have been resolved:&lt;br /&gt;   org.apache.commons:commons-lang3:jar:3.4:compile&lt;br /&gt;   org.slf4j:slf4j-api:jar:1.7.21:compile&lt;br /&gt;   org.slf4j:slf4j-log4j12:jar:1.7.21:compile&lt;br /&gt;   log4j:log4j:jar:1.2.17:compile&lt;br /&gt;   commons-logging:commons-logging:jar:1.1.1:compile&lt;br /&gt;   ...&lt;br /&gt;The following files have been resolved:&lt;br /&gt;   org.apache.commons:commons-lang3:jar:3.4:compile&lt;br /&gt;   com.clearspring.analytics:stream:jar:2.9.6:compile&lt;br /&gt;   ...&lt;/pre&gt;



&lt;p&gt;The prototype tool generates a bill of materials that looks something like the following:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;maven/mavencentral/org.apache.commons/commons-lang3/3.4, Apache-2.0, approved&lt;br /&gt;maven/mavencentral/org.slf4j/slf4j-api/1.7.21, MIT, approved&lt;br /&gt;maven/mavencentral/org.slf4j/slf4j-log4j12/1.7.21, MIT, approved&lt;br /&gt;maven/mavencentral/log4j/log4j/1.2.17, Apache-2.0, approved&lt;br /&gt;maven/mavencentral/commons-logging/commons-logging/1.1.1, Apache-2.0, approved&lt;br /&gt;maven/mavencentral/com.clearspring.analytics/stream/2.9.6, Apache-2.0, approved&lt;br /&gt;...&lt;/pre&gt;



&lt;p&gt;&lt;em&gt;The output actually also includes a handful of URLs with the output (e.g., pointers to the source code when they’re known), but I’ve removed them to focus on the important bits. You’ll also notice that content that is repeated in the dependency list only appears once in the output.&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;For each library, the tool determines the license and whether or not it is approved for use (I’ll discuss how it works in a future post).  Any content that is listed as &lt;strong&gt;restricted&lt;/strong&gt; instead of approved must be reviewed and resolved by the IP Team before it can be included in any official project release (I’ll discuss this in a future post). &lt;/p&gt;



&lt;p&gt;At present, the prototype tool only identifies licenses and assesses compatibility to determine whether or not the content is approved. The output is easily parsed to identify problematic content, but our intent is to make it more immediately helpful without requiring advanced bash-fu skills. There’s plenty of opportunity for further automation, including rolling the prototype into a Maven plugin to incorporate directly into a build and support for other build systems.&lt;/p&gt;



&lt;p&gt;This bill of materials becomes the third-party content part of the project’s IP Log. This has the added benefit of being 100% accurate without the need for things like piggyback contribution questionnaires (CQs). At least in the short term, the IPzilla system and CQs will remain the main means by which project committers interact with the IP Team, but only for content that requires investigation.&lt;br /&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 10 Oct 2019 03:07:39 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE Community Update October 2019</title>
	<guid isPermaLink="false">6734 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-update-october-2019</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Welcome to the latest Jakarta EE community update. In this edition, we highlight key opportunities to participate in upcoming community events, explore the Jakarta EE 8 release, and learn more about the very bright future of cloud native Java.&lt;/span&gt;&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;EclipseCon Europe 2019: Register for Community Day&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/schedule/2019-10-21&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;u&gt;Community Day&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;, which will be held Monday, October 21 at&lt;/span&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;EclipseCon Europe&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;, is a must for everyone who’s interested in our cloud native projects. The day is dedicated to community-organized meetings to discuss projects and technologies, provide workshops and coding sessions, hold working group gatherings, and more. Lunch and breaks are included, and the day ends with a casual reception.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;There’s already a gathering planned for anyone interested in Jakarta EE, MicroProfile, Eclipse Jemo, Eclipse Che, Eclipse Codewind, and other cloud-related topics. To see the agenda so far, and add your ideas for discussion topics, check the&lt;/span&gt;&lt;a href=&quot;https://wiki.eclipse.org/ECE_2019_Community_Day&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;EclipseCon Europe Community Day wiki&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;And, don’t forget to attend our new event this year — Community Evening on Tuesday, October 22. This is your opportunity to participate in more casual, interactive events and enjoy a beverage with your community colleagues. A bar offering beer, wine, water, and juice will be available. &lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;To register for EclipseCon Europe and for Community Day, click&lt;/span&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/registration&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;here&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;__________________________&lt;/span&gt;&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;JakartaOne Livestream Wrap-Up&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;The first-ever JakartaOne Livestream event was a huge success with more than 1,400 registered attendees. The online conference, held September 10, marked the release of the first vendor-neutral, Java EE 8-compatible release of Jakarta EE following the new Jakarta EE Specification Process.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;We first knew this event would be bigger than expected when several well-respected leaders in the Java EE community graciously and enthusiastically agreed to join the JakartaOne Livestream Program Committee. Led by Committee Chair, Reza Rahman, committee members Adam Bien, Ivar Grimstad, Arun Gupta, Josh Juneau, along with Tanja Obradovic from the Eclipse Foundation, put in a huge effort to plan the conference.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;One of the committees’ toughest jobs was selecting 16 conference papers for presentation from among the more than 50 high-quality submissions. Participants enjoyed a great mixture of introductory and overview sessions, including sessions on particular specifications, cloud native topics, keynotes from Mike Milinkovich and James Gosling, as well as industry keynotes from Jakarta EE Working Group Steering Committee members IBM, Fujitsu, Oracle, Payara, Red Hat, and Tomitribe. Demos, panel discussions, and Q&amp;amp;A sessions rounded out the 18 hours of program material that were delivered.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;To see a list of the topics presented and access the session recordings, visit&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;jakartaone.org&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;.    &lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;__________________________&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;Jakarta EE 8 Release Highlights&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;The Jakarta EE 8 release is&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/release/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;now available&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; with 43 projects, more than 60 million lines of code, and full compatibility with Java EE 8.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;With the delivery of the Jakarta EE 8 Platform, the entire ecosystem — from software vendors to developers and enterprises — has all of the pieces needed to shape the future of cloud native Java and meet the modern enterprise’s need for cloud-based applications that resolve key business challenges.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;To ensure that cloud native Java applications are portable, secure, stable, and resilient,&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/compatibility/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;product compatibility certifications&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; are underway. We already have three products that are certified as compatible with the full Jakarta EE 8 platform:&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Eclipse GlassFish application server, version 5.1&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;IBM Open Liberty server runtime, version 19.0&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Red Hat WildFly application server, version 17.0&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Eclipse GlassFish and Open Liberty are also certified as Jakarta EE 8 web profile-compatible products.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Almost three dozen&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/specifications/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Jakarta EE specifications&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; are also available. Jakarta projects are listed&lt;/span&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/ee4j&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;here&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; and are included in our&lt;/span&gt;&lt;a href=&quot;https://projects.eclipse.org/?combine=&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;main project repository&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;. It’s time for everyone to get involved in the cloud native Java community and engage in turning the huge potential for cloud native Java into reality.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;__________________________&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;Our Free Cloud Native Java E-Book Is Now Available&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;To mark the significance of the Jakarta EE 8 release, we also released a free e-book,&lt;/span&gt;&lt;a href=&quot;https://jakarta-4753786.hs-sites.com/cloud-native-java-eBook&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Fulfilling the Vision for Open Source, Cloud Native Java&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;, on September 10. The e-book includes insights from some of the leading voices in enterprise Java and the Jakarta EE Working Group. It explores:&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Why the world needs open source, cloud native Java&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;The common vision for cloud native Java that has emerged&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;The many benefits of cloud native Java for software vendors, developers, and enterprises&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Why it’s time for all Java stakeholders to get involved in the Jakarta EE Working Group&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Priorities for evolving cloud native Java in the short- and long-term&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;The vital role of the Eclipse Foundation in supporting cloud native Java evolution&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;a href=&quot;https://jakarta-4753786.hs-sites.com/cloud-native-java-eBook&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;u&gt;Download the e-book today&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;__________________________&lt;/span&gt;&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;A Look Back at September Events&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;September was a busy month for Jakarta EE and cloud native Java events as we participated in the JakartaOne Livestream event, described earlier, as well as&lt;/span&gt;&lt;a href=&quot;https://www.oracle.com/code-one/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Oracle Code One&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; and&lt;/span&gt;&lt;a href=&quot;https://heapcon.io/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;HeapCon&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;. Check out the blogs about Oracle Code One by&lt;/span&gt;&lt;a href=&quot;https://blog.payara.fish/payara-services-at-oracle-code-one-2019&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Payara&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; and&lt;/span&gt;&lt;a href=&quot;https://www.tomitribe.com/blog/tomitribe-at-codeone-2019/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Tomitribe&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;A quick note about Oracle Code One: Everyone at the Eclipse Foundation was extremely proud when our executive director, Mike Milinkovich, accepted the&lt;/span&gt;&lt;a href=&quot;https://www.globenewswire.com/news-release/2019/09/17/1916531/0/en/The-Eclipse-Foundation-Wins-Duke-s-Choice-Award-for-Open-Source-Contributions-to-the-Java-Ecosystem.html&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Duke’s Choice Award&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; on behalf of the Jakarta EE community at the conference.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;__________________________&lt;/span&gt;&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Stay Connected With the Jakarta EE Community&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;The Jakarta EE community promises to be very active and there are a number of channels to help you stay up to date with all of the latest and greatest news and information. Tanja Obradovic’s&lt;/span&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-engagement&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;blog&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; offers a sneak peek at the community engagement plan, which includes:&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rteindent1&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;Social media:&lt;a href=&quot;https://twitter.com/jakartaee&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Twitter&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Facebook&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;LinkedIn Group&lt;/u&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;rteindent1&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;Mailing lists:&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-family: Arial; font-size: 11pt;&quot;&gt;jakarta.ee-community@eclipse.org&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; and &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-family: Arial; font-size: 11pt;&quot;&gt;jakarta.ee-wg@eclipse.org&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rteindent1&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;Newsletters, blogs, and emails:&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot; style=&quot;text-decoration: none;&quot;&gt; &lt;u&gt;Eclipse newsletter&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://jakartablogs.ee/#main-content&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Jakarta EE blogs&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;, monthly update emails to &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-family: Arial; font-size: 11pt;&quot;&gt;jakarta.ee-community@eclipse.org&lt;/span&gt;&lt;u&gt;,&lt;/u&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; and community blogs on&lt;/span&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1JflN_xJ9d5ZWu5VUbDV9Spj7mc8WuPGMfd6EZgabXz0/edit#gid=0&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;“how are you involved with Jakarta EE”&lt;/u&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;rteindent1&quot; dir=&quot;ltr&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;·&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: 'Times New Roman'; font-size: 6.999999999999999pt;&quot;&gt;      &lt;/span&gt;Meetings:&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Jakarta Tech Talks&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Jakarta EE Update&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;, Jakarta Town Hall, and Eclipse Foundation events and conferences, such as&lt;/span&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;EclipseCon Europe&lt;/u&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;Subscribe to your preferred channels today. And, get involved in the&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/membership/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Jakarta EE Working Group&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; to help shape the future of open source, cloud native Java. To learn more about Jakarta EE-related plans and check the date for the next Jakarta Tech Talk, be sure to bookmark the&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt; &lt;/span&gt;&lt;u&gt;Jakarta EE Community Calendar&lt;/u&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: #000000; font-family: Arial; font-size: 11pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 09 Oct 2019 17:07:56 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Payara Server is Jakarta EE 8 Compatible!</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/CwG1q5Igpgg/20191009-payara.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/CwG1q5Igpgg/20191009-payara.php</link>
	<description>Payara Services and the Eclipse Foundation, Inc. today announced the application server ,Payara Server, a Jakarta EE 8 compatible implementation.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/CwG1q5Igpgg&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 09 Oct 2019 15:00:00 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: Open Source Gerrymandering</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4203</guid>
	<link>https://www.aniszczyk.org/2019/10/08/open-source-gerrymandering/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Over the years, I have spent a lot of time thinking about and working on open source communities… from bootstrapping projects out of corporations (or broken communities), to starting brand new open source foundations.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&quot;Good governance never depends upon laws, but upon the personal qualities of those who govern… The most important element of government, therefore, is the method of choosing leaders&quot;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/1166767809185165312?ref_src=twsrc%5Etfw&quot;&gt;August 28, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I was recently having a conversation with an old colleague about bringing an open source project out of a company into the wild and how to setup the project for success. A key part of that discussion involved setting up the governance for the project and what that means. There was also discussion how neutral and open governance under a nonprofit foundation can be good for certain projects as &lt;/span&gt;&lt;a href=&quot;http://openlife.cc/blogs/2010/november/how-grow-your-open-source-project-10x-and-revenues-5x&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;research&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; has shown that neutral foundations can promote growth and community better than other approaches. Also the conversation led to a funny side discussion on the concept of &lt;/span&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gerrymandering&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;gerrymandering&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; and open source.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-full wp-image-4315&quot; height=&quot;722&quot; src=&quot;https://www.aniszczyk.org/wp-content/uploads/2018/02/gerrymandering.png&quot; width=&quot;994&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;For those who arenâ€™t familiar with the term, itâ€™s become popular in the US political lexicon as a â€œpractice intended to establish a political advantage for a particular party or group by manipulating district boundaries.â€� A practical example of this is from my town of Austin TX which is in district 35 which snakes all the way from Austin to San Antonio for &lt;/span&gt;&lt;a href=&quot;https://www.politifact.com/texas/statements/2018/aug/16/beto-orourke/texas-one-nations-most-gerrymandered-states/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;some reason&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The same concept of gerrymandering can apply to open source communities as open source projects can act like mini political institutions (or bigger ones in the case of Kubernetes). I shared some of my favorite examples with my friend so I figured Iâ€™d write this down for future reference and share it with folks as you really need to read the â€œfine printâ€� to find these at times.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Cassandra&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Apache Software Foundation (ASF) is a fantastic open source organization that has been around for a long time (they celebrated their 20th anniversary) and has had a lot of impact across the world. The way projects are governed in the ASF are through the &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/theapacheway/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, which places a lot of emphasis on â€œcommunity over codeâ€� amongst some other principles which are great practices for open source projects to follow.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;There have been some interesting governance issues and lessons learned over the years in the ASF, in particular it can be challenging when you have a strong single vendor associated with a project as was with the case with Cassandra awhile ago:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;The Apache Software Foundation is really out of line in their actions with Cassandra IMO. Meeting notes: &lt;a href=&quot;https://t.co/TQXvF0pfex&quot;&gt;https://t.co/TQXvF0pfex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Kelly Sommers (@kellabyte) &lt;a href=&quot;https://twitter.com/kellabyte/status/794377137092497408?ref_src=twsrc%5Etfw&quot;&gt;November 4, 2016&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As the ASF board noted in &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/foundation/records/minutes/2016/board_minutes_2016_08_17.txt&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;the minutes&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; from its meeting with DataStax representatives, “The Board expressed continuing concern that the PMC was not acting independently and that one company had undue influence over the project.” There was some interesting &lt;/span&gt;&lt;a href=&quot;https://www.theregister.co.uk/2016/11/14/datastax_versus_asf_staxeit/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;press&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; around the time this happened:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œJagielski told me in an interview, echoing what &lt;/span&gt;&lt;/i&gt;&lt;a href=&quot;http://www.mail-archive.com/dev@cassandra.apache.org/msg10122.html&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;he’d said&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; on the Cassandra mailing list, that undue influence conflicts with project leadership obligations established by the ASF. As he suggested, the ASF tried many times to get a DataStax-heavy Project Management Committee (PMC) to pay attention to alleged trademark and other &lt;/span&gt;&lt;/i&gt;&lt;a href=&quot;http://apache.org/foundation/press/Project-PR-BrandGuidelines.pdf&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;violations&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, to no avail. Whatever DataStax’s positive influence on the development of the projectâ€”in other wordsâ€”it failed to exercise equivalent influence on governing the project in ASF fashion.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The ASF basically forced a reorganization of the Cassandra PMC to be in more in lines with its values and then caused the primary vendor behind the project to pull engineers off the open source project.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Containerd&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The &lt;/span&gt;&lt;a href=&quot;https://containerd.io/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;containerd&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; project is an industry-standard container runtime with an emphasis on simplicity, robustness and portability. The history of the project comes from being born at Docker where their open source projects had a governance policy essentially aligned with the BDFL philosophy with one of their project founders.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In &lt;a href=&quot;https://cncf.io&quot;&gt;CNCF&lt;/a&gt;, (which containered is a project of), project governance documents arenâ€™t considered static and evolve over time to meet the needs of their community. For example, when containerd &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/announcement/2017/03/29/containerd-joins-cloud-native-computing-foundation/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;joined&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; the CNCF their governance was geared towards a BDFL approach but over time evolved to a more &lt;/span&gt;&lt;a href=&quot;https://github.com/containerd/project/pull/16&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;neutral&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; approach that spread authority across maintainers.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Foundry&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Foundry is an open source community that has a large and mature ecosystem of PaaS focused projects. In the Cloud Foundry Foundation (CFF), they have a&lt;/span&gt;&lt;a href=&quot;https://www.cloudfoundry.org/wp-content/uploads/2017/01/CFF_Bylaws.pdf&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;unique governance clauses&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; in regards to how affiliates are treated and voting.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Pivotal Platinum Director Voting Power. The Platinum Director appointed by Pivotal (â€œPivotal Directorâ€�) shall have five (5) votes on any matter submitted to a vote of the Board. (i) On a date one (1) year after the incorporation date set forth in the Certificate, the number of Pivotal Directorâ€™s votes will be reduced to three (3). (ii) On a date two (2) years after the incorporation date set forth in the Certificate, the number of Pivotal Directorâ€™s votes will be reduced to one (1)&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;To bootstrap the foundation, the originating company wanted a &lt;/span&gt;&lt;b&gt;little bit of control&lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; for a couple of years, which can make sense in some situations as the beginning of a foundation can be a tumultuous time. In my opinion, itâ€™s great to see the extra vote clause expire after 2 years, however, itâ€™s still very unfair to the early potential members of the organization.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Another example of open source gerrymandering can be how votes are represented by member companies that are owned by a single entity:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;At no time may a Member and its Affiliates have more than one Director who is an employee, officer, director, or consultant of that Member, except that Pivotal, EMC, and VMware, though Affiliates, shall each have one (1) Director on the Board).&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This is an interesting tidbit given that Dell owns Pivotal, EMC and VMWare. In some organizations, usually there is &lt;/span&gt;&lt;a href=&quot;https://github.com/cdfoundation/charter/blob/master/CHARTER.md#9-subsidiaries-and-related-companies&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;legal language&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that collapses owned entities into one vote.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I personally Iâ€™m not the biggest fan of this approach as it makes things unfair from the beginning and can be an impediment to wide adoption across the industry. There can definitely be reasons of why you need to do this in the formation phase but it should be done with caution. If you saw the recent news that Pivotal was being spun back into VMWare and their &lt;/span&gt;&lt;a href=&quot;https://www.theregister.co.uk/2019/07/25/pivotal_ford_write_down/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;woes with adoption&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, it shouldnâ€™t come as a surprise in my opinion as one company was bearing too much of the burden in my opinion and not building a diverse community of contributors.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Native Computing Foundation (CNCF)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you remember the early days of the container and orchestration wars, there was a lot different technologies, approaches and corporate politics. When CNCF was founded, the &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/foundation/commit/0659ab992e0e3e04324beff1214f17cb8896cd4c#diff-778830d439b70bb644e57dac072da3e6&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;original charter&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; included a clause that upgraded certain startup members from Silver to Platinum that were important in the ever evolving cloud native ecosystem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œThe Governing Board may extend a Platinum membership at the Silver Membership Scale rates on a year-by-year basis for up to 5 years to startup companies with revenues less than $50 million that are deemed strategic technology contributors by the Governing Board.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In my opinion, that particular piece in the charter was important in bringing together all the relevant startups to the table along with the big established companies at the time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In terms of projects, the CNCF Technical Oversight Committee (TOC) defines a set of &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/toc/blob/master/PRINCIPLES.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;principles&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; to steward the technical community. The most important principle is around a minimum viable governance that enables projects to be self-governing. TOC members are available to provide guidance to the projects but do not control them.Â &lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Happy Friday! &lt;img alt=&quot;ğŸŒŸ&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f31f.png&quot; style=&quot;height: 1em;&quot; /&gt; NEW on the blog today from &lt;a href=&quot;https://twitter.com/cra?ref_src=twsrc%5Etfw&quot;&gt;@cra&lt;/a&gt; &lt;img alt=&quot;ğŸ‘‰&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f449.png&quot; style=&quot;height: 1em;&quot; /&gt;&quot;&lt;a href=&quot;https://twitter.com/hashtag/CNCF?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#CNCF&lt;/a&gt; Technical Principles and Open &lt;a href=&quot;https://twitter.com/hashtag/Governance?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Governance&lt;/a&gt; Success&quot; &lt;a href=&quot;https://t.co/YEeGn8iqUV&quot;&gt;https://t.co/YEeGn8iqUV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— CNCF (@CloudNativeFdn) &lt;a href=&quot;https://twitter.com/CloudNativeFdn/status/1167455648768045056?ref_src=twsrc%5Etfw&quot;&gt;August 30, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Unlike Apache and the &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/theapacheway/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, CNCF does not require its hosted projects to follow any specific governance model. Instead, CNCF &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/toc/blob/master/process/graduation_criteria.adoc&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;specifies&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that graduated projects need to â€œexplicitly define a project governance and committer process.â€� So in reality, CNCF operates under the principle of subsidiarity, encouraging decisions to be made at the lowest project level consistent with their resolution.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;GitLab&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;GitLab is a fantastic open source project AND company that I admire deeply for their &lt;/span&gt;&lt;a href=&quot;https://about.gitlab.com/handbook/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;transparency&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;. The way the GitLab &lt;/span&gt;&lt;b&gt;project&lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; is structured is that itâ€™s wholly owned by the GitLab company (they also own the trademark). To the credit of GitLab, they make this clear via their &lt;/span&gt;&lt;a href=&quot;https://about.gitlab.com/company/stewardship/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;stewardship principles&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; online and discuss what they consider enterprise product work versus project work.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;nice &quot;stewardship promises&quot; from &lt;a href=&quot;https://twitter.com/gitlab?ref_src=twsrc%5Etfw&quot;&gt;@gitlab&lt;/a&gt; based on their opencore business model, all opencore biz should do this &lt;a href=&quot;https://t.co/mqGkOeejp3&quot;&gt;https://t.co/mqGkOeejp3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/819988877335207938?ref_src=twsrc%5Etfw&quot;&gt;January 13, 2017&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Iâ€™d love for them in the future to separate the branding from the company, project and the product as I believe itâ€™s confusing and dilutes the messaging, but that’s just my opinion &lt;img alt=&quot;ğŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Istio&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Istio is a popular service mesh project originated at Google. It has documented its governance model publicly: &lt;/span&gt;&lt;a href=&quot;https://github.com/istio/community/blob/master/STEERING-COMMITTEE.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;https://github.com/istio/community/blob/master/STEERING-COMMITTEE.md&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;However, as you can see, itâ€™s heavily tilted towards Google and there seems to be no limits on the number of spots on the steering committee from one company which is a common tactic in open governance approaches to keep things fair. On top of that, Google owns the trademark, domains and other project assets so Iâ€™d consider Istio to be heavily gerrymandered in Googleâ€™s versus the communityâ€™s interest.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;JCP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I had the pleasure of serving on the Java Community Process (JCP) Executive Committee for a few years while I was at Twitter. Itâ€™s a great organization that drives standardization across the Java ecosystem, some of the &lt;/span&gt;&lt;a href=&quot;https://jcp.org/en/procedures/jcp2#3.7&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;fine print is interesting though&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œThe EC is composed of 25 Java Community Process Members whose seats are allocated as follows: 16 Ratified Seats, 6 Elected Seats, and 2 Associate Seats, plus one permanent seat held by Oracle. (Oracle’s representative must not be a member of the PMO.) The EC is led by a non-voting Chair from the PMO.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This essentially gives Oracle a permanent seat on the Executive Committee.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Hereâ€™s another fun clause:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Ballots to approve Umbrella JSRs that define the initial version of a new Platform Edition Specification or JSRs that propose changes to the Java language are approved if (a) at least a two-thirds majority of the votes cast are “yes” votes, (b) a minimum of 5 “yes” votes are cast, and (c) Oracle casts one of the “yes” votes. Ballots are otherwise rejected.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This essentially gives Oracle a veto vote on any JSR.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Note: The coolest thing the JCP has done is contribute the EE specification work to the Eclipse Foundation and form the Jakarta project over there to &lt;/span&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/how-participate-advancing-jakarta-ee-specification&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;steward things in an open way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Knative&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Knative, like Istio mentioned above, is an open source project that was born at Google and controlled by Google. There have been a lot of discussion lately about this as Google recently decided to not openly govern the project and move it to a neutral foundation:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;I'm pretty disappointed to see Knative forgo open governance.&lt;a href=&quot;https://t.co/fVhbP687rs&quot;&gt;https://t.co/fVhbP687rs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The growth and user focus of Kubernetes, Helm and many others show that CNCF is a great home for open communities.&lt;/p&gt;
&lt;p&gt;OSS is better if we work together in neutral spaces&lt;/p&gt;
&lt;p&gt;— brendandburns (@brendandburns) &lt;a href=&quot;https://twitter.com/brendandburns/status/1179176440647913472?ref_src=twsrc%5Etfw&quot;&gt;October 1, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes operates under the auspices of the CNCF and openly governed by the &lt;/span&gt;&lt;a href=&quot;https://kubernetes.io/blog/2019/10/03/2019-steering-committee-election-results/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes Steering Committee&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (KSC). The Kubernetes project has &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/cncf-kubernetes-project-journey/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;grown significantly over time&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, but has done a great job of keeping things openly governed and inclusive in my opinion, especially compared to its project size these days. The KSC &lt;/span&gt;&lt;a href=&quot;https://github.com/kubernetes/community/blob/master/governance.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;governs the project&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; along with a variety of sub working groups. Also, the Kubernetes trademark is neutrally owned by the CNCF and openly governed via the &lt;/span&gt;&lt;a href=&quot;https://github.com/kubernetes/community/blob/master/governance.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Conformance Working Group&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; which decides how certification works for the community, which there are nearly &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/certification/software-conformance/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;100 certified solutions&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; out there!&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Spinnaker&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Spinnaker project was originally born at Netflix and recently spun out into the &lt;/span&gt;&lt;a href=&quot;https://cd.foundation&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Continuous Delivery Foundation&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (CDF) as an openly &lt;/span&gt;&lt;a href=&quot;https://www.spinnaker.io/community/governance/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;governed&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; project. The project assets, from domains to github to trademarks are all neutrally owned by the community through the CDF.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Vault&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;https://github.com/hashicorp/vault&quot;&gt;Vault&lt;/a&gt; is a fantastic and widely used secrets management tool from Hashicorp. Itâ€™s a single vendor controlled open source project that has an open core model with an open source and enterprise versions (see &lt;/span&gt;&lt;a href=&quot;https://www.hashicorp.com/products/vault/enterprise&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;). What this essentially means is that the buck stops at the single vendor on what features/fixes end up in the open source version, most likely that wonâ€™t include things that they sell in their enterprise offering.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I hope you learned something new about open source projects, foundations and communities as these things can be a little bit more complicated as you dig into the details. Itâ€™s really important to note that there is a difference between open source and &lt;/span&gt;&lt;a href=&quot;https://github.com/opengovernance/opengovernance.dev&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;open governance&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; and you should always be skeptical of a project that claims itâ€™s truly open if only one for profit company owns all the assets and control. While thereâ€™s nothing wrong with this approach at all, most organizations donâ€™t set expectations up front which can lead to frustrations down the road. Note, thereâ€™s nothing wrong with single vendor controlled open source projects, I think they are great but I think they need to be upfront, similar to what GitLab stewardship principles on what they will put in open source versus their enterprise version.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In conclusion, as with anything in life, you should always read the fine print of an open source communities charter or legal paperwork to understand how it works. The lesson here is that every organization or project has its own rules and governance and itâ€™s important that you understand how decisions are made and who has ownership of project assets like trademarks.&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 08 Oct 2019 18:20:53 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Launches The Eclipse Cloud Development Tools Working Group for Cloud Native Software!</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/dfzAahWUoX0/20191008-ECD.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/dfzAahWUoX0/20191008-ECD.php</link>
	<description>The Eclipse Foundation today announced the launch of the Eclipse Cloud Development Tools Working Group (ECD WG)&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/dfzAahWUoX0&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 08 Oct 2019 18:00:00 +0000</pubDate>
</item>
<item>
	<title>Jens von Pilgrim: JShell in Eclipse</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4884093826755448868.post-5953202569285019139</guid>
	<link>https://jevopisdeveloperblog.blogspot.com/2019/10/jshell-in-eclipse.html</link>
	<description>Java 9 introduced a new command line tool: JShell. This is a read–eval–print loop (REPL) for Java with some really nice features. For programmers I would assume writing a test is the preferred choice, but for demonstrating something (in a class room for example) this is a perfect tool if you are not using a special IDE such as &lt;a href=&quot;https://www.bluej.org/&quot;&gt;BlueJ&lt;/a&gt; (which comes with its own REPL).
&lt;br /&gt;
The interesting thing about running JShell inside Eclipse is to use a project's classpath. This is how to run JShell inside Eclipse out of the box (given Java &amp;gt;=9 and Eclipse -- I have used 2019-09 -- are installed), using the currently selected project as the base line:

&lt;br /&gt;
&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt;Select &quot;Run &amp;gt; External Tools &amp;gt; External Tools Configuration&quot;&lt;/li&gt;
&lt;li&gt;Enter the following settings:
  &lt;ul&gt;
&lt;li&gt;Name: JShell
    &lt;/li&gt;
&lt;li&gt;Location: /usr/bin/jshell -- or whereever your jshell command is found on your system
    &lt;/li&gt;
&lt;li&gt;Working Directory: ${project_loc}
    &lt;/li&gt;
&lt;li&gt;Arguments: --class-path &quot;${project_classpath}&quot;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
You can of course change these settings according to your needs. Now, when you run the tool (&quot;Run &amp;gt; External Tools &amp;gt; JShell&quot; or via the toolbar item), a console view is opened with the shell.
It is almost like working with JShell from command line except tab etc. is not working (instead the cursor moves around).
&lt;br /&gt;
For people not aware of JShell, there is a &lt;a href=&quot;http://cr.openjdk.java.net/~rfield/tutorial/JShellTutorial.html#jshell-scripts&quot;&gt;very good tutorial by Robert Field&lt;/a&gt;, and tons of other web pages about it.
&lt;br /&gt;
For the impatient reader, some hints:
&lt;br /&gt;
&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt;Inside JShell, you have some extra commands available after a prefix &quot;/&quot;, most notable &quot;/help&quot;
&lt;/li&gt;
&lt;li&gt;If you change anything in your code (in the Eclipse editor), this is not necessarily reflected in JShell. You need to call &quot;&lt;b&gt;/reset&lt;/b&gt;&quot; first!
&lt;/li&gt;
&lt;li&gt;You can define methods without a class, i.e. you can define functions. Syntax is similar to methods, though.
&lt;/li&gt;
&lt;/ul&gt;
&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-xrxK2szWZhs/XZhvgkCYPXI/AAAAAAAAAUc/vtiSnZX_KfsfMe7a1mSn6Ao-hQwJIYAfQCLcBGAsYHQ/s1600/JShellDemo.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;212&quot; src=&quot;https://2.bp.blogspot.com/-xrxK2szWZhs/XZhvgkCYPXI/AAAAAAAAAUc/vtiSnZX_KfsfMe7a1mSn6Ao-hQwJIYAfQCLcBGAsYHQ/s320/JShellDemo.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;JShell as external tool inside Eclipse&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
Note: There is also a rather old &lt;a href=&quot;https://stackoverflow.com/questions/1562600/is-there-an-eclipse-plugin-to-run-system-shell-in-the-console&quot;&gt;discussion at Stackoverflow&lt;/a&gt; in which the &quot;external tool&quot; solutions is explained as well. Apparently it seems that there were some problems fixed in the meantime, because in older posts you will find that some people had problems with this solution.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;</description>
	<pubDate>Tue, 08 Oct 2019 12:16:32 +0000</pubDate>
	<author>noreply@blogger.com (Jens v.P.)</author>
</item>
<item>
	<title>Mike Milinkovich: Re-Defining Cloud Development Tools</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1514</guid>
	<link>https://eclipse-foundation.blog/2019/10/08/re-defining-cloud-development-tools/</link>
	<description>&lt;p&gt;The Eclipse community is seriously on a roll these days. Hot on the heels of the &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che 7 release&lt;/a&gt;, we just announced the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/explore.php&quot;&gt;Eclipse Cloud Development (ECD) Tools Working Group&lt;/a&gt;, a vendor-neutral, open source collaboration that will focus on the evolution of development tools for, and in, the cloud.&lt;/p&gt;
&lt;p&gt;I haven’t seen an initiative with the potential impact on the development tools industry since the founding of the Eclipse Foundation back in 2004, when we hosted around 12 projects related to the Eclipse IDE.&lt;/p&gt;
&lt;p&gt;When the first Eclipse IDE was launched, it fulfilled the need for a vendor-neutral development environment that would help developers adapt to rapidly changing middleware technologies and business priorities including enterprise Java and Web services. Those were the megatrends at the time. And the impact of the Eclipse IDE was massive, as it drove a decade of enormous adoption and industry consolidation around developer tools.&lt;/p&gt;
&lt;p&gt;While the Eclipse IDE is still extremely relevant, better than ever, and is actively used by more than four million developers, today the megatrend is cloud development. And, the world needs open source technologies and tools to drive the development of cloud native applications. The purpose of the ECD Tools group is to deliver modern, extensible, web-based developer tool platforms that can be used by everyone to enable their own cloud enablement strategies.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Huge Demand for Open Source Cloud Development Technologies&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;We know from the responses to our developer surveys and the enthusiastic responses to our recent &lt;a href=&quot;https://jakarta.ee/&quot;&gt;Jakarta EE 8 release&lt;/a&gt; that there’s huge demand for open source cloud development technologies. More than 80 percent of the Java developers we surveyed earlier this year told us they either are already or plan to create cloud native applications within the next 12-18 months.&lt;/p&gt;
&lt;p&gt;However, many developers are well beyond the planning stage. The growth and explosion of the Kubernetes container orchestration platform confirms the urgency to deliver open source cloud development technologies is very real today.&lt;/p&gt;
&lt;p&gt;Che 7 is the world’s first Kubernetes-native IDE that’s built from the ground up for cloud native application development. It simplifies and accelerates cloud development by allowing developers who are not Kubernetes experts to immediately contribute to cloud native application development efforts. In turn, Che 7 relies upon &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt;, which provides a highly modular and extensible IDE platform built on modern web technologies that runs on both your desktop or in your browser.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Accelerating Open Source, Cloud Native Development&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The ECD Tools Working Group takes our open source cloud development initiatives to the next level.&lt;/p&gt;
&lt;p&gt;The Working Group will drive the evolution and widespread adoption of emerging standards for cloud-based developer tools, including language support, extensions, and developer workspace definition. These efforts will accelerate adoption of a Cloud IDE and container-based workspace management.&lt;/p&gt;
&lt;p&gt;With such a broad scope, it will come as no surprise to learn that the ECD Tools Working Group encompasses a wide range of open source cloud development projects, including &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt;, &lt;a href=&quot;https://www.theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/codewind/&quot;&gt;Eclipse CodeWind&lt;/a&gt;, &lt;a href=&quot;https://www.dirigible.io/&quot;&gt;Eclipse Dirigible&lt;/a&gt;, &lt;a href=&quot;https://projects.eclipse.org/projects/ecd.sprotty&quot;&gt;Eclipse Sprotty&lt;/a&gt;, and others.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Big-Name Support and Involvement&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;We could not create a working group of this magnitude and with this potential without the incredible level of support we’ve received from the founding members of this group.&lt;/p&gt;
&lt;p&gt;When companies such as Broadcom, EclipseSource, Ericsson, IBM, Intel, Red Hat, SAP, Software AG, Typefox, and others support an initiative so strongly from its earliest days, you get a sense of just how important it is considered to be. Every one of our founders is a respected leader in their space, and we have a mix of large corporations and smaller companies, which is always great to see.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Unstoppable Momentum&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;I want to thank everyone who has helped us create and launch the ECD Tools Working Group. With the incredible groundswell of interest, engagement, and participation we’re seeing from both world-leading corporations and passionate developers, I truly believe we are standing on the doorstep of a very exciting open source future for cloud development tools. And, I have no doubt this community will continue to grow and thrive.&lt;/p&gt;
&lt;p&gt;To learn more about getting involved with the ECD Tools Working Group, view the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt;Charter&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/wpga/eclipse_cloud_development_tools_participation_agreement.pdf&quot;&gt;ECD Tools Working Group Participation Agreement (WPGA)&lt;/a&gt;, or email us at membership@eclipse.org. You can also join the &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/ecd-tools-wg&quot;&gt;ECD Tools&lt;/a&gt; mailing list and follow @ECDTools on Twitter.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Tue, 08 Oct 2019 10:30:33 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: Participate in the 2019 IoT Commercial Adoption Survey!</title>
	<guid isPermaLink="false">6732 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/participate-2019-iot-commercial-adoption-survey</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;According to McKinsey, the Internet of Things (IoT) will have a total potential economic impact of up to $11.1 trillion a year by 2025. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;What are the leading industrial IoT use cases that will contribute to that impact? You tell us!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The&lt;a href=&quot;https://iot.eclipse.org/&quot;&gt; Eclipse IoT Working Group&lt;/a&gt; has launched the &lt;a href=&quot;https://www.surveymonkey.com/r/thabang-iotcomm&quot;&gt;2019 IoT Commercial Adoption Survey&lt;/a&gt; to help IoT ecosystem stakeholders get a better understanding of the IoT industry landscape and gain insights into the requirements, priorities, and challenges faced by organizations who are deploying and using commercial IoT solutions.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Take just a few minutes to complete the survey. Survey responses will be collected until October 28, 2019 and the results will be published in early December. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Thank you in advance for your participation!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.surveymonkey.com/r/thabang-iotcomm&quot;&gt;Take the survey now&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 07 Oct 2019 18:26:51 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: Removing “Contact Us</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=2371</guid>
	<link>https://papyrusuml.wordpress.com/2019/10/07/removing-contact-us/</link>
	<description>&lt;p&gt;Unfortunately, because of the larger amount of spam, I now have to remove off the “&lt;a href=&quot;https://papyrusuml.wordpress.com/wp-admin/post.php?post=678&amp;amp;action=edit&quot;&gt;Contact Us&lt;/a&gt;” page.&lt;/p&gt;



&lt;p&gt;If you want to contact us, I would recommend you go through our twitter account.&lt;/p&gt;</description>
	<pubDate>Mon, 07 Oct 2019 14:17:36 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: As a matter of factory, factories matter</title>
	<guid isPermaLink="false">https://medium.com/p/482d8adff094</guid>
	<link>https://medium.com/oracledevs/as-a-matter-of-factory-factories-matter-482d8adff094?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;We create collections all the time in Java, so making it easy was a priority in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/958/1*Tsgi3i2VJUncEXE73HwT5A.png&quot; /&gt;&lt;figcaption&gt;Factories have plural names in Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Facts about the Factories&lt;/h3&gt;&lt;p&gt;I published three blogs on the factories available in Eclipse Collections. There are static factories for each type in Eclipse Collections for both object and primitive types. The following blogs have examples of mutable, immutable and method chaining factories.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/@donraab/as-a-matter-of-factory-part-1-mutable-75cc2c5d72d9&quot;&gt;As a matter of Factory — Part 1 (Mutable)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/@donraab/as-a-matter-of-factory-part-2-immutable-8cb72ff897ee&quot;&gt;As a matter of Factory — Part 2 (Immutable)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/oracledevs/as-a-matter-of-factory-part-3-method-chaining-224217074d31&quot;&gt;As a matter of Factory — Part 3 (Method Chaining)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Preposition Preference&lt;/h3&gt;&lt;p&gt;Some developers prefer factory methods named “of”. Some developers prefer factory methods named “with”. Eclipse Collections provides support for both, except when it comes to method chaining, where “with” is the only option. Read the following blog to understand how symmetry helps validate that decision.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/preposition-preference-1f1c709b098b&quot;&gt;Preposition Preference&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Code Examples&lt;/h3&gt;&lt;p&gt;Here’s a Gist showing various examples of Object and Primitive factories in Eclipse Collections.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/df466e77027b385c45ca62d6f73d6a65/href&quot;&gt;https://medium.com/media/df466e77027b385c45ca62d6f73d6a65/href&lt;/a&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=482d8adff094&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/as-a-matter-of-factory-factories-matter-482d8adff094&quot;&gt;As a matter of factory, factories matter&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/oracledevs&quot;&gt;Oracle Developers&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Mon, 07 Oct 2019 03:08:13 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Eclipse Vert.x 3.8.2</title>
	<guid isPermaLink="true">https://vertx.io/blog/eclipse-vert-x-3-8-2</guid>
	<link>https://vertx.io/blog/eclipse-vert-x-3-8-2</link>
	<description>&lt;article&gt;&lt;p&gt;We have just released Vert.x 3.8.2, a bug fix release of Vert.x 3.8.x.&lt;/p&gt;
&lt;p&gt;Since the release of Vert.x 3.8.2, quite a few bugs have been reported. We would like to thank you all for reporting these issues.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Vert.x 3.8.2 deprecations and breaking changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/3.8.2-Deprecations-and-breaking-changes&quot;&gt;https://github.com/vert-x3/wiki/wiki/3.8.2-Deprecations-and-breaking-changes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vert.x 3.8.2 release notes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/3.8.2-Release-Notes&quot;&gt;https://github.com/vert-x3/wiki/wiki/3.8.2-Release-Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The artifacts have been deployed to &lt;a href=&quot;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.8.2%22&quot;&gt;Maven Central&lt;/a&gt; and you can get the distribution on &lt;a href=&quot;https://bintray.com/vertx/downloads/distribution/3.8.2/view&quot;&gt;Bintray&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can bootstrap a Vert.x 3.8.2 project using &lt;a href=&quot;https://start.vertx.io&quot;&gt;https://start.vertx.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The event bus client using the SockJS bridge are available from NPM, Bower and as a WebJar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/vertx3-eventbus-client&quot;&gt;https://www.npmjs.com/package/vertx3-eventbus-client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vert-x3/vertx-bus-bower&quot;&gt;https://github.com/vert-x3/vertx-bus-bower&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.webjars.org/&quot;&gt;http://www.webjars.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker images are also available on the &lt;a href=&quot;https://hub.docker.com/u/vertx/&quot;&gt;Docker Hub&lt;/a&gt;. The Vert.x distribution is also available from &lt;a href=&quot;http://sdkman.io/index.html&quot;&gt;SDKMan&lt;/a&gt; and &lt;a href=&quot;http://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy coding and see you soon on our user or dev &lt;a href=&quot;https://vertx.io/community&quot;&gt;channels&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: How to use Eclipse Theia as an IDE</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=42030</guid>
	<link>https://eclipsesource.com/blogs/2019/10/04/how-to-use-eclipse-theia-as-an-ide/</link>
	<description>&lt;p&gt;This article is part of a series where we provide an overview on how you get started with Eclipse Theia, how...&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/10/04/how-to-use-eclipse-theia-as-an-ide/&quot; rel=&quot;nofollow&quot;&gt;How to use Eclipse Theia as an IDE&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 04 Oct 2019 12:23:43 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: JakartaOne Livestream Wrap up</title>
	<guid isPermaLink="false">6731 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/%C2%A0jakartaone-livestream-wrap-%C2%A0</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;September 10th, 2019 was a big day in the Jakarta EE global circles. Not just that we released the very first version of the Jakarta EE, but we also got very ambitious and organized the very first JakartaOne Livestream conference. What an experience that was!&lt;/p&gt;

&lt;p&gt;The intention was to mark an important milestone, the release of the very first vendor neutral, Java EE 8 compatible release of Jakarta EE using the new Jakarta EE Specification Process. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;After almost two years since the Oracle announcement of Java EE contribution to Eclipse Foundation on September 10th, we’ll finally have the base level release that will enable existing products certified on Java EE 8 to move easily and seamlessly Jakarta EE 8 release. The release is a result of cross-community collaboration at the Eclipse Foundation, it has the same Java EE 8 APIs using the javax namespace, its Jakarta EE 8 TCKs are fully compatible with Java EE 8 TCKs, and new compatibility/branding process is available for compatible products.&lt;/p&gt;

&lt;p&gt;It was very obvious from the beginning that this may be bigger than we expected, here is why. We have approached a few well-respected leaders in Java EE community to help out and be on the JakartaOne Livestream Program Committee. What a thrill that was! Reza Rahman graciously accepted to be the Program Committee Chair, and the rest of the members of the committee were equally eager and interested to help out: Josh Juneau, Ivar Grimstad, Adam Bien, Arun Gupta and from the Eclipse Foundation - Tanja Obradovic. It was a great pleasure working with this team. &lt;/p&gt;

&lt;p&gt;We started the work on the conference in early June, and with all members having busy schedules and summer vacations, we made most of the time we had: made a plan and put out CFP for the conference. The response was another indicator that there is an interest in the wider community for something like this. We got well over 50 talk submissions of a great quality and we had a difficult task selecting the best. We had a great mixture of introductory / overview talks, specification specific talks, cloud native focused talks, keynotes from Mike Milinkovich and James Gosling, as well as industry keynotes from Jakarta EE Working Group Steering Committee members: Tomitribe, IBM, Fujitsu, Oracle, Payara, Red Hat, demos and panel discussions. We selected 16 talks, which meant 18 hours of the program with keynotes and panel discussions. Adam Bien accepted to be MC of the event and I would be available to help out. In the end, the Program Committee chose the following collection of talks and a reminder that the talks themselves can still be viewed via &lt;a href=&quot;http://jakartaone.org&quot;&gt;jakartaone.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You may call it beginner's luck, but on the day of the event, we had well over 1350 registered attendees, with a number of questions that were almost immediately answered on the chat by someone from the community. The level of positivity and the sense of the community coming together was overwhelming, illustrating the true power of the open source. With very few technical difficulties, talks were going one after another and even when we had issues Reza Rahman yet again was available to save the day with an additional Q&amp;amp;A session. &lt;img src=&quot;https://lh5.googleusercontent.com/rpH4NKJumLNaL7ho1lYvyyW13VNQRJEV4rR_RRDtr6dSwCzgNSI3_Bq1qePX7jVhKAjrv9MLlw_ADn5XKlTSDQD6xEhRHOciR8NFCh_1xk5ayTXo5GSEzxj3BCdm9JWZfZS9yA0g&quot; style=&quot;height: 349px; width: 624px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;And to leave the best for last - in terms of running the event, the work done by my colleagues of the Eclipse Foundation staff, was impressive. I could not ask for better help than working with Stephanie Swart, Laura Tran and Shabnam Mayel, as well as the great effort by all our marketing and web teams ahead of the event. The level of dedication, professionalism and readiness to improvise in order to deal with issues presented, was amazing. And did I mention for all four of us this was the very first conference we worked on! Let’s take a deep breath, enjoy the success for another moment before we start working on the next Jakarta EE release.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 03 Oct 2019 11:12:44 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Graduating from Minimal to Rich Java APIs</title>
	<guid isPermaLink="false">https://medium.com/p/c50192c8322f</guid>
	<link>https://medium.com/oracledevs/graduating-from-minimal-to-rich-java-apis-c50192c8322f?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Combining ease of learning with reduced code duplication for greater productivity.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*w-3rHigMPF3FM53M8rESgg.png&quot; /&gt;&lt;figcaption&gt;Happy Birthday Java!&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Happy Birthday Java&lt;/h3&gt;&lt;p&gt;Java turned 24 years old on May 23rd, 2019. This is an impressive amount of time for a programming language to be successful and to continue growing its developer community. Java continues to evolve, and the Java Community continues to innovate and grow.&lt;/p&gt;&lt;p&gt;Up until Java 8 (released in 2014), Java has more or less adhered to a minimal API design philosophy. This has worked out extremely well for Java, as a minimal API design tends to lower the initial learning curve and increase adoption by only requiring developers to learn a few basic concepts.&lt;/p&gt;&lt;h3&gt;Minimal API Design of Collections&lt;/h3&gt;&lt;p&gt;The &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html&quot;&gt;Collection&lt;/a&gt; interface has been available in Java since December 1998 when Java 2 was released. Collection has several mutating APIs including add, addAll, remove, removeAll, retainAll and clear. There are several testing methods including contains, containsAll, isEmpty and size. Every Collection can return its contents using the method toArray. The method &lt;em&gt;iterator&lt;/em&gt; allows for any iteration pattern to be implemented using a for loop or while loop. In March 2014, Java 8 was released and the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; interface was added with built-in iteration patterns (e.g. filter, map, reduce). The Collection interface was updated to include new default methods including the forEach, stream and parallelStream methods.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*jTxgoa2NbaQdIAj3vGCI0g.png&quot; /&gt;&lt;figcaption&gt;Collection API (1998), and Stream API (2014), with new default methods added on Collection&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Graduating to higher-level APIs&lt;/h3&gt;&lt;p&gt;As a programming language matures and enjoys mass adoption, it becomes important to address the needs of a more experienced developer population and to remain competitive with newer more nimble programming languages that may not be as concerned with preserving backwards compatibility between versions. The Java developer population (estimates around 12 million now) is already very familiar with the Java Collections APIs that have been available for over 20 years. Java is a great general purpose programming language, and gives developers the basic tools they need to create great applications. Since Java 8 was released, Java has started introducing higher-level APIs, especially in the Collections space. The Stream API which was added in Java 8 adds functional APIs to the existing Collection interfaces.&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/List.html&quot;&gt;List&lt;/a&gt; interface has also had a few new default methods added since Java 8. For example, we finally have a sort method available directly on List. Developers have been using the Collections class to sort instances of List since Java 2. Here is what the List interface looks like since Java 8.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*vyEwOnwVEgiN7Vpul0IMMw.png&quot; /&gt;&lt;figcaption&gt;List interface (December 1998) with default methods added (March 2014)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Most of the new functionality provided in Java 8 for Collection and List is available by calling the stream method, and then calling an appropriate method available on the Stream interface. The behaviors available on Stream interface are further extended by the collect method which can be passed a Collector. The method named collect on Stream is often described as a mutable reduction. There are a stock set of Collector implementations available on the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html&quot;&gt;Collectors&lt;/a&gt; class included since Java 8. &lt;a href=&quot;https://github.com/donraab/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; adds its own set of Collector implementations in its &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.2.0/org/eclipse/collections/impl/collector/Collectors2.html&quot;&gt;Collectors2&lt;/a&gt; class.&lt;/p&gt;&lt;p&gt;If we combine all of the functionality available in the List, Stream and Collectors class, you will see an evolution from the minimal API design of old, to a new richer API design.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*zY7B_wJfTFvCEOB0Z2QVUw.png&quot; /&gt;&lt;figcaption&gt;Combining the List, Stream and Collectors APIs&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Compare the combination API of List, Stream and Collectors with the existing rich API design in the &lt;a href=&quot;https://github.com/donraab/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.2.0/org/eclipse/collections/api/list/MutableList.html&quot;&gt;MutableList&lt;/a&gt; class, and you will begin to see some common patterns between them (sometimes with different names). These patterns are not new. They have been known and available for a very long time in different programming languages, but are now being discovered and learned by the Java developer community.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*e9xRYAcS7NeGVJBXqJpp6w.png&quot; /&gt;&lt;figcaption&gt;MutableList methods in Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Higher-level APIs help developers address a fundamental problem that minimal APIs can help create — Code Duplication. As you can see in the &lt;a href=&quot;https://github.com/donraab/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; MutableList interface, there are a large number of iteration patterns that were not included in the original minimal API design of the Java List interface. Because these iteration patterns were not provided in higher-level Java APIs along with the language, developers were required to implement these patterns on their own using the basic building blocks of iterator and indexed list access.&lt;/p&gt;&lt;p&gt;See my previous blog on &lt;a href=&quot;https://medium.com/@donraab/code-duplication-1e1f759a7fe3&quot;&gt;Code Duplication&lt;/a&gt; to learn more about iteration patterns.&lt;/p&gt;&lt;h3&gt;Advanced Learning vs. Basic Duplication&lt;/h3&gt;&lt;p&gt;Proponents of minimal API design will usually argue that a minimal API is easier to learn. This is true. If you believe that all you need to write code with Collections is an iterator and a for loop, you are correct. However, if all you have is an iterator, you will have to iterate the same patterns over and over again (Hammer, meet nail). More importantly, you will be leaving duplicate code for future readers to have to read.&lt;/p&gt;&lt;blockquote&gt;The more code you have to write, the more code others have to read.&lt;/blockquote&gt;&lt;p&gt;A Minimal API design results in more code having to be written, tested and maintained by application developers. A Rich API design results in more code having to be written, tested and maintained by library developers. If we all had shared code ownership over all the code written in the world, we would probably agree the least costly alternative would be to lean on library and language developers when appropriate to provide rich APIs for developers to use.&lt;/p&gt;&lt;blockquote&gt;Once you know the basics, learning more advanced concepts is a good thing&lt;/blockquote&gt;&lt;p&gt;Minimal API design has served its purpose well for the first 24 years of Java. It has led to mass adoption the Java programming language. Java developers have learned the basic patterns of using iterators, and are ready and willing to learn and graduate to using higher-level APIs.&lt;/p&gt;&lt;h3&gt;Too Minimal == Anemic &amp;amp;&amp;amp; Too Rich == Bloated&lt;/h3&gt;&lt;p&gt;It is both possible to have too little or too much API. Somewhere in the middle, an API will feel “Just Right”. Java complicates this goal for API designers by having support of both Object and primitive types.&lt;/p&gt;&lt;p&gt;Eclipse Collections provides as much interoperability as possible between Object and primitive types in Java. This results sometimes in a multiplicative effect in the number of APIs required. For example, the collect and sort methods on MutableList all have primitive versions for each of the primitive types. If we reduce the total number methods down to the number of total core concepts, the number of new concepts a developer has to learn is more reasonable. For instance, if you learn the &lt;em&gt;collect&lt;/em&gt; pattern in Eclipse Collections, which is a core concept, you will already know how all of the &lt;em&gt;collect*&lt;/em&gt; (e.g. collectInt, collectShort, etc.) methods work.&lt;/p&gt;&lt;p&gt;In the following picture, I’ve included only the core conceptual API of MutableList. I have dropped all “With” methods and all of the primitive methods except for “Int”. This removed around 40 methods total from the output.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*HNVLf6TZQlBTvGAF91JzNw.png&quot; /&gt;&lt;figcaption&gt;MutableList Core Concepts&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;It is enough to know how one primitive method works in order to understand how all of the other primitive methods work. If the developers of an API have &lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;Symmetric Sympathy&lt;/a&gt;, you will be able to easily understand and use each core API concept everywhere it is provided.&lt;/p&gt;&lt;h3&gt;The evolution of Java Date and Time&lt;/h3&gt;&lt;p&gt;Another example of an evolutionary change from a minimal API to a Rich API is in the Java Time library. Compare the methods on the Date class and LocalDate class available since Java 8.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*kgLwggED-S8HzFyAhDiXKQ.png&quot; /&gt;&lt;figcaption&gt;Date compared to LocalDate&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The Java time library has a much more humane API for dealing with dates and time. It does a great job balancing richness and minimalism.&lt;/p&gt;&lt;h3&gt;The source of the source&lt;/h3&gt;&lt;p&gt;The following source code was used to output all of the above APIs. You can use it output any methods of any classes you want. Try changing the Function for the grouping to get a different view into an API.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*ghO9ZlT1EIpHC8Q1bBNzHA.png&quot; /&gt;&lt;/figure&gt;&lt;pre&gt;public void outputMethodsByFirstLetter(Class&amp;lt;?&amp;gt;... classes)&lt;br /&gt;{&lt;br /&gt;    Function&amp;lt;Method, Character&amp;gt; firstLetter =&lt;br /&gt;            method -&amp;gt; Character.&lt;em&gt;valueOf&lt;/em&gt;(method.getName().charAt(0));&lt;br /&gt;&lt;br /&gt;    String classNamesString =&lt;br /&gt;            ArrayIterate.&lt;em&gt;collect&lt;/em&gt;(classes, Class::getSimpleName)&lt;br /&gt;                    .makeString();&lt;br /&gt;&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(&lt;br /&gt;            classNamesString);&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(&lt;br /&gt;            StringIterate.&lt;em&gt;repeat&lt;/em&gt;(&lt;strong&gt;'-'&lt;/strong&gt;, classNamesString.length()));&lt;br /&gt;&lt;br /&gt;    MutableList&amp;lt;Method&amp;gt; methods =&lt;br /&gt;            ArrayIterate.&lt;em&gt;flatCollect&lt;/em&gt;(&lt;br /&gt;                    classes,&lt;br /&gt;                    each -&amp;gt; ArrayAdapter.&lt;em&gt;adapt&lt;/em&gt;(each.getMethods()));&lt;br /&gt;&lt;br /&gt;    String output = methods.groupBy(firstLetter)&lt;br /&gt;            .collectValues(&lt;br /&gt;                    Method::getName,&lt;br /&gt;                    TreeSortedSetMultimap.&lt;em&gt;newMultimap&lt;/em&gt;())&lt;br /&gt;            .keyMultiValuePairsView()&lt;br /&gt;            .toSortedListBy(Pair::getOne)&lt;br /&gt;            .makeString(&lt;strong&gt;&quot;\n&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(output);&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println();&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Update: June 3, 2019&lt;/h4&gt;&lt;p&gt;The following source will show you the symmetric difference and intersection of two APIs. Just change the two classes you want to compare in the first method.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void symmetricDifferenceAndIntersectionOfApis()&lt;br /&gt;{&lt;br /&gt;    this.symmetricDiffAndIntersectionOfApis(Collectors.class, Collectors2.class);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;public void symmetricDiffAndIntersectionOfApis(Class&amp;lt;?&amp;gt; classOne, Class&amp;lt;?&amp;gt; classTwo)&lt;br /&gt;{&lt;br /&gt;    MutableSet&amp;lt;String&amp;gt; leftMethods =&lt;br /&gt;            Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(classOne.getMethods())&lt;br /&gt;                    .collect(this::methodNamePlusParms);&lt;br /&gt;    MutableSet&amp;lt;String&amp;gt; rightMethods =&lt;br /&gt;            Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(classTwo.getMethods())&lt;br /&gt;                    .collect(this::methodNamePlusParms);&lt;br /&gt;&lt;br /&gt;    String classNames = classOne.getSimpleName() + &lt;br /&gt;            &lt;strong&gt;&quot;, &quot; &lt;/strong&gt;+ &lt;br /&gt;            classTwo.getSimpleName();&lt;br /&gt;    this.symmetricDifference(leftMethods, rightMethods, classNames);&lt;br /&gt;    this.intersection(leftMethods, rightMethods, classNames);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;private String methodNamePlusParms(Method method)&lt;br /&gt;{&lt;br /&gt;    return method.getName() + &lt;strong&gt;&quot;(&quot; &lt;/strong&gt;+&lt;br /&gt;            ArrayIterate.&lt;em&gt;collect&lt;/em&gt;(method.getParameters(), Parameter::getType)&lt;br /&gt;                    .collect(Class::getSimpleName)&lt;br /&gt;                    .makeString() + &lt;strong&gt;&quot;)&quot;&lt;/strong&gt;;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;private void symmetricDifference(&lt;br /&gt;        MutableSet&amp;lt;String&amp;gt; leftMethods,&lt;br /&gt;        MutableSet&amp;lt;String&amp;gt; rightMethods,&lt;br /&gt;        String classNames)&lt;br /&gt;{&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(&lt;strong&gt;&quot;Symmetric Difference (&quot; &lt;/strong&gt;+ classNames + &lt;strong&gt;&quot;)&quot;&lt;/strong&gt;);&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(&lt;br /&gt;            StringIterate.&lt;em&gt;repeat&lt;/em&gt;(&lt;strong&gt;'-'&lt;/strong&gt;, &lt;br /&gt;                    (&lt;strong&gt;&quot;Symmetric Difference (&quot; &lt;/strong&gt;+ classNames + &lt;strong&gt;&quot;)&quot;&lt;/strong&gt;)&lt;br /&gt;                    .length()));&lt;br /&gt;    this.outputGroupByToString(leftMethods.symmetricDifference(rightMethods));&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;private void intersection(&lt;br /&gt;        MutableSet&amp;lt;String&amp;gt; leftMethods,&lt;br /&gt;        MutableSet&amp;lt;String&amp;gt; rightMethods,&lt;br /&gt;        String classNames)&lt;br /&gt;{&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(&lt;strong&gt;&quot;Intersection (&quot; &lt;/strong&gt;+ classNames + &lt;strong&gt;&quot;)&quot;&lt;/strong&gt;);&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(&lt;br /&gt;            StringIterate.&lt;em&gt;repeat&lt;/em&gt;(&lt;strong&gt;'-'&lt;/strong&gt;, &lt;br /&gt;                    (&lt;strong&gt;&quot;Intersection (&quot; &lt;/strong&gt;+ classNames + &lt;strong&gt;&quot;)&quot;&lt;/strong&gt;)&lt;br /&gt;                    .length()));&lt;br /&gt;    this.outputGroupByToString(leftMethods.intersect(rightMethods));&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;private void outputGroupByToString(RichIterable&amp;lt;String&amp;gt; methods)&lt;br /&gt;{&lt;br /&gt;    Function&amp;lt;String, Character&amp;gt; firstLetter = string -&amp;gt; Character.&lt;em&gt;valueOf&lt;/em&gt;(string.charAt(0));&lt;br /&gt;&lt;br /&gt;    String output = methods.groupBy(firstLetter)&lt;br /&gt;            .collectValues(&lt;br /&gt;                    each -&amp;gt; each,&lt;br /&gt;                    TreeSortedSetMultimap.&lt;em&gt;newMultimap&lt;/em&gt;())&lt;br /&gt;            .keyMultiValuePairsView()&lt;br /&gt;            .toSortedListBy(Pair::getOne)&lt;br /&gt;            .makeString(&lt;strong&gt;&quot;\n&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println(output);&lt;br /&gt;    System.&lt;strong&gt;&lt;em&gt;out&lt;/em&gt;&lt;/strong&gt;.println();&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Update: June 5, 2019&lt;/h4&gt;&lt;p&gt;I refactored the code for calculating the symmetric difference and intersection to use MutableSortedSet instead of MutableSet.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/1916931f67b7f5e418d3ca2db086f34d/href&quot;&gt;https://medium.com/media/1916931f67b7f5e418d3ca2db086f34d/href&lt;/a&gt;&lt;h3&gt;Learn something new every day&lt;/h3&gt;&lt;p&gt;Some developers may find a comprehensive API like Eclipse Collections intimidating. The good news is that with Eclipse Collections, you can learn and use the API at your own pace. For instance, MutableList extends java.util.List, so if you are familiar with the List API in Java, you are already familiar with the basics of the MutableList API in Eclipse Collections. If you have already been investing in learning Java Streams and Collectors, you can use these concepts with Eclipse Collections types as well. There are also more convenient eager methods directly on the collection types like MutableList themselves. If some of the different method names in Eclipse Collections seem strange, don’t worry there is a &lt;a href=&quot;https://medium.com/@donraab/a-rose-by-any-other-name-e15060d4c98e&quot;&gt;blog that can help you translate from Streams method names to Eclipse Collections method names&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Learning new things like iteration patterns will help you become a better developer in any language you program in. Over the years, I have learned and experimented with iteration pattern APIs in Smalltalk, Ruby, Scala, Groovy, Haskell, Clojure, Python and JavaScript. I’ve also written katas comparing five different Java Collections Frameworks. This makes it easier for me to travel between any of these languages and libraries when dealing with collections.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=c50192c8322f&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/graduating-from-minimal-to-rich-java-apis-c50192c8322f&quot;&gt;Graduating from Minimal to Rich Java APIs&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/oracledevs&quot;&gt;Oracle Developers&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Mon, 30 Sep 2019 22:11:23 +0000</pubDate>
</item>
<item>
	<title>N4JS: Instanceof Type Guards in N4JS</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-5441381820374499063</guid>
	<link>https://n4js.blogspot.com/2019/09/instanceof-type-guards-in-n4js.html</link>
	<description>&lt;h4&gt;Statically typed languages like Java use &lt;span&gt;instanceof&lt;/span&gt; checks to determine the type of an object at runtime. After a successful check, a type cast needs to be done explicitly in most of those languages. In this post we present how N4JS introduced type guards to perform these type casts implicitly. &lt;/h4&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-k8VG4ZChX4E/XR4Y74o1khI/AAAAAAAAAKs/rNn1qAac2Twtr3rlVi__edXAvjECND7GwCLcBGAs/s1600/tg_f1.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://1.bp.blogspot.com/-k8VG4ZChX4E/XR4Y74o1khI/AAAAAAAAAKs/rNn1qAac2Twtr3rlVi__edXAvjECND7GwCLcBGAs/s1600/tg_f1.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 12.8px;&quot;&gt;No error due to implicit cast in successful &lt;/span&gt;&lt;span&gt;instanceof&lt;/span&gt;&lt;span style=&quot;font-size: 12.8px;&quot;&gt; type guard&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;h4&gt;The example above&lt;span style=&quot;font-weight: normal;&quot;&gt; shows that strict type rules on the &lt;span&gt;any&lt;/span&gt; instance &lt;span&gt;a&lt;/span&gt; causes errors to show up when accessing the unknown property &lt;span&gt;pX&lt;/span&gt;. However, after asserting that &lt;span&gt;a&lt;/span&gt; is an instance of &lt;span&gt;X&lt;/span&gt;, the property &lt;span&gt;pX&lt;/span&gt; can be accessed without errors. A separate type cast is unnecessary, since type inference now also considers &lt;span&gt;instanceof&lt;/span&gt; type guard information.&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-LDRo370o02M/XR8SffBT-WI/AAAAAAAAALE/L0z7eK0-rpw45HfFvckQkxvoULiVrG3XwCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B11.00.31.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;130&quot; src=&quot;https://1.bp.blogspot.com/-LDRo370o02M/XR8SffBT-WI/AAAAAAAAALE/L0z7eK0-rpw45HfFvckQkxvoULiVrG3XwCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B11.00.31.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Hover information on variable access of &lt;span&gt;a&lt;/span&gt; shows the inferred type&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;The resulting type&lt;span style=&quot;font-weight: normal;&quot;&gt; is the intersection type of the original type (which is here &lt;span&gt;any&lt;/span&gt;) and of all type guards that must hold on a specific variable access (which is here only type &lt;span&gt;X&lt;/span&gt;). Keeping the original types &lt;span&gt;any&lt;/span&gt; or &lt;span&gt;Object&lt;/span&gt; is not necessary and could be optimised later. In case the original type is different, it is necessary to include it in the resulting intersection type. The reason is that the type guard could check for an interface only. If so, property accesses to properties of the original types would cause errors.&lt;/span&gt;&lt;/h4&gt;&lt;div&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-uMfGgEJdmJA/XR8g15OqgOI/AAAAAAAAALQ/TJvo54WPnd84n2N4rDYv-2xrLWlPZgX2QCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.04.37.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://1.bp.blogspot.com/-uMfGgEJdmJA/XR8g15OqgOI/AAAAAAAAALQ/TJvo54WPnd84n2N4rDYv-2xrLWlPZgX2QCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.04.37.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Re-definition of a type guarded variable&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt;Two distinct differences&lt;/b&gt; between type guards and type declarations are (1) their data flow nature and (2) their read-only effects. Firstly, when redefining (in the sense of the data flow) a variable, the type guard information gets lost. Consequently, subsequent accesses to the variable will no longer benefit from the type guard, since the type guard was invalidated by the re-definition. Secondly, only the original type information is considered for a redefinition. That means that the type guard does not change the expected type and, hence, does not limit the set of types that can be assigned to a type guarded variable.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-Tgjm3RwmYco/XR8sIy_XQWI/AAAAAAAAALc/smgNTaOcr_wbJC1mCDNN5QrNXXclTtzngCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.52.50.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;475&quot; src=&quot;https://1.bp.blogspot.com/-Tgjm3RwmYco/XR8sIy_XQWI/AAAAAAAAALc/smgNTaOcr_wbJC1mCDNN5QrNXXclTtzngCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.52.50.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Further examples for &lt;span&gt;instanceof&lt;/span&gt; type guards in N4JS&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt;Data flow analysis&lt;/b&gt; is essential for type guards and has been presented in a &lt;a href=&quot;https://n4js.blogspot.com/2018/08/control-flow-graphs-in-n4js_29.html&quot;&gt;previous post&lt;/a&gt;. Based upon this information, type information for each variable access is computed. Since also complicated data flows are handled correctly, such as in &lt;span&gt;for&lt;/span&gt; loops or &lt;a href=&quot;https://n4js.blogspot.com/2018/10/short-circuit-evaluation-in-n4js_17.html&quot;&gt;short circuit evaluation&lt;/a&gt;, type guard information is already available in composed condition expressions (see function &lt;span&gt;f3&lt;/span&gt; and &lt;span&gt;f5&lt;/span&gt; above). Aside from being able to nest &lt;span&gt;instanceof&lt;/span&gt; type guards (see function &lt;span&gt;f4&lt;/span&gt; above), they also can be used as a filter at the beginning of a function (see function &lt;span&gt;f6&lt;/span&gt; above) or inside a loop: Negating a type guard and then exiting the function or block leaves helpful valid type guard information on all the remaining control flow paths.&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Marcus Mews&lt;/span&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 30 Sep 2019 08:06:18 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>Alex Lagarde: Twitter Publish</title>
	<guid isPermaLink="true">https://alagarde.tumblr.com/post/187994565467</guid>
	<link>https://alagarde.tumblr.com/post/187994565467</link>
	<description>&lt;a href=&quot;https://publish.twitter.com/?query=https%3A%2F%2Ftwitter.com%2FFirstStopAdvice%2Fstatus%2F1177793826548793344&amp;amp;widget=Tweet&quot;&gt;Twitter Publish&lt;/a&gt;</description>
	<pubDate>Sat, 28 Sep 2019 03:57:16 +0000</pubDate>
</item>
<item>
	<title>Alex Lagarde: https://t.co/Qm59iujYRa— Kanye (@FirstStopAdvice) September 28, 2019</title>
	<guid isPermaLink="true">https://alagarde.tumblr.com/post/187994545027</guid>
	<link>https://alagarde.tumblr.com/post/187994545027</link>
	<description>&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p dir=&quot;ltr&quot; lang=&quot;und&quot;&gt;&lt;a href=&quot;https://t.co/Qm59iujYRa&quot;&gt;https://t.co/Qm59iujYRa&lt;/a&gt;&lt;/p&gt;â€” Kanye (@FirstStopAdvice) &lt;a href=&quot;https://twitter.com/FirstStopAdvice/status/1177793826548793344?ref_src=twsrc%5Etfw&quot;&gt;September 28, 2019&lt;/a&gt;&lt;/blockquote&gt;</description>
	<pubDate>Sat, 28 Sep 2019 03:55:50 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2019: Team Sports for Developers! Edge Computing Mini-Hackathon</title>
	<guid isPermaLink="false">2246 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/team-sports-developers-edge-computing-mini-hackathon</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Do you like to build gadgets and/or hack? Then get a team together for the &lt;a href=&quot;https://www.eclipsecon.org/europe2019/hackathon&quot; target=&quot;_blank&quot;&gt;Edge Computing Mini-Hackathon&lt;/a&gt;, organized by Edgeworx.&lt;/p&gt;

&lt;p&gt;Teams will be challenged to integrate at least one other Eclipse IoT project with Eclipse ioFog and showcase what they were able to accomplish. Representatives from all Eclipse projects are welcome to come help guide, coach, and influence participants to make use of their projects. There will be prizes for the standouts, plus giveaways (and fun) for all!&lt;/p&gt;

&lt;p&gt;The event is part of Community Night on Tuesday, October 22, from 19:30 - 22:00 in the Theater Stage room at the Forum.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/team-sports-developers-edge-computing-mini-hackathon&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/raspberry_pi.jpg?itok=Kv6nTVKk&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 26 Sep 2019 21:21:28 +0000</pubDate>
</item>
<item>
	<title>Lars Vogel: Eclipse 2019-12 UI enhancements</title>
	<guid isPermaLink="true">https://www.vogella.com/blog/posts/eclipse-ide-ui-enhancements/</guid>
	<link>https://www.vogella.com/blog/posts/eclipse-ide-ui-enhancements/</link>
	<description>So while you are still enjoying the 2019-09 release, the Eclipse team works hard to improve your UI experience.
For example, the perspective switcher will look in the next release similar to the other toolbar entries, which removes several little UI bugs on various platforms.
Here is a screenshot how it looks like in 2019-09.
Here is a preview how it will look like in 2019-12.
Other nice small enhancements are that the filter icons will actually look like filter icons and not like… moving something to the side.</description>
	<pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Dirigible: How Does Eclipse Dirigible Contribute to Eclipse Che 7?</title>
	<guid isPermaLink="false">http://dirigible.io/blogs/2019/09/25/how_does_eclipse_dirigible_contribute_to_eclipse_che_7</guid>
	<link>http://dirigible.io/blogs/2019/09/25/how_does_eclipse_dirigible_contribute_to_eclipse_che_7.html</link>
	<description>&lt;p&gt;Eclipse Che unites a wide range of different frameworks, programming languages, and development tools, and helps developers design and create next-level services on the Cloud. Eclipse Che provides you with a default Web IDE. However, Eclipse Che also allows you to plug in other IDEs, because the default IDE may not be able to cover your use case.&lt;/p&gt;

&lt;p&gt;For example, we work on Eclipse Dirigible – an open-source cloud development platform that comes with its own Web IDE. You can directly integrate the Eclipse Dirigible Web IDE in Eclipse Che. This means that you can create a workspace in Eclipse Chе using the Eclipse Dirigible Web IDE instead of the default Eclipse Theia IDE.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Fiori-UI-Theme&quot; class=&quot;img-responsive&quot; src=&quot;http://dirigible.io/img/posts/20190925/dirigible_fiori_che7.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-is-so-cool-about-that&quot;&gt;What is so cool about that?&lt;/h3&gt;

&lt;p&gt;Developers can run Eclipse Dirigible on whatever platform Eclipse Che 7 is deployed. The most notable example is the OpenShift platform offered by Red Hat. That way, the Eclipse Dirigible portfolio of services and features for business application development becomes available to the entire Che community.&lt;/p&gt;

&lt;h3 id=&quot;what-does-eclipse-dirigible-have-to-offer&quot;&gt;What does Eclipse Dirigible have to offer?&lt;/h3&gt;

&lt;p&gt;Now, let us take a look at what this portfolio currently consists of.
Eclipse Dirigible puts an emphasis on &lt;a href=&quot;https://www.dirigible.io/blogs/2018/12/05/you_dont_need_abs_to_model_apps.html&quot;&gt;low-code/no-code tools&lt;/a&gt; for developing business applications. As of version 3.4, Eclipse Dirigible provides the following tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NZGbQOwAlYE&quot;&gt;In-system development with server-side JavaScript&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;You can develop backend applications using Enterprise JavaScript.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enhanced RESTful frameworks - &lt;a href=&quot;https://www.dirigible.io/api/http_rs.html&quot;&gt;RS&lt;/a&gt; and &lt;a href=&quot;https://www.dirigible.io/api/http_rs-data.html&quot;&gt;RS data&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=im_BMYNnLZQ&quot;&gt;Entity data modeler&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;You can generate an application using predefined application templates.&lt;/p&gt;

    &lt;p&gt;&lt;img alt=&quot;Entity-Data-Modeler&quot; class=&quot;img-responsive&quot; src=&quot;http://dirigible.io/img/posts/20190925/dirigible_edm_che7.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/blogs/2018/12/05/you_dont_need_abs_to_model_apps.html&quot;&gt;Business process modeler&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;You can model process flows and implement in-system and Java tasks.&lt;/p&gt;

    &lt;p&gt;&lt;img alt=&quot;Business-Process-Modeler&quot; class=&quot;img-responsive&quot; src=&quot;http://dirigible.io/img/posts/20190925/dirigible_bpmn_che7.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/help/ide_modeler_database_schema.html&quot;&gt;Database modeler&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;You can design your own database schema with tables, views, and their relations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_FJwZQZo2A8&quot;&gt;Job scheduler&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;You can define declaratively and schedule jobs that run regularly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=zMnQBQbTPOE&quot;&gt;Message listener&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;You can create topics and queues and subscribe for events.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/blogs/2018/06/25/kubernetes_keycloak_postgresql_dirigible.html&quot;&gt;Kubernetes support&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;For productive use cases, we recommend that you use Kubernetes, Keycloak, and PostgreSQL.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-use-javascript-as-a-business-application-language&quot;&gt;Why use JavaScript as a business application language?&lt;/h3&gt;

&lt;p&gt;At Dirigible, we have decided to focus on JavaScript, because it has a small learning curve, and it is a well-known programming language that has proven itself in the context of web development throughout the years.&lt;/p&gt;

&lt;p&gt;For business application development, which is our case, JavaScript is just a tool, which lets you consume the standardized set of Enterprise APIs that we provide. Additionally, Dirigible allows you to set the default server-side JavaScript execution as synchronous, so you could develop your service in a callback-free way. For example, some of the most popular Enterprise APIs that you can use are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/api/database.html&quot;&gt;Database&lt;/a&gt; / &lt;a href=&quot;https://www.dirigible.io/api/database_dao.html&quot;&gt;Database DAO&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/api/http_client.html&quot;&gt;HTTP Client&lt;/a&gt; / &lt;a href=&quot;https://www.dirigible.io/api/http_client_async.html&quot;&gt;HTTP Client Async&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/api/cmis.html&quot;&gt;CMIS&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/api/http_request.html&quot;&gt;HTTP Request&lt;/a&gt; / &lt;a href=&quot;https://www.dirigible.io/api/http_response.html&quot;&gt;HTTP Response&lt;/a&gt; / &lt;a href=&quot;https://www.dirigible.io/api/http_rs.html&quot;&gt;HTTP RS&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dirigible.io/api/bpm_process.html&quot;&gt;BPM Process&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;are-there-any-alternatives-to-eclipse-dirigible&quot;&gt;Are there any alternatives to Eclipse Dirigible?&lt;/h3&gt;

&lt;p&gt;There are alternatives to Eclipse Dirigible and these are platforms such as Mendix and Force.com by Salesforce. However, you have to purchase the corresponding licenses to start using them.&lt;/p&gt;

&lt;p&gt;In the open-source world though, there are no alternatives to this day. There are other open-source platforms such as Eclipse Theia and Jupyter, but they are not competing directly with Eclipse Dirigible, because they specialize in other areas. For example, Eclipse Theia focuses on general-purpose code editing using the VSCode platform while Jupyter, on the other hand, is the right choice when it comes to big data analysis and data mining.&lt;/p&gt;

&lt;p&gt;However, none of these platforms provide what Eclipse Dirigible has to offer in terms of low-code/no-code tools for developing business applications. At least for now.&lt;/p&gt;

&lt;h3 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h3&gt;

&lt;p&gt;Thanks to the great collaboration with the Eclipse Che team, Eclipse Dirigible is on the right way of achieving its ultimate goal, which is to provide developers of business applications with the fastest turnaround time in the Cloud and a unique user experience at the same time.&lt;/p&gt;

&lt;p&gt;So why don’t you &lt;a href=&quot;https://www.dirigible.io&quot;&gt;give it a try&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;If there is something that you don’t like, or you think it can be improved, don’t hesitate to share your &lt;a href=&quot;https://github.com/eclipse/dirigible/issues&quot;&gt;feedback&lt;/a&gt;. The Eclipse Dirigible team will definitely appreciate it. That is one of the best things about the open-source community that we are all part of!&lt;/p&gt;

&lt;h3 id=&quot;resources&quot;&gt;Resources&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=AA3M-vuY3pY&quot;&gt;How to Run Eclipse Dirigible on Eclipse Che 7&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Wim Jongman: Blocked by an Eclipse Wizard?</title>
	<guid isPermaLink="false">623 at https://remainsoftware.com</guid>
	<link>https://remainsoftware.com/blog/blocked-eclipse-wizard</link>
	<description>&lt;span class=&quot;datestamp&quot;&gt;
      &lt;span class=&quot;date-display-single&quot;&gt;Tuesday, September 24, 2019&lt;/span&gt;  &lt;/span&gt;
        &lt;div class=&quot;field-item even&quot;&gt;
      There is a small but very useful patch in Eclipse 4.12 for people that do not want the UI to be blocked by wizards. There are many cases where it is desired that the underlying window can be reached WHILE the user is finishing the wizard.  That's why it's strange that the Eclipse Wizard demands from us to always have full and utter attention.      &lt;p class=&quot;clearfix&quot;&gt;&lt;a href=&quot;https://remainsoftware.com/node/623&quot;&gt;Read more&lt;/a&gt;&lt;/p&gt;
    &lt;/div&gt;</description>
	<pubDate>Tue, 24 Sep 2019 08:53:59 +0000</pubDate>
</item>
<item>
	<title>Niko Stotz: How to Render a (Hierarchical) Tree in Asciidoctor</title>
	<guid isPermaLink="false">https://www.nikostotz.de/blog/?p=443</guid>
	<link>https://www.nikostotz.de/blog/how-to-render-a-hierarchical-tree-in-asciidoctor/</link>
	<description>&lt;p&gt;Showing a hierarchical tree, like a file system directory tree, in Asciidoctor is surprisingly hard. We use PlantUML to render the tree on all common platforms.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;Example of rendered hierarchical tree&quot; class=&quot;wp-image-444&quot; src=&quot;https://www.nikostotz.de/blog/wp-content/uploads/2019/09/tree-in-asciidoctor.png&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;This tree is rendered from the following code:&lt;/p&gt;




&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;7&lt;br /&gt;8&lt;br /&gt;9&lt;br /&gt;10&lt;br /&gt;11&lt;br /&gt;12&lt;br /&gt;13&lt;br /&gt;14&lt;br /&gt;15&lt;br /&gt;16&lt;br /&gt;17&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;[plantuml, format=svg, opts=&quot;inline&quot;]&lt;br /&gt;
----&lt;br /&gt;
skinparam Legend {&lt;br /&gt;
    BackgroundColor transparent&lt;br /&gt;
    BorderColor transparent&lt;br /&gt;
    FontName &quot;Noto Serif&quot;, &quot;DejaVu Serif&quot;, serif&lt;br /&gt;
    FontSize 17&lt;br /&gt;
}&lt;br /&gt;
legend&lt;br /&gt;
Root&lt;br /&gt;
|_ Element 1&lt;br /&gt;
  |_ Element 1.1&lt;br /&gt;
  |_ Element 1.2&lt;br /&gt;
|_ Element 2&lt;br /&gt;
  |_ Element 2.1&lt;br /&gt;
end legend&lt;br /&gt;
----&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;It works on all Asciidoctor implementations that support &lt;tt&gt;asciidoctor-diagram&lt;/tt&gt; and renders well in both HTML and PDF. Readers can select the text (i.e. it’s not an image), and we don’t need to ship additional files.&lt;/p&gt;



&lt;p&gt;We might want to externalize the boilerplate:&lt;/p&gt;




&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;7&lt;br /&gt;8&lt;br /&gt;9&lt;br /&gt;10&lt;br /&gt;11&lt;br /&gt;12&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;[plantuml, format=svg, opts=&quot;inline&quot;]&lt;br /&gt;
----&lt;br /&gt;
!include asciidoctor-style.iuml&lt;br /&gt;
legend&lt;br /&gt;
Root&lt;br /&gt;
|_ Element 1&lt;br /&gt;
  |_ Element 1.1&lt;br /&gt;
  |_ Element 1.2&lt;br /&gt;
|_ Element 2&lt;br /&gt;
  |_ Element 2.1&lt;br /&gt;
end legend&lt;br /&gt;
----&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;i&gt;asciidoctor-style.iuml&lt;/i&gt;

&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;skinparam Legend {&lt;br /&gt;
    BackgroundColor transparent&lt;br /&gt;
    BorderColor transparent&lt;br /&gt;
    FontName &quot;Noto Serif&quot;, &quot;DejaVu Serif&quot;, serif&lt;br /&gt;
    FontSize 17&lt;br /&gt;
}&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Thanks to &lt;a href=&quot;https://forum.plantuml.net/10200/dont-require-dot-for-shapeless-diagrams-and-svg-output&quot;&gt;PlantUML’s impressive reaction time&lt;/a&gt;, we soon won’t even need Graphviz installed.&lt;/p&gt;



&lt;p&gt;Please find all details in the &lt;a href=&quot;https://github.com/enikao/asciidoctor-tree&quot;&gt;example repository&lt;/a&gt; and &lt;a href=&quot;https://nikostotz.de/blog/tree-in-asciidoctor.html&quot;&gt;example HTML&lt;/a&gt; / &lt;a href=&quot;https://nikostotz.de/blog/tree-in-asciidoctor.pdf&quot;&gt;example PDF&lt;/a&gt; rendering.&lt;/p&gt;</description>
	<pubDate>Sat, 21 Sep 2019 15:16:27 +0000</pubDate>
        <enclosure url="https://www.nikostotz.de/blog/wp-content/uploads/2019/09/tree-in-asciidoctor.png" length="2854" type="image/png"/>
</item>
<item>
	<title>Cedric Brun: Let's Do It! Obeo loves The SeaCleaners</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/obeo-environment-theseacleaners</guid>
	<link>https://cedric.brun.io/eclipse/obeo-environment-theseacleaners/</link>
	<description>&lt;p&gt;I am deeply convinced a company is not only an economical actor. It has a much wider responsibility as any decision also has &lt;strong&gt;social&lt;/strong&gt;, &lt;strong&gt;environmental&lt;/strong&gt; or even &lt;strong&gt;political&lt;/strong&gt; implications.&lt;/p&gt;

&lt;p&gt;Looking at our environment state, its recent evolution and how it is forecasted to evolve indeed the task in front of us is huge. It would be easy to dismiss this as a problem our governments and big organizations should step up to, and indeed those in power have the responsibility, the ability and leverage to act and maybe bend those charts.&lt;/p&gt;

&lt;p&gt;But I have a motto to &lt;em&gt;“Focus on what you can control, then you can act”&lt;/em&gt; and so do I.&lt;/p&gt;

&lt;p&gt;Obeo participates and hosts quite a few events each year and we are often struck by the nonsensical nature of the “goodies” industry and what global model they promote: built at the cheapest price, moved across the globe, distributed at the event and then pretty quickly to the bin.&lt;/p&gt;

&lt;p&gt;Starting now, &lt;strong&gt;you won’t get any more goodies from us at conferences or events&lt;/strong&gt;, but instead we will gladly discuss how we try to do our part, as a company, in this global challenge.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/seacleaners.png&quot; style=&quot;float: right;&quot; /&gt;&lt;/a&gt;      
&lt;/figure&gt;

&lt;p&gt;In relation to this initiative to stop producing waste we do not deem necessary: &lt;strong&gt;Obeo is partnering with The SeaCleaners organization to reduce plastic waste&lt;/strong&gt;. &lt;a href=&quot;https://www.theseacleaners.org/en&quot; target=&quot;_blank&quot;&gt;The SeaCleaners&lt;/a&gt; is building a giant multihull boat designed to retrieve the plastic waste in the Ocean: The &lt;strong&gt;MANTA&lt;/strong&gt;. The organization vision is that the preservation of the oceans is a global, long-term and worldwide matter that integrates economic, social, human, educational and scientific perspectives. They do that in a dynamic and solidarity-based project.
You can &lt;a href=&quot;https://news.obeo.fr/en/post/world-cleanup-day-obeo-supports-the-seacleaners-to-reduce-plastic-waste&quot; target=&quot;_blank&quot;&gt;learn more about this initiative on Obeo’s website&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/technical-data/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/manta.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The &quot;Manta&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Furthermore, &lt;strong&gt;all the designs and blueprints of the Manta boat will be Open-Source&lt;/strong&gt; and that enable enhancements and duplication at a global scale, a principle clearly aligned with our values and what we do within the Eclipse community.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/technical-data/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/manta-tech.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The &quot;Manta&quot; boat technical data&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;That being said, it is &lt;strong&gt;just one step on a very specific part of our activity&lt;/strong&gt;, but a step starting a journey with more to do to improve the way Obeo operates regarding its environmental responsibility. When you start building awareness of our impact on all the ins and outs of what we do, you realize even a non-industrial, software company can contribute.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/obeo-environment-theseacleaners/&quot;&gt;Let's Do It! Obeo loves The SeaCleaners&lt;/a&gt; was originally published by Cédric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on September 20, 2019.&lt;/p&gt;</description>
	<pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>Webtools News: WTP 3.15 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink189</guid>
	<link>http://eclipse.org/webtools/releases/3.15</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.15 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-09
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-09/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.15 is included in the 2019-09
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-09/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in several
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.15 build&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink189&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 19 Sep 2019 14:14:59 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Eclipse Vert.x 4 milestone 3 released!</title>
	<guid isPermaLink="true">https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released</guid>
	<link>https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released</link>
	<description>&lt;article&gt;&lt;p&gt;We are extremely pleased to announce the third 4.0 milestone release of Eclipse Vert.x .&lt;/p&gt;
&lt;p&gt;Vert.x 4 is the evolution of the Vert.x 3.x series that will bring key features to Vert.x.&lt;/p&gt;
&lt;p&gt;This release aims to provide a reliable distribution of the current development of Vert.x 4 for people that
want to try it and provide feedback.&lt;/p&gt;
&lt;h4 id=&quot;futurisation&quot;&gt;Futurisation&lt;/h4&gt;
&lt;p&gt;Vert.x 4 extends the 3.x callback asynchronous model to a future/callback hybrid model.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NetClient&lt;/span&gt; &lt;/span&gt;{

  &lt;span class=&quot;hljs-comment&quot;&gt;// Since 3.0&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; port, String host, Handler&amp;gt; handler)&lt;/span&gt;&lt;/span&gt;;

  &lt;span class=&quot;hljs-comment&quot;&gt;// New in 4.0&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;Future &lt;span class=&quot;hljs-title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; port, String host)&lt;/span&gt;&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This third milestone makes progress and coverts the following stack modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vertx-service-discovery&lt;/li&gt;
&lt;li&gt;vertx-config&lt;/li&gt;
&lt;li&gt;vertx-circuit-breaker&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;data-object-mapping-for-service-proxies&quot;&gt;Data object mapping for service proxies&lt;/h4&gt;
&lt;p&gt;Vert.x 3 service proxies is a lightweight layer on top of Vert.x Event-Bus providing typed contracts.&lt;/p&gt;
&lt;p&gt;One can easily create a service on top of the Event-Bus.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-annotation&quot;&gt;@VertxGen&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DateService&lt;/span&gt; &lt;/span&gt;{

  &lt;span class=&quot;hljs-comment&quot;&gt;// callback the handler with the current date&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Handler&amp;gt; handler)&lt;/span&gt;
}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Service proxies request/response payload are of type JSON.&lt;/p&gt;
&lt;p&gt;Of course service proxies allow to map beans to JSON using data objects but this comes with two caveats&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;only JSON object can be mapped&lt;/li&gt;
&lt;li&gt;the data object must be a &lt;code&gt;@DataObject&lt;/code&gt; annotated bean with a &lt;code&gt;toJson()&lt;/code&gt; method and a JSON object constructor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In Vert.x 4 we extend the data object support to any Java class and any JSON type, e.g in this example&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-annotation&quot;&gt;@VertxGen&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DateService&lt;/span&gt; &lt;/span&gt;{

  &lt;span class=&quot;hljs-comment&quot;&gt;// encode the date with iso date format&lt;/span&gt;
  &lt;span class=&quot;hljs-annotation&quot;&gt;@Mapper&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toJson&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ZonedDateTime value)&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ZonedDateTime.format(value);
  }

  &lt;span class=&quot;hljs-comment&quot;&gt;// decode the date with iso date format&lt;/span&gt;
  &lt;span class=&quot;hljs-annotation&quot;&gt;@Mapper&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; ZonedDateTime &lt;span class=&quot;hljs-title&quot;&gt;fromJson&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String value)&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ZonedDateTime.parse(value);
  }

  &lt;span class=&quot;hljs-comment&quot;&gt;// callback the handler with the current date&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Handler&amp;gt; handler)&lt;/span&gt;
}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The generated code will then use these mappers to encode and decode JSON values.&lt;/p&gt;
&lt;p&gt;For reusability mappers can also be &lt;code&gt;java.util.function.Function&lt;/code&gt; instead, e.g&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-annotation&quot;&gt;@Mapper&lt;/span&gt; Function&lt;span class=&quot;hljs-annotation&quot;&gt;@Mapper&lt;/span&gt; Function toJson = ZonedDateTime::toString;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;mongo-client-gridfs&quot;&gt;Mongo client GridFS&lt;/h4&gt;
&lt;p&gt;The client can store and retrieve files and binary data using MongoDB GridFS.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;Future fut = gridFsClient.uploadFile(&lt;span class=&quot;hljs-string&quot;&gt;&quot;file.name&quot;&lt;/span&gt;);

fut.setHandler(res -&amp;gt; {
   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (res.succeeded()) {
     String id = res.result();
     &lt;span class=&quot;hljs-comment&quot;&gt;//The ID of the stored object in Grid FS&lt;/span&gt;
   } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {
     res.cause().printStackTrace();
   }
 });&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The client can perform the usual CRUD operations on files and also provide bucket management.&lt;/p&gt;
&lt;h4 id=&quot;vert-x-web-utilities&quot;&gt;Vert.x Web utilities&lt;/h4&gt;
&lt;p&gt;While the routing context will allow you to access the underlying request and response objects, sometimes it will be
more productive if a few shortcuts would be present to help with common tasks. A few helpers are present in
the context to facilitate with this task.&lt;/p&gt;
&lt;p&gt;Serve an “attachment”, an attachment is a response that will trigger the browser to open the response on the OS application
configured to handle a specific mime type. Imagine you’re generating a PDF:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;routingContext
  .attachment(&lt;span class=&quot;hljs-string&quot;&gt;&quot;weekly-report.pdf&quot;&lt;/span&gt;)
  .end(pdfBuffer);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perform a redirect to a different page or host. One example is to redirect to an HTTPS variant of the application:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;routingContext.redirect(&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://securesite.com/&quot;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Send a JSON response to the client:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// no need to specify the content type headers&lt;/span&gt;
rc.json(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; JsonObject().put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;vert.x&quot;&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Simple content type check:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (routingContext.is(&lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;)) {
  &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verify if a request is “fresh” with respect to the cache headers and the current values of last modified/ etag:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (rc.isFresh()) {
  &lt;span class=&quot;hljs-comment&quot;&gt;// client cache value is fresh perhaps we&lt;/span&gt;
  &lt;span class=&quot;hljs-comment&quot;&gt;// can stop and return 304?&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;other-changes&quot;&gt;Other changes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Groovy has been simplified in Vert.x 4 to remove code generation that was not really needed in practice&lt;/li&gt;
&lt;li&gt;The original Redis client deprecated in 3.7 has been removed replaced by the new Redis client&lt;/li&gt;
&lt;li&gt;JSON changes&lt;ul&gt;
&lt;li&gt;Jackson databind is now an optional Maven dependency which means that applications need to explicitly add this dependency to the classpath&lt;/li&gt;
&lt;li&gt;Specific Jackson utility methods are moved to specific Jackson classes&lt;/li&gt;
&lt;li&gt;Vert.x can use an alternative implementation than Jackson for JSON encoding and JSON decoding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The following components have reached their end of life and have been pruned&lt;ul&gt;
&lt;li&gt;MySQL / PostgreSQL async client replaced by the Vert.x SQL Client (since 3.8)&lt;/li&gt;
&lt;li&gt;AMQP bridge replaced by the Vert.x AMQP Client (since 3.7)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ramping-up-to-vert-x-4&quot;&gt;Ramping up to Vert.x 4&lt;/h4&gt;
&lt;p&gt;Instead of developing all new features exclusively in Vert.x 4, we introduce some of these features in the 3.x branch
so the community can benefit from them. The Vert.x 4 development focus on more fundamental changes that cannot be done
in the 3.x series.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; src=&quot;https://vertx.io/assets/blog/vertx-4-milestone3-release/vertx-4-timeline.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;This is the third milestone of Vert.x 4, we aim to release Vert.x 4 by the end of this year and you can of course
expect more milestones to outline the progress of the effort.&lt;/p&gt;
&lt;h4 id=&quot;finally&quot;&gt;Finally&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes&quot;&gt;deprecations and breaking changes&lt;/a&gt;
 can be found on the wiki.&lt;/p&gt;
&lt;p&gt;For this release there are no Docker images.,&lt;/p&gt;
&lt;p&gt;The release artifacts have been deployed to &lt;a href=&quot;https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone3&quot;&gt;Maven Central&lt;/a&gt; and you can get the distribution on &lt;a href=&quot;https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone3/&quot;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can bootstrap a Vert.x 4.0.0-milestone3 project using &lt;a href=&quot;https://start.vertx.io&quot;&gt;https://start.vertx.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The documentation has been deployed on this preview web-site &lt;a href=&quot;https://vertx-ci.github.io/vertx-4-preview/docs/&quot;&gt;https://vertx-ci.github.io/vertx-4-preview/docs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That’s it! Happy coding and see you soon on our user or dev &lt;a href=&quot;https://vertx.io/community&quot;&gt;channels&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2019: Call for BoFs</title>
	<guid isPermaLink="false">2228 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/call-bofs</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;At EclipseCon Europe, Tuesday has traditionally been &quot;BoF Night&quot; with a mix of pre-scheduled and onsite-organized Birds of a  Feather (BoF) sessions during the evening.&lt;/p&gt;

&lt;p&gt;This year, Community Evening expands this concept of attendee-organized activities, with a variety of content and gatherings designed to allow attendees to exchange ideas, learn new concepts, and have fun with each other. (There will be beer!) Community Evening includes an Edge Computing hackathon, a Project Pitch game, Eclipse Night School, and – of course – BoFs!&lt;/p&gt;

&lt;p&gt;If you would like to propose a pre-scheduled BoF, please use &lt;a href=&quot;https://www.eclipsecon.org/europe2019/node/add/bof-session&quot; target=&quot;_blank&quot;&gt;this submission form&lt;/a&gt; (you must be logged in first). If we have space, we will add your BoF to the Community Evening schedule.&lt;/p&gt;

&lt;p&gt;You may also organize a BoF after you arrive at the conference. Just check out the BoF Board near Registration to see how it's done.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/call-bofs&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/Bof_0.jpg?itok=z4jOLm7T&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 18 Sep 2019 22:29:03 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Eclipse Che 7 Enables Faster, Safer Development on Kubernetes</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1510</guid>
	<link>https://eclipse-foundation.blog/2019/09/17/eclipse-che-7-enables-faster-safer-development-on-kubernetes/</link>
	<description>&lt;p&gt;A major version release within the Eclipse Foundation community always provides us a reason to celebrate, congratulate, and thank all those who participated and contributed to the process. The delivery today of &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che 7&lt;/a&gt; is no exception. But Che 7’s arrival is more than great news for the Eclipse community, it’s also an industry game changer because it drastically reduces the learning and adoption curves of Kubernetes for enterprise application developers.&lt;/p&gt;
&lt;p&gt;Che 7 is the result of more than six years of collaboration and community contributions, including more than 20 vendors. It’s the world’s first Kubernetes-native IDE that has been built from the ground up specifically to enable developers to build cloud native applications. Fundamentally, Che 7 makes the developer and production environments the same on a scalable, collaborative, and secure platform specifically designed for building containerized applications. That platform addresses the major challenges developers face when working with Kubernetes.&lt;/p&gt;
&lt;p&gt;While Kubernetes does a fantastic job of operating applications at scale, it’s a complex system that most developers do not yet fully understand. With Che 7, the workspace configuration complexities and challenges developers face with Kubernetes have been eliminated. The platform can be deployed on a public Kubernetes cluster or an on-premises data center. Once deployed, it provides centrally hosted private developer workspaces that make projects easy to share and easy to manage, but with enterprise-grade security.&lt;/p&gt;
&lt;p&gt;Che 7 takes care of the “Kubernetization” of the development environment and the applications that a developer is building. It comes with a pre-packaged web-based IDE, based on an extended version of &lt;a href=&quot;https://www.theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt; to provide an in-browser Visual Studio Code experience. The fully integrated environment containerizes everything a developer needs to develop, build, run, test, and debug enterprise cloud native applications. This includes all of the tools and dependencies. This a big deal considering many enterprises cite a lack of integration of development tools and processes as a primary challenge of container adoption.&lt;/p&gt;
&lt;p&gt;The introduction of Che 7 represents another milestone in enterprise-grade, cloud native tooling innovation from the Eclipse Foundation and our community. It continues the Eclipse Foundation track record of delivering innovative tools to the development community, most notably through the Eclipse desktop IDE. Che is already integral to cloud native solutions from our vendor community, including Google, IBM, and Broadcom. It also comprises the core of &lt;a href=&quot;https://developers.redhat.com/products/codeready-workspaces/overview&quot;&gt;Red Hat CodeReady Workspaces&lt;/a&gt;, a new development environment for Red Hat OpenShift.&lt;/p&gt;
&lt;p&gt;As we move forward, our community will continue to deliver more innovation through the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt;Eclipse Cloud Development (ECD) Tools Working Group&lt;/a&gt;. In addition to Che, the ECD WG encompasses a broad portfolio of open source cloud development projects including Theia, &lt;a href=&quot;https://www.eclipse.org/codewind/&quot;&gt;Eclipse CodeWind&lt;/a&gt;, &lt;a href=&quot;https://www.dirigible.io/&quot;&gt;Eclipse Dirigible&lt;/a&gt;, &lt;a href=&quot;https://projects.eclipse.org/projects/ecd.sprotty&quot;&gt;Eclipse Sprotty&lt;/a&gt;, &lt;a href=&quot;https://orionhub.org/&quot;&gt;Eclipse Orion&lt;/a&gt;, and many more. The ECD WG will drive the evolution and adoption of de facto standards for cloud development tools, including language support, extensions, and developer workspace definitions.&lt;/p&gt;
&lt;p&gt;Of course, Che 7 and the ECD WG are made possible by our development community. So, I thank all of those who have participated to date and encourage everyone to take part in the innovation process. To that end, we are actively recruiting members to the Eclipse Cloud Development Working group and we encourage and welcome new members.&lt;/p&gt;
&lt;p&gt;Get started with Che 7 on any Kubernetes cluster at &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;https://www.eclipse.org/che/&lt;/a&gt; or learn more about getting started with Che at &lt;a href=&quot;https://www.eclipse.org/che/getting-started/&quot;&gt;https://www.eclipse.org/che/getting-started/&lt;/a&gt;. To get involved with the Che community and contribute to the project, visit: &lt;a href=&quot;https://github.com/eclipse/che/blob/master/CONTRIBUTING.md&quot;&gt;https://github.com/eclipse/che/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Tue, 17 Sep 2019 14:00:02 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: Eclipse Community Continues to Deliver on Open Source Commitment</title>
	<guid isPermaLink="false">6728 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/eclipse-community-continues-deliver-open-source-commitment</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Community is key. And the Eclipse Foundation’s community is on a roll.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;With all the work of the various &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/&quot;&gt;working groups&lt;/a&gt;, market launches, and now awards, it’s sometimes an effort just to keep up with all the activity. This month is no exception.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Last night at the Oracle Code One conference, our executive director, Mike Milinkovich, accepted the Duke’s Choice Award on behalf of the Jakarta EE community. The Eclipse Foundation’s &lt;a href=&quot;https://jakarta.ee/&quot;&gt;Jakarta EE Working Group&lt;/a&gt; was recognized for outstanding open source contributions to the Java ecosystem.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Now in its 17th year, the Duke’s Choice Awards celebrate invaluable innovation in Java-based technologies and contributions to Java. We’re thrilled with the award for Jakarta EE because there is no greater recognition of an achievement than the recognition that comes from colleagues and industry peers. On behalf of everyone at the Eclipse Foundation, thank you and congratulations to the dedicated members of the Jakarta EE community!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Beyond the award, last night’s news comes on the heels of the community’s successful launch of&lt;a href=&quot;http://bit.ly/2kqrmn5&quot;&gt; Jakarta EE 8&lt;/a&gt; last week and the launch today of &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che 7&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Last week, under an open, vendor-neutral process, a diverse community of the world’s leading Java organizations, hundreds of dedicated developers, and Eclipse Foundation staff delivered the Jakarta EE 8 Full Platform and Web Profiles, and related TCKs, as well as Eclipse GlassFish 5.1 certified as a Jakarta EE 8-compatible implementation. With 18 different&lt;a href=&quot;https://jakarta.ee/membership/members/&quot;&gt; member organizations&lt;/a&gt;, over 160 new committers, 43&lt;a href=&quot;https://projects.eclipse.org/projects/ee4j&quot;&gt; projects&lt;/a&gt;, and a codebase of over 61 million lines of code in 129 Git repositories, this was truly a massive undertaking — even by the Eclipse community’s standards.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Jakarta EE 8 offers an unprecedented opportunity for Java stakeholders to participate in advancing Jakarta EE to meet the modern enterprise’s need for cloud-based applications that resolve key business challenges. The community now has an open source baseline that enables the migration of proven Java technologies to a world of containers, microservices, Kubernetes, service meshes, and other cloud native technologies that have been adopted by enterprises over the last few years. &lt;/p&gt;

&lt;p&gt;We also published a new eBook, &lt;a href=&quot;http://bit.ly/CNJ-eBook&quot;&gt;Fulfilling the Vision for Open Source, Cloud Native Java&lt;/a&gt;. This free publication explores our community’s perspective on what cloud native Java is, why it matters so much to so many enterprises, and where Jakarta EE technologies are headed. If Java is important to your organization, download this eBook now.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;While all the preparations were being put in place for the launch of Jakarta EE 8, our team was also preparing for the release of Eclipse Che 7 earlier today.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Eclipse Che 7 is the world’s first Kubernetes-native IDE that has been built from the ground up specifically to enable developers to build cloud native applications. It makes the developer and production environments the same on a scalable, collaborative, and secure platform specifically designed for building containerized applications. And it addresses the major challenges developers face when working with Kubernetes.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Che 7 is a game changer because it enables faster, safer development with Kubernetes. The platform significantly simplifies writing, building, and collaborating on cloud native applications. It drastically reduces the learning and adoption curves of Kubernetes for enterprise application developers. It closes the gap between development and production environments. Most importantly, Che 7 makes it easier for developers to deliver value to their stakeholders and their customers. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Not to be outdone, the next quarterly simultaneous release of the Eclipse IDE is expected this Wednesday, September 18. As one of the world’s most popular desktop development environments, the Eclipse IDE is downloaded over 2 million times per month, and is the critical development environment for more than 4 million active users. Be sure to download the 2019-09 version of the IDE &lt;a href=&quot;https://www.eclipse.org/eclipseide/&quot;&gt;here. &lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Of course, all this activity is the result of the direct contribution of our community. So, congratulations and thank you to our dedicated, global community of thousands of developers, leading vendors across industries, and end user organizations. Your continued commitment and participation are what make all this possible.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;And stay tuned, we’ll be making a series of announcements, releasing community-generated content, and sharing updates over the next few months. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Meanwhile, Eclipse Che 7 will be showcased alongside Jakarta EE 8, MicroProfile, and &lt;a href=&quot;https://projects.eclipse.org/projects/ee4j.glassfish&quot;&gt;GlassFish&lt;/a&gt; at booth #3228 at Code One this week.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/jakartaee-javaee-java-eclipsefdn-dukeschoice-eclipseche-community&quot;&gt;#JakartaEE #JavaEE #Java #EclipseFdn #Duke'sChoice #EclipseChe #Community&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 17 Sep 2019 13:01:29 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Ditto Milestone 1.0.0-M1a</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2019-09-17-milestone-announcement-100-M1a.html</guid>
	<link>https://www.eclipse.org/ditto/2019-09-17-milestone-announcement-100-M1a.html</link>
	<description>&lt;p&gt;Today the Ditto team is happy to announce the first milestone of the upcoming release 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/1.0.0&quot;&gt;1.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have a look at the Milestone &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_100-M1a.html&quot;&gt;1.0.0-M1a release notes&lt;/a&gt; for what changed in detail.&lt;/p&gt;

&lt;p&gt;The main changes and new features since the last release &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_090.html&quot;&gt;0.9.0&lt;/a&gt; are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;initial contribution of Java client SDK&lt;/li&gt;
  &lt;li&gt;configurable OpenID Connect authorization servers&lt;/li&gt;
  &lt;li&gt;fine grained access for connections&lt;/li&gt;
  &lt;li&gt;scalable event publishing&lt;/li&gt;
  &lt;li&gt;typed entity IDs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;â€“&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Tue, 17 Sep 2019 04:00:00 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Eclipse Foundation Proposes Vulnerability Assessment Tool</title>
	<guid isPermaLink="true">https://www.infoq.com/news/2019/09/eclipse-vulnerability-assessment?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>https://www.infoq.com/news/2019/09/eclipse-vulnerability-assessment?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;The Eclipse Foundation is evaluating a proposal to incorporate a Vulnerability Assessment Tool that would help identify libraries with known security issues. The possible result would help inform developers when their application faces a downstream risk from using vulnerable components.&lt;/p&gt; &lt;i&gt;By Erik Costlow&lt;/i&gt;</description>
	<pubDate>Sat, 14 Sep 2019 05:12:00 +0000</pubDate>
</item>
<item>
	<title>Lars Vogel: Eclipse download increases by more than 25% in the last year</title>
	<guid isPermaLink="true">https://www.vogella.com/blog/posts/eclipse-ide-downloads-increased/</guid>
	<link>https://www.vogella.com/blog/posts/eclipse-ide-downloads-increased/</link>
	<description>Downloads have increased by more than 2,5 millions compared to last years release. The Eclipse Photon release was downloaded 1,8 million times. The Eclipse 2019-06 release was downloaded 4.3 millions times.
Great news for the Eclipse IDE!
That is more than 100% increase from June 2018 to the June 2019 release. While it is hard to speculate why this is happening we think that the increased stability and performance as well as modern solutions based on the language server for JavaScript and Rust have changed the perception of Eclipse.</description>
	<pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Jens Reimann: From building blocks to IoT solutions</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4293</guid>
	<link>https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/</link>
	<description>&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright is-resized&quot;&gt;&lt;a href=&quot;https://iot.eclipse.org&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Eclipse IoT&quot; class=&quot;wp-image-3752&quot; height=&quot;207&quot; src=&quot;https://dentrassi.de/wp-content/uploads/eclipse-IoT-light-300x269.png&quot; width=&quot;231&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;The Eclipse IoT ecosystem consists of around 40 different projects, ranging from embedded devices, to IoT gateways and up to cloud scale solutions. Many of those projects stand alone as “building blocks”, rather than ready to run solutions. And there is a good reason for that: you can take these building blocks, and incorporate them into your own solution, rather than adopting a complete, pre-built solution.&lt;/p&gt;



&lt;p&gt;This approach however comes with a downside. Most people will understand the purpose of building blocks, like “&lt;a href=&quot;https://www.eclipse.org/paho/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Paho&lt;/a&gt;” (an MQTT protocol library) and “&lt;a href=&quot;https://github.com/eclipse/milo&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Milo&lt;/a&gt;” (an &lt;a href=&quot;https://dentrassi.de/2019/07/06/eclipse-milo-0-3-updated-examples/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;OPC UA protocol library&lt;/a&gt;) and can easily integrate them into their solution. But on the cloud side of things, building blocks become much more complex to integrate, and harder to understand.&lt;/p&gt;



&lt;p&gt;Of course, the “getting started” experience is extremely important. You can simply &lt;a href=&quot;https://www.eclipse.org/downloads/packages/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;download an Eclipse IDE package&lt;/a&gt;, tailored towards your context (Java, Modelling, Rust, …), and are up and running within minutes. We don’t want you to design your deployment descriptors first, and then let you figure out how to start up your distributed cluster. Otherwise “getting started” will become a week long task. And a rather frustrating one.&lt;/p&gt;



&lt;h2&gt;Getting started. Quickly!&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;a href=&quot;https://dentrassi.de/2019/02/20/integrating-eclipse-iot/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Eclipse IoT building blocks&quot; class=&quot;wp-image-4121&quot; src=&quot;https://dentrassi.de/wp-content/uploads/Selection_583-300x236.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;During the &lt;a href=&quot;https://www.eclipse.org/lists/iot-wg/msg01495.html&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse IoT face-to-face meeting in Berlin&lt;/a&gt;, early this year, the Eclipse IoT working group discussed various ideas. How can we enable interested parties to get started, with as little effort as possible. And still, give you full control. Not only with a single component, which doesn’t provide much benefit on its own. But get you started with a complete solution, which solves actual IoT related problems.&lt;/p&gt;



&lt;p&gt;The goal was simple. Take an IoT use case, which is easy to understand by IoT related people. And provide some form of deployment, which gets people up and running in less than 15 minutes. With as little as possible external requirements. At best, run everything on your local laptop. Still, create everything in a close-to-production style of deployment. Not something completely stripped down. But use a way of deployment, that you could actually use as a basis for extending it further.&lt;/p&gt;



&lt;h2&gt;Kubernetes &amp;amp; Helm&lt;/h2&gt;



&lt;p&gt;We quickly agreed on &lt;a href=&quot;https://kubernetes.io/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Kubernetes&lt;/a&gt; as the runtime platform, and &lt;a href=&quot;https://helm.sh/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Helm&lt;/a&gt; as the way to perform the actual deployments. With Kubernetes being available even on a local machine (using &lt;a href=&quot;https://kubernetes.io/docs/setup/learning-environment/minikube/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;minikube&lt;/a&gt; on Linux, Windows and Mac) and being available, at the same time, in several enterprise ready environments, it seemed like an ideal choice. Helm charts seemed like an ideal choice as well. Helm designed directly for Kubernetes. And it also allows you to generate YAML files, from the Helm charts. So that the deployment only requires you to deploy a bunch of YAML files. Maintaining the charts, is still way easier than directly authoring YAML files.&lt;/p&gt;



&lt;h2&gt;Challenges, moving towards an IoT solution&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4341&quot; src=&quot;https://dentrassi.de/wp-content/uploads/logo_stack_proper_200px.png&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;A much tougher question was: how do we structure this, from a project perspective. During the meeting, it soon turned out, there would be two good initial candidates for “stacks” or “groups of projects”, which we would like to create.&lt;/p&gt;



&lt;p&gt;It also turned out that we would need some “glue” components for a package like that. Even though it may only be a script here, or a “readme” file there. Some artifacts just don’t fit into either of those projects. And what about “in development” versions of the projects? How can you point people towards a stable deployment, only using a stable (released) group of projects, when scripts and readme’s are spread all over the place, in different branches.&lt;/p&gt;



&lt;p&gt;A combination of “&lt;a href=&quot;https://www.eclipse.org/hono/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hono&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/ditto/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Ditto&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.eclipse.org/hawkbit/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hawkbit&lt;/a&gt;” seemed like an ideal IoT solution to start with. People from various companies already work across those three projects, using them in combination for their own purpose. So, why not build on that?&lt;/p&gt;



&lt;p&gt;But in addition to all those technical challenges, the governance of this effort is an aspect to consider. We did not want to exclude other Eclipse IoT projects, simply by starting out with “Hono, Ditto, and Hawkbit”. We only wanted to create “an” Eclipse IoT solution, and not “the” Eclipse IoT solution. The whole Eclipse IoT ecosystem is much too diverse, to force our initial idea on everyone else. So what if someone comes up with an additional group of Eclipse IoT projects? Or what if someone would like to add a new project to an existing deployment?&lt;/p&gt;



&lt;h2&gt;A home for everyone&lt;/h2&gt;



&lt;p&gt;Luckily, creating an Eclipse Foundation project solves all those issues. And the &lt;a href=&quot;https://projects.eclipse.org/projects/technology.packaging&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Packaging project&lt;/a&gt; already proves that this approach works. We played with the idea, to create some kind of a “meta” project. Not a real project in the sense of having a huge code base. But more a project, which makes use of the Eclipse Foundations governance framework. Allowing multiple, even competing companies, to work upstream in a joint effort. And giving all the bits and pieces, which are specific to the integration of the projects, a dedicated home.&lt;/p&gt;



&lt;p&gt;A home, not only for the package of “Hono, Ditto and Hawkbit”, but hopefully for other packages as well. If other projects would like to present their IoT solution, by combining multiple Eclipse IoT projects, this is their chance. You can easily become a contributor to this new project, and publish your scripts, documentation and walk-throughs, alongside the other packages.&lt;/p&gt;



&lt;p&gt;Of course everything will be open source, licensed under the EPL. So go ahead and fork it, add your custom application on top of it. Or replace an existing component with something, you think is even better than what we put it. We want to enable you to deploy what we provide in a few minutes. Offer you an explanation, what to expect from it, and what this IoT solution can do for you. And encourage you to play around with it. And enable you to extend it, and build something bigger.&lt;/p&gt;



&lt;h2&gt;Let’s get started&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;EclipseCon Europe 2019&quot; class=&quot;wp-image-4321&quot; src=&quot;https://dentrassi.de/wp-content/uploads/https___www.eclipsecon.org_sites_default_files_ECE_only_round_200x200.png.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;We created a new project &lt;a href=&quot;https://projects.eclipse.org/proposals/eclipse-iot-packages&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;proposal for the Eclipse IoT packages&lt;/a&gt; project. The project is currently in the community review phase. Once we pass the creation review, we will start publishing the content for the first package we have.&lt;/p&gt;



&lt;p&gt;The Eclipse IoT working group will also meet at the &lt;a href=&quot;https://www.eclipsecon.org/europe2019/eclipse-community-day&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;IoT community day&lt;/a&gt; of &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EclipseCon Europe 2019&lt;/a&gt;. Our goal is to present an initial version of the initial package. Ready to run!&lt;/p&gt;



&lt;p&gt;But even more important, we would like to continue our discussions around this effort. All contributions are welcome: code, documentation, additional packages … your ideas, thoughts, and feedback!&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/&quot; rel=&quot;nofollow&quot;&gt;From building blocks to IoT solutions&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 10 Sep 2019 07:07:37 +0000</pubDate>
</item>
<item>
	<title>Eclipse Dirigible: Release 3.5</title>
	<guid isPermaLink="false">http://dirigible.io/release/2019/09/10/news_new_release_3_5</guid>
	<link>http://dirigible.io/release/2019/09/10/news_new_release_3_5.html</link>
	<description>&lt;p&gt;New version &lt;a href=&quot;http://download.eclipse.org/dirigible/drops/R-3.5-201909101520/index.html&quot;&gt;3.5&lt;/a&gt; released.&lt;/p&gt;

&lt;p&gt;Release of &lt;em&gt;Type B&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;features&quot;&gt;Features&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Select branch for Push&lt;/li&gt;
  &lt;li&gt;Select branch for Pull&lt;/li&gt;
  &lt;li&gt;Usage Statistics&lt;/li&gt;
  &lt;li&gt;Import an arbitrary file into a workspace folder&lt;/li&gt;
  &lt;li&gt;Generic support for Statusbar&lt;/li&gt;
  &lt;li&gt;Programmatic Custom Datasources Support&lt;/li&gt;
  &lt;li&gt;Destinations API v4&lt;/li&gt;
  &lt;li&gt;jsonpath and alphanumeric APIs v4&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fixes&quot;&gt;Fixes&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Reset perspective option in Dirigible&lt;/li&gt;
  &lt;li&gt;Validation of the Listener handler to be done on Start&lt;/li&gt;
  &lt;li&gt;Restart the Listener after modification&lt;/li&gt;
  &lt;li&gt;Require confirmation from user on deletion of files, folders or projects&lt;/li&gt;
  &lt;li&gt;Problem with setTimestamp, setTime and setDate of Statement&lt;/li&gt;
  &lt;li&gt;Response API println and print donâ€™t work with UTF-8 characters&lt;/li&gt;
  &lt;li&gt;Security - Missing isInRole() method&lt;/li&gt;
  &lt;li&gt;Updating Date is not working on HANA database&lt;/li&gt;
  &lt;li&gt;Updating Boolean is not working on HANA database&lt;/li&gt;
  &lt;li&gt;Fiori theme fixes and improvements&lt;/li&gt;
  &lt;li&gt;Minor fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;statistics&quot;&gt;Statistics&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;4000+ Downloads&lt;/li&gt;
  &lt;li&gt;10K+ Docker Pulls&lt;/li&gt;
  &lt;li&gt;5.4K+ Trial Users&lt;/li&gt;
  &lt;li&gt;59K+ Sessions&lt;/li&gt;
  &lt;li&gt;179 Countries&lt;/li&gt;
  &lt;li&gt;354 Repositories in DirigibleLabs&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;operational&quot;&gt;Operational&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Available packages for download - &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-3.5-201909101520/index.html&quot;&gt;https://download.eclipse.org/dirigible/drops/R-3.5-201909101520/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker images at Docker Hub under DirigibleLabs organization:	&lt;a href=&quot;https://hub.docker.com/u/dirigiblelabs/&quot;&gt;https://hub.docker.com/u/dirigiblelabs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Maven Central artifacts by org.eclipse.dirigible namespace: &lt;a href=&quot;https://mvnrepository.com/artifact/org.eclipse.dirigible&quot;&gt;https://mvnrepository.com/artifact/org.eclipse.dirigible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The full list of bug-fixes and enhancements can be found here: &lt;a href=&quot;https://github.com/eclipse/dirigible/milestone/27&quot;&gt;https://github.com/eclipse/dirigible/milestone/27&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The source code is available at GitHub repository here: &lt;a href=&quot;https://github.com/eclipse/dirigible/tree/3.5.0&quot;&gt;https://github.com/eclipse/dirigible/tree/3.5.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The instant trial is updated accordingly with the released version here: &lt;a href=&quot;http://trial.dirigible.io&quot;&gt;http://trial.dirigible.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;enjoy&quot;&gt;Enjoy!&lt;/h4&gt;</description>
	<pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Cedric Brun: The Rising Adoption of Capella</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/rising-adoption-of-MBSE-capella</guid>
	<link>https://cedric.brun.io/eclipse/rising-adoption-of-MBSE-capella/</link>
	<description>&lt;p&gt;Witnessing an OSS technology getting together with a wide group of users is something I find exhilarating, I have experienced it with Acceleo, EMF Compare and Eclipse Sirius along the years, each time in different contexts and at different scales but discovering what is being done by others with a technology is always a source of excitement to me.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polarsys.org/capella/&quot; target=&quot;_blank&quot;&gt;Capella&lt;/a&gt;  was contributed by Thales to the Eclipse communities a few years ago already and fueled by the growing need to design Systems in a better way, by the interest in Model Based System Engineering and the qualities of the product in itself we can clearly see an acceleration in the last few months.&lt;/p&gt;

&lt;p&gt;If you are wondering what is Capella and what it’s used for, here is a 2-minute video we prepared for you:&lt;/p&gt;



&lt;p&gt;Worldwide awareness of this solution grows and adoption rises, organizations from Europe, North America and Asia are now using Capella and experiencing the benefits of using a tool which implements a method (coined “&lt;a href=&quot;https://www.polarsys.org/capella/arcadia.html&quot; target=&quot;_blank&quot;&gt;Arcadia&lt;/a&gt;”) and &lt;strong&gt;not only a language.&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://cedric.brun.io/images/blog/capelladay2019/forum-activity.png&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/capelladay2019/forum-activity.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;Capella Forum Activity&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Looking at the numbers, &lt;strong&gt;just for this summer : more than 1200 downloads each month&lt;/strong&gt;, a forum actvity which has been growing with a nice looking curve and monthly stats on &lt;a href=&quot;https://www.youtube.com/channel/UCfgwbb2h10V3tgJ59sbGBnQ/videos&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; reaching more than 2000 views: considering the size of the target audience this is a significant acceleration and that is without counting the deployment of &lt;a href=&quot;https://www.plm.automation.siemens.com/global/en/products/collaboration/product-architecture.html&quot; target=&quot;_blank&quot;&gt;System Modeling Workbench&lt;/a&gt; provided by Siemens which includes the technology.&lt;/p&gt;

&lt;p&gt;Adopters not only use it but speak about it and as with any other tool having an opportunity to understanding how others are using it is highly valuable.&lt;/p&gt;

&lt;p&gt;Rolls Royce, ArianeGroup or the Singapore University: they all have shared valuable information through the recent webinars :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.slideshare.net/Obeo_corp/webinar-july-2019-introduction-to-capella-and-arcadia-with-a-simple-system&quot; target=&quot;_blank&quot;&gt;Introduction to Arcadia Capella with a toy catapult project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=njW_zdE_FzI&quot; target=&quot;_blank&quot;&gt;Capella for large complex mechanical systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MBSE must become a team sport !&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More are coming and many already available through the &lt;a href=&quot;https://www.polarsys.org/capella/resources.html&quot; target=&quot;_blank&quot;&gt;Resources Page&lt;/a&gt;! BTW we can’t always get the authorization to keep them available online so your safest option is to register and attend.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://polarsys.org/capella/capella_day_munich_2019.html&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/capelladay2019/munich.jpg&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;Munich (Germany)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We also make sure to setup « in Real Life » opportunities to discuss Capella and MBSE. Occasions to talk with the team behind Capella and the experts arounds the world. Next up is Capella Day Munich 2019 in a couple of weeks (the 16th of September) organized by Thales and Obeo in conjunction with the  &lt;a href=&quot;https://modelsconf19.org/&quot;&gt;Models Conference 2019&lt;/a&gt;. Here is a glimpse of the program :&lt;/p&gt;

&lt;p&gt;The agenda is filled with general presentations, feedback by industrial users about their Capella deployment or specific add-ons/integration.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://polarsys.org/capella/capella_day_munich_2019.html#program&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/capelladay2019/program.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The program of Capella Day Munich 2019&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;You might &lt;a href=&quot;https://polarsys.org/capella/capella_day_munich_2019.html&quot; target=&quot;_blank&quot;&gt;want to hurry as we are almost sold out&lt;/a&gt; and such occasions are pretty unique!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I sincerely hope you’ll enjoy it, we are working hard to make it a success :-), if you can’t make it this time then know there are more occasions to come: &lt;a href=&quot;https://www.incose.org/events-and-news/search-events/2019/10/17/default-calendar/asia-oceania-systems-engineering-conference-2019---call-for-papers&quot; target=&quot;_blank&quot;&gt;AOSEC&lt;/a&gt; in Bangalore, EclipseCon in Germany (again!) where there might be a workshop focused on “MBSE at Eclipse” (Please add your name and interest on &lt;a href=&quot;https://wiki.eclipse.org/ECE2019_MBSE_at_Eclipse&quot; target=&quot;_blank&quot;&gt;the corresponding wiki page&lt;/a&gt; )&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/rising-adoption-of-MBSE-capella/&quot;&gt;The Rising Adoption of Capella&lt;/a&gt; was originally published by Cédric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on September 04, 2019.&lt;/p&gt;</description>
	<pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>Doug Schaefer: Time for Change</title>
	<guid isPermaLink="false">https://medium.com/p/54156200cab8</guid>
	<link>https://medium.com/@dougschaefer/time-for-change-54156200cab8?source=rss-8f7a70438965------2</link>
	<description>&lt;p&gt;First, let me get straight to the point. I have left BlackBerry/QNX and will be starting a new job in Ottawa next week. It’s a great opportunity to work on something new for a great company with a bunch of former colleagues I admire. As much as I’m looking forward to that much needed change, it sadly will take me away from the Eclipse community. This message is a goodbye and thank you.&lt;/p&gt;&lt;p&gt;Thinking back all the way to the beginning, I’m quickly overwhelmed by how many great people I have had the opportunity to work with thanks to the Eclipse CDT project. At the very beginning was Sky Matthews and John Prokopenko who let me weasel my way on as Rational’s technical lead on the project just as it was starting out in 2002 also at a time when I needed a change. Of course, I had a great team of developers at Rational with me that made it fun and easy. Not to mention the original team at QNX who were welcoming and made it easy to get involved. I have a special mention for Sebastien Marineau, CDT’s first project lead, who let me take a leadership role on the project and eventually hired me on at QNX to take over.&lt;/p&gt;&lt;p&gt;Then there was the early years on the CDT where we made our mark. Those early CDT Summits were so fun and really helped built up a team atmosphere. We had about a dozen companies sending contributors, a few of them competitors in the spirit of co-opetition, and we made it work. Then over the years we started getting independent contributors who just did it for the passion of building great C++ tooling they wanted to use themselves. It’s been a great mix and I am so lucky and proud to have been a part of it.&lt;/p&gt;&lt;p&gt;And of course, it was all topped off with our yearly EclipseCons. I am proud to have attended every one of the EclipseCon North America ones and was able to attend quite a few of the EclipseCon Europes in Germany. I have to thank Anne and Mike and Ralph and Wayne and Sharon and Perri and Donald and Ian and Lynn and all the Eclipse Foundation staff past and present for making me feel a part of the family. I always looked forward to the EclipseCon Express flights out of and return to Ottawa with many of them.&lt;/p&gt;&lt;p&gt;My fellow attendees at these conferences were amazing, from the first one at Disneyland where we had an overflow crowd at the CDT BOF and where I gave my first of many CDT talks, to all the friends I met at the bar or ran into at sessions, many of whom had nothing to do with CDT but made me feel so much a part of the bigger community. I will never forget the late nights in the bars chatting with friends like Michael Scharf and Ian Bull and Eric Cloninger and Gilles and Adrian and Jonah and Tom and so many others. As it turns out, last year in Ludwigsburg was a perfect finale where we had such a great time at the Nestor on Wednesday night. I will never forget you all.&lt;/p&gt;&lt;p&gt;I’m incredibly proud of what we built for the CDT. It still has the best indexer in the business, thanks to the parser we built back at Rational and the database I built at QNX and then with so many hands continually making it better and adjusting to the now ever changing C++ language spec. The Launch Bar achieved what I wanted by simplifying the Eclipse launch experience. CDT’s new Core Build fits naturally with the Launch Bar and makes it much simpler to integrate external build systems like CMake. And we have just started a GDB debug adapter using the debug adapter protocol which will pave the way to simplify integrating debuggers with the CDT.&lt;/p&gt;&lt;p&gt;The current set of active committers on the CDT have lately been pulling almost all the weight evolving it and getting releases out the door. Their great work has made my transition easier and will keep the CDT rolling along for years to come. And hopefully vendors will come back too and help provide funding for all this activity. We have an action plan to transition the project lead role. Follow the cdt-dev mailing list to find out more.&lt;/p&gt;&lt;p&gt;It’s sad to leave and the memories and friendships will be forever. I will keep my cdtdoug personal gmail account as a reminder of where I came from. But my new role will give me some much needed energy to keep things going for the next decade. I once questioned why you hardly see any retired engineers helping with open source projects or sharing their passion with the next generation. I promise you this, you will see me again.&lt;/p&gt;&lt;p&gt;Take care, and thank you.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=54156200cab8&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 03 Sep 2019 14:56:55 +0000</pubDate>
</item>
<item>
	<title>itemis: Xtext 2.19 Release – builds on Eclipse’s new infrastructure JIRO</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/xtext-2-19-release-builds-on-eclipses-new-infrastructure-jiro</guid>
	<link>https://blogs.itemis.com/en/xtext-2-19-release-builds-on-eclipses-new-infrastructure-jiro</link>
	<description>&lt;p&gt;The Xtext team has released version 2.19.0 of Eclipse Xtext &amp;amp; Xtend. The current version is mainly a maintenance release. After working hard on some new features in the past releases, it was time for summer vacation during the current release period and for some focus on build engineering tasks. Still over 350 pull requests made it into the short release period.&lt;/p&gt; 
&lt;img alt=&quot;Update_1024px_Twitter_Fotolia_107769487_S_&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Eclipse/Now%20Available%20Xtext%202.19/Update_1024px_Twitter_Fotolia_107769487_S_.jpg?width=881&amp;amp;name=Update_1024px_Twitter_Fotolia_107769487_S_.jpg&quot; style=&quot;width: 881px;&quot; width=&quot;881&quot; /&gt; 
&lt;h2&gt;Eclipse’s new build infrastructure JIRO&lt;/h2&gt; 
&lt;p&gt;The Eclipse Foundation’s build engineers worked on a new build infrastructure called &lt;a href=&quot;https://github.com/eclipse-cbi/jiro#why-is-it-called-jiro&quot; title=&quot;Link to https://github.com/eclipse-cbi/jiro#why-is-it-called-jiro (opens in a new tab)&quot;&gt;JIRO (Jenkins Instances Running on OpenShift)&lt;/a&gt;. The Xtext project joined early the efforts on preparing a migration to the new infrastructure. However, now it was time and the Eclipse Foundation asked to finally shut down the old build server and to switch over to the new infrastructure. While we were already done with the main build jobs, there were still quite some supportive build jobs for release engineering that had to be migrated.&lt;/p&gt; 
&lt;p&gt;Luckily, the itemis Xtext team could acquire Nico Prediger from the itemis DevOps staff to support the efforts on build engineering tasks. With his support, we could finalize the work and finally replace the old Jenkins instance.&lt;/p&gt; 
&lt;p&gt;As a result, Xtext builds fine now on its new JIRO instance at &lt;a href=&quot;https://ci.eclipse.org/xtext/&quot; title=&quot;Link to https://ci.eclipse.org/xtext/ (opens in a new tab)&quot;&gt;https://ci.eclipse.org/xtext/&lt;/a&gt; and was released the first time on the new infra.&lt;/p&gt; 
&lt;h2&gt;Keeping the software stack up-to-date&lt;/h2&gt; 
&lt;p&gt;Xtext builds upon a quite huge software stack, and several components are released within each release period. We try to keep them all on the latest state as far as we can. Of course, for each used component we have to test the compatibility of each upgrade.&lt;/p&gt; 
&lt;p&gt;The most notable upgrades this time are Guava and Gradle:&lt;/p&gt; 
&lt;p&gt;The Guava version 21.0 that we used before had a security problem that was issued as &lt;a href=&quot;https://github.com/google/guava/wiki/cve-2018-10237&quot; title=&quot;Link to https://github.com/google/guava/wiki/cve-2018-10237 (opens in a new tab)&quot;&gt;CVE-2018-10237&lt;/a&gt;. This forced Xtext as well as other dependent Eclipse projects to upgrade to a recent version of Guava. For the Eclipse 2019-09 simultaneous release, the delivered Guava version is now 27.1.0. All builds descriptors, wizards, and projects have been updated to use Guava 27.1.0 now.&lt;/p&gt; 
&lt;p&gt;The Guava upgrade also affected the MWE project, which employed the upgrade with its recent release. As a consequence, Xtext upgraded to MWE 2.11.&lt;/p&gt; 
&lt;p&gt;Xtext has been updated to use &lt;a href=&quot;https://docs.gradle.org/5.5/release-notes.html&quot; title=&quot;Link to https://docs.gradle.org/5.5/release-notes.html (opens in a new tab)&quot;&gt;Gradle 5.5&lt;/a&gt; now. While Gradle 6 is not official yet, Xtext has already been prepared for it. We closely followed the planned changes and revisited all relevant sources to ensure compatibility with Gradle’s next major versions. We expect that Xtext finally upgrades to Gradle 6 shortly after its release.&lt;/p&gt; 
&lt;h2&gt;XTEXT WEB SUPPORT UPDATED&lt;/h2&gt; 
&lt;p&gt;With the rise of the Language Server Protocol (LSP) integration of Xtext-based languages into other IDEs and editors, it is often preferred to work through language servers. Xtext is integrating the latest LSP4J version 0.8.0 und thus the current status of the LSP.&lt;/p&gt; 
&lt;p&gt;When it comes to language support in web-based editors, Xtext offers a second approach called &lt;a href=&quot;https://github.com/eclipse/xtext-web&quot; title=&quot;Link to https://github.com/eclipse/xtext-web (opens in a new tab)&quot;&gt;Xtext Web&lt;/a&gt;. The software components that Xtext Web is based on have been upgraded to their latest state. Also, the examples have been polished again with this version.&lt;/p&gt; 
&lt;p&gt;To get a better feeling, we have put the Xtext Web examples online now, so you don’t have to download and build them locally. Try the Xtext Web integration with the various supported editors &lt;a href=&quot;https://ace.c9.io/&quot; title=&quot;Link to Ace (opens in a new tab)&quot;&gt;Ace&lt;/a&gt;, &lt;a href=&quot;https://codemirror.net/&quot; title=&quot;Link to CodeMirror (opens in a new tab)&quot;&gt;CodeMirror&lt;/a&gt;, and &lt;a href=&quot;https://orionhub.org/mixloginstatic/landing.html?redirect=https%3A%2F%2Forionhub.org%2F&amp;amp;key=FORMOAuthUser&quot; title=&quot;Link to Orion (opens in a new tab)&quot;&gt;Orion&lt;/a&gt; here: &lt;a href=&quot;https://xtext-demo.itemis.com/&quot; title=&quot;Link to Xtext Demo (opens in a new tab)&quot;&gt;https://xtext-demo.itemis.com/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What’s your wish for future Xtext versions?&lt;/h2&gt; 
&lt;p&gt;We will continue to implement exciting features and ensure that Xtext will be compatible with the latest and greatest of all that we use. While we focus the development on the needs of our customers, you may have ideas how to make Xtext even better. Please tell us! We won’t bite you (and we can’t do this through the wire anyway)!&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fxtext-2-19-release-builds-on-eclipses-new-infrastructure-jiro&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 03 Sep 2019 07:27:38 +0000</pubDate>
	<author>thoms@itemis.de (Karsten Thoms)</author>
</item>
<item>
	<title>Scott Lewis: OSGi Remote Services with Apache Dubbo</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-20358640.post-895972499876792176</guid>
	<link>http://eclipseecf.blogspot.com/2019/08/osgi-remote-services-with-apache-dubbo.html</link>
	<description>&lt;a href=&quot;https://wiki.eclipse.org/Eclipse_Communication_Framework_Project&quot;&gt;ECF's implementation&lt;/a&gt; of &lt;a href=&quot;https://osgi.org/specification/osgi.cmpn/7.0.0/service.remoteservices.html&quot;&gt;OSGi R7 Remote Services&lt;/a&gt; allows for replacing the underlying distribution system (repsonsible for the object serialization, transport, and other things).  &lt;br /&gt;&lt;br /&gt;This makes it relatively easy to replace one kind of distribution (e.g. Jersey, ActiveMQ) with other/new distribution systems.  &lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://dubbo.apache.org/&quot;&gt;Apache Dubbo&lt;/a&gt; has recently been contributed to Apache, and we've &lt;a href=&quot;https://github.com/ECF/DubboProvider&quot;&gt;created a distribution provider based upon Apache Dubbo&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://wiki.eclipse.org/Distribution_Providers&quot;&gt;Here's a list&lt;/a&gt; of open ECF Remote Service distribution providers.   If you would like Remote Services support for a particular transport, or you've created your own distribution (or &lt;a href=&quot;https://wiki.eclipse.org/Discovery_Providers&quot;&gt;discovery&lt;/a&gt;) based upon some other transport and wish to make it available to others please &lt;a href=&quot;mailto:ecf-dev@eclipse.org&quot;&gt;let us know&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Sat, 31 Aug 2019 17:37:31 +0000</pubDate>
	<author>noreply@blogger.com (Scott Lewis)</author>
</item>
<item>
	<title>Mat Booth: Eclipse Module on F30 Addendum</title>
	<guid isPermaLink="false">tag:blog.matbooth.co.uk,2019-08-30:/10-eclipse-module-f30-addendum.html/</guid>
	<link>http://blog.matbooth.co.uk/10-eclipse-module-f30-addendum.html</link>
	<description>&lt;p&gt;Additional information about installing the Eclipse IDE module on F30.&lt;/p&gt;</description>
	<pubDate>Fri, 30 Aug 2019 11:30:00 +0000</pubDate>
</item>
<item>
	<title>N4JS: Redux App Development and Testing in N4JS (Chess Game Part 2)</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-8839918734785430851</guid>
	<link>https://n4js.blogspot.com/2019/08/redux-app-development-and-testing-in.html</link>
	<description>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;In large applications, &lt;a href=&quot;https://redux.js.org/&quot; target=&quot;_blank&quot;&gt;Redux&lt;/a&gt; - an implementation of &lt;a href=&quot;https://facebook.github.io/flux/&quot; target=&quot;_blank&quot;&gt;Flux architecture&lt;/a&gt; created by Facebook - is often used to organise application code by using a strict data flow in one direction only. Redux is UI agnostic, and can be used in conjunction with any UI library. As a continuation of our chess game tutorial with React, we show how to extract the entire program state out of React components, store it with Redux, and test it with N4JS. The full tutorial is available at &lt;a href=&quot;https://www.eclipse.org/n4js/userguides/n4js-tutorial-chess/n4js-tutorial-chess-redux.html&quot; target=&quot;_blank&quot;&gt;eclipse.org/n4js&lt;/a&gt; and the sources can be found at &lt;a href=&quot;https://github.com/Eclipse/n4js-tutorials&quot; target=&quot;_blank&quot;&gt;github.com/Eclipse/n4js-tutorials&lt;/a&gt;.&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both; text-align: left;&quot;&gt;The first part of the chess game tutorial discussed how to develop a chess game app with React and JSX in N4JS. We have stored the program state - which for instance contains information about the locations of all chess pieces - in the state of the React components directly. As applications become larger, however, the mix of program state and UI makes the application hard to comprehend and difficult to test. To address these issues, we extract the program state from the UI components in the second part of the tutorial.&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both;&quot;&gt;When using React with Redux, we store the application state in Redux store instead of the state of React components. As a result, React components become stateless UI elements and simply render the UI using the data retrieved from the Redux store. In a Redux architecture, data flows strictly in one direction. The diagram below graphically depicts the action/data flow in a React/Redux app.&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-5lmZGp63Rzk/XS2KIsXiUFI/AAAAAAAAAMI/sb8v_jGp0Q8IvVyiNXH7XrcjVTeeiB7OACLcBGAs/s1600/redux-architecture.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;https://1.bp.blogspot.com/-5lmZGp63Rzk/XS2KIsXiUFI/AAAAAAAAAMI/sb8v_jGp0Q8IvVyiNXH7XrcjVTeeiB7OACLcBGAs/s1600/redux-architecture.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Strict data flow of flux architecture application&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;The action/data flow in the diagram can be roughly understood as follows:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;When a user interaction is triggered on the React component (e.g. button clicked, text field edited etc.), an action is created. The action describes the changes needed to be updated in the application state. For instance, when a text field is edited, the action created may contain the new string of the text field.&lt;/li&gt;&lt;li&gt;Then the action is dispatched to the Redux store whereby the Redux store stores the application state, usually as a hierarchical tree of state.&lt;/li&gt;&lt;li&gt;The reducers take the action and the current application state and create an updated application state.&lt;/li&gt;&lt;li&gt;If the changes in the application state are to a certain React component, they are forwarded into the component in form of props. The change in props causes the component to re-render.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In the second part of the tutorial we further elaborate on the interaction of React and Redux and migrate the original chess non-Redux app. The tutorial explains the role of the reducer, and how the game state is stored and maintained in the Redux store. Based on storing the game using Redux, the tutorial shows how to test the game application with the N4JS test library &lt;i&gt;Mangelhaft&lt;/i&gt;, by for instance checking that valid move destination squares are updated after a chess piece was selected.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Note that the way of testing the game logics is completely UI-agnostic and no React components are involved at all. This is thanks to the decoupling of game logics from UI with the help of Redux.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Minh Quang Tran&lt;/span&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 29 Aug 2019 16:04:16 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>Ed Merks: And Now for Something Completely Different</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3879044552984472733.post-4273181109797448391</guid>
	<link>http://ed-merks.blogspot.com/2019/08/and-now-for-something-completely.html</link>
	<description>It's been 5 years since I last blogged, so I had to delete 500 SPAM  posts when getting started again.  Much has happened over the past  years, some of them not so great. When you start to get old like me, you  must deal with the older generation gradually passing on and health  problems, such as coronary re-plumbing, can become an ugly fact of life.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-0M3QCRwIRRU/XWeKYT-JIII/AAAAAAAACrw/zhLs6JHOI_QXkVGpXNRHjSeWIpj_ZszNwCLcBGAs/s1600/OldShip.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;180&quot; src=&quot;https://1.bp.blogspot.com/-0M3QCRwIRRU/XWeKYT-JIII/AAAAAAAACrw/zhLs6JHOI_QXkVGpXNRHjSeWIpj_ZszNwCLcBGAs/s320/OldShip.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;I've been working with itemis for the past 11 years, but that now  draws to a close.  I wish to thank them for their generous support over  all these years.  Many of you might thank them as well because much of  what I've contributed is thanks to their funding.  Though admittedly I  have the nasty habit of working like a maniac, beyond any reasonable  number of working hours, regardless of whether or not there is financial  reward.  Cool things are just so compelling. But the worst habit then  is not bothering to document or advertise all these cool new features as  they become available, but rather to dive into the next obsession  because somehow that's more compelling.  Compulsion is a bit of a Merks'  family trait, e.g., my sister has more than 20 dogs, though it's easy  to lose count...&lt;br /&gt;&lt;br /&gt;In any case, most of my obsession over the last year has been related  to working with Airbus.  I don't normally talk about my customers, but  given they were gracious enough to allow me to demo at last year's  EclipseCon the software being developed at Airbus, it's common knowledge  anyway.  My goodness but that was a creative and cool project!  Unfortunately that too has, as is the case for all good things, come  to an end.&lt;br /&gt;&lt;br /&gt;I immediately dove into generating a quality report for the Eclipse  SimRel p2 repository; there's no rest for the wicked nor for the  compelled.  I used EMF's Java Emitter Templates (JET) for implementing  that, just as I did for generating the full site information for  &lt;a href=&quot;https://download.eclipse.org/modeling/emf/emf/builds/index.html&quot;&gt;EMF's Update Sites&lt;/a&gt;  as part of migrating the build to Maven/Tycho.&lt;br /&gt;&lt;br /&gt;Speaking of which, did you know that you can make it trivially easy for your contributors to set up a development environment? Just have a look at &lt;a href=&quot;https://ci.eclipse.org/emf/&quot;&gt;EMF' build page&lt;/a&gt;.  Also, did you know that there exists such a thing for the complete &lt;a href=&quot;https://wiki.eclipse.org/Eclipse_Platform_SDK_Provisioning&quot;&gt;Eclipse Platform SDK&lt;/a&gt; as well? Of course not, because I never bothered to tell you!&lt;br /&gt;&lt;br /&gt;What's really supergeil (yes, I live in Germany and speak fluent  Denglish) about the installing an environment with the full Platform  SDK, or some subset there of, is that you can easily see all the Git  history of each source file, so you can see what exactly has changed and  evolved.  Also, when developing new applications, you can easily search  for how the Platform implements those things; then you can snarf and  barf out your own solutions, with all due respect for the EPL of  course.  You can even find out all the places that a constant is  actually used; you cannot do that against binaries because constants get  in-lined.  Also, if you see some label in the IDE, you can search for  where it comes from, some *.properties file somewhere no doubt, and then  you will know the name of that property and can easily find where  that's defined and how that's used in the code.  You might even  contribute fixes via Gerrit commits!&lt;br /&gt;&lt;br /&gt;But I digress.  I was using JET to generate a nice helpful web page  with information about all the problems in the SimRel repo, or in any  arbitrary repo actually, i.e., invalid licenses, unsigned content,  missing pack200 files, duplicate bundles, inappropriate providers, and  so on. But then I got frustrated that JET templates eventually get  really hard to read, especially as they become more complicated.  Then,  when you need it the most, all the nice features of JDT are missing  while editing the scriplets and expressions in that template. So as I am  wont to do, I digressed further and spent the better part of the last  two months working on a rich editor for JET.  I'm sorry (not!) that I  had to violate a few API rules to do so, but alas, API rights activists  is a topic for another blog because that's a long digression.  The good thing is that the JET editor is finished now; it will be in  2019-09's M3.  Here's a sneak preview:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-zbHtviZ7w7c/XWeOuCKpj8I/AAAAAAAACr8/BwnJL3B9rdM4kFSLl--Z7wojabe5T9OvQCLcBGAs/s1600/JETEditor.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;231&quot; src=&quot;https://1.bp.blogspot.com/-zbHtviZ7w7c/XWeOuCKpj8I/AAAAAAAACr8/BwnJL3B9rdM4kFSLl--Z7wojabe5T9OvQCLcBGAs/s320/JETEditor.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Yes, that's content assist, just is if were in a real Java editor! Not only that, this time I wrote documentation for it in EMF's doc bundle. And, to top that off with icing, this time I blog  about it.  Perhaps only three people in the world will ever use it, but  I am one of those three people and I love it and I need it even for  working with EMF's code generation templates too. So now I can pop this off  my digression stack and go back to generating that p2 repo quality  report.  I've been doing that for the past week, and it's almost ready  for prime-time.&lt;br /&gt;&lt;br /&gt;But then at this point, I must ask myself, where is the financial gain  in all this?  My local neighborhood fox, I've named him Fergus,  might  be trying to tell me something.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-8Rd65OT-GrM/XWeQ1fQPPjI/AAAAAAAACsI/7oRwuFKL9BcDM0ahSr-DGyTKWKuxLRT2QCLcBGAs/s1600/Fergus.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;https://1.bp.blogspot.com/-8Rd65OT-GrM/XWeQ1fQPPjI/AAAAAAAACsI/7oRwuFKL9BcDM0ahSr-DGyTKWKuxLRT2QCLcBGAs/s320/Fergus.png&quot; width=&quot;197&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Perhaps you should be a little more sly.  Perhaps the endless free goodness too must come to an end...</description>
	<pubDate>Thu, 29 Aug 2019 09:23:18 +0000</pubDate>
	<author>noreply@blogger.com (Ed Merks)</author>
</item>
<item>
	<title>Eclipse Ditto: Eclipse Ditto now supports OpenID Connect</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2019-08-28-openid-connect.html</guid>
	<link>https://www.eclipse.org/ditto/2019-08-28-openid-connect.html</link>
	<description>&lt;p&gt;Eclipse Ditto now supports all OAuth 2.0 providers which implement &lt;a href=&quot;https://openid.net/connect/&quot;&gt;OpenID Connect&lt;/a&gt; out-of-the-box.
You can find a list of certified providers at &lt;a href=&quot;https://openid.net/developers/certified/&quot;&gt;OpenID Connect - Certified OpenID Provider Servers and Services&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this post, we want to give an example of this new feature using the open source provider &lt;a href=&quot;https://www.ory.sh&quot;&gt;ORY Hydra&lt;/a&gt;.
Follow their &lt;a href=&quot;https://www.ory.sh/docs/next/hydra/configure-deploy#installing-ory-hydra&quot;&gt;installation guide&lt;/a&gt; for a
 docker based setup on your development machine.&lt;/p&gt;

&lt;h4 id=&quot;configuration&quot;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Download the self-signed certificate form the ORY Hydra server: https://localhost:9000/.well-known/openid-configuration&lt;/p&gt;

&lt;p&gt;Use the downloaded certificate for the akka-http ssl configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-hocon&quot;&gt;ssl-config {
  trustManager = {
    stores = [
      { type = &quot;PEM&quot;, path = &quot;/path/to/cert/globalsign.crt&quot; }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The authentication provider must be added to the ditto-gateway configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-hocon&quot;&gt;ditto.gateway.authentication {
    oauth {
      openid-connect-issuers = {
        ory = &quot;https://localhost:9000/&quot;
      }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The configured subject-issuer will be used to prefix the value of the “sub” claim, e.g.&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subjects&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ory:foo@bar.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;generated&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;authenticate-ditto-api&quot;&gt;Authenticate Ditto API&lt;/h4&gt;
&lt;p&gt;Create an OAuth client with hydra to be able to create ID Tokens.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;HYDRA_ADMIN_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://ory-hydra-example--hydra:4445 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--network&lt;/span&gt; hydraguide &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  oryd/hydra:v1.0.0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  clients create &lt;span class=&quot;nt&quot;&gt;--skip-tls-verify&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--id&lt;/span&gt; eclipse-ditto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--secret&lt;/span&gt; some-secret &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--grant-types&lt;/span&gt; authorization_code,refresh_token,client_credentials,implicit &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--response-types&lt;/span&gt; token,code,id_token &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--scope&lt;/span&gt; openid,offline &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--callbacks&lt;/span&gt; http://127.0.0.1:9010/callback
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use the client to generate an ID Token.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--network&lt;/span&gt; hydraguide &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 9010:9010 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  oryd/hydra:v1.0.0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  token user &lt;span class=&quot;nt&quot;&gt;--skip-tls-verify&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt; 9010 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--auth-url&lt;/span&gt; https://localhost:9000/oauth2/auth &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--token-url&lt;/span&gt; https://ory-hydra-example--hydra:4444/oauth2/token &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--client-id&lt;/span&gt; eclipse-ditto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--client-secret&lt;/span&gt; some-secret &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--scope&lt;/span&gt; openid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After that perform the OAuth 2.0 Authorize Code Flow by opening the link, as prompted, 
in your browser, and follow the steps shown there.&lt;/p&gt;

&lt;p&gt;Use the generated token to authenticate Ditto API.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  http://localhost:8080/api/2/things &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Authorization: Bearer &amp;lt;JWT&amp;gt;'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Wed, 28 Aug 2019 04:00:00 +0000</pubDate>
</item>
<item>
	<title>Mat Booth: Eclipse is Now a Module on Fedora 30</title>
	<guid isPermaLink="false">tag:blog.matbooth.co.uk,2019-08-21:/09-eclipse-module-f30.html/</guid>
	<link>http://blog.matbooth.co.uk/09-eclipse-module-f30.html</link>
	<description>&lt;p&gt;How to install the Eclipse IDE module on Fedora 30!&lt;/p&gt;</description>
	<pubDate>Wed, 21 Aug 2019 13:30:00 +0000</pubDate>
</item>
<item>
	<title>Jonas Hungershausen: GSoC 2019 Summary: Dart support for the Eclipse IDE</title>
	<guid isPermaLink="true">https://jonas-jonas.dev/posts/dartboard-summary/</guid>
	<link>https://jonas-jonas.dev/posts/dartboard-summary/</link>
	<description>&lt;p&gt;Summary of my Summer of Code 2019&lt;/p&gt;
&lt;p&gt;This post is a summary of my Summer of Code 2019.
My project was to bring Dart development support to the Eclipse IDE.
To do so I created a plugin that consumes the Dart analysis server using &lt;a href=&quot;https://projects.eclipse.org/projects/technology.lsp4e&quot;&gt;LSP4E&lt;/a&gt;.
It also provides syntax highlighting using &lt;a href=&quot;https://projects.eclipse.org/projects/technology.tm4e&quot;&gt;TM4E&lt;/a&gt; and many more features listed below.&lt;/p&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;The following list showcases the most significant features of the plugin I (and other contributors) added during GSoC 2019.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Running Dart programs directly from Eclipse&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/1&quot;&gt;eclipse/dartboard#1&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Standard &amp;amp; error output in a dedicated console&lt;/li&gt;
&lt;li&gt;Support for multiple Launch configurations&lt;/li&gt;
&lt;li&gt;Running single files from the context menu&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dart preference page&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/10&quot;&gt;eclipse/dartboard#10&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set the location for the Dart SDK that should be used for all actions&lt;/li&gt;
&lt;li&gt;Choose whether to automatically synchronize the dependencies of project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;First class Pub support&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/107&quot;&gt;eclipse/dartboard#107&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic synchronization of Pub dependencies when changing the &lt;code&gt;pubspec.yaml&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Shortcut for running &lt;code&gt;$ pub get&lt;/code&gt; manually&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Creating new Dart projects and files&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/115&quot;&gt;eclipse/dartboard#115&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stagehand templates are also supported&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Usage of the Dart logo&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/commit/a23fc1f57cd3fdc6e702759c507aa977f7dd7561&quot;&gt;eclipse/dartboard@a23fc1f&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Import existing Dart projects directly into the workspace&lt;/strong&gt; (+ automatic dependency synchronization) - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/116&quot;&gt;eclipse/dartboard#116&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Upstream Bug Fixes&lt;/h1&gt;
&lt;p&gt;During development I encountered many issues with the libraries and tools I was using.
As I was already aware I took the time to fix them directly and provide a patch or PR for the corresponding library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;NullPointerException&lt;/code&gt; in LSP4E's &lt;code&gt;SymbolsModel#getChildren&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/4&quot;&gt;eclipse/dartboard#4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/139273/&quot;&gt;Change 139273&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adjusted the Eclipse Light syntax theme in TM4E to match the classic Eclipse theme better&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/21&quot;&gt;eclipse/dartboard#21&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/215&quot;&gt;eclipse/tm4e#215&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the quick access menu in Eclipse resulted in an Exception.
This was caused by LSP4E not adhering to the LSP spec.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=548155&quot;&gt;Bug 548155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/143723/&quot;&gt;Change 143723&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;textDocument/didSave&lt;/code&gt; notification is not supported by the Dart analysis server but LSP4E sent it anyway and this resulted in an error&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/32&quot;&gt;eclipse/dartboard#32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/143922/&quot;&gt;Change 143922&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another NPE in TM4E's &lt;code&gt;ThemeContribution&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/tm4e/issues/207&quot;&gt;eclipse/tm4e#207&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/217&quot;&gt;eclipse/tm4e#217&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Things Left to do&lt;/h1&gt;
&lt;p&gt;I have completed all of my goals I set in the initial proposal for GSoC.
However a few things and features have come up during development that I plan on taking care of in the near future.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flutter support&lt;/strong&gt; - Flutter apps need to be run using the special &lt;code&gt;$ flutter&lt;/code&gt; command suite, instead of the default SDK
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/109&quot;&gt;eclipse/dartboard#109&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other things that could be enhanced include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pub console&lt;/strong&gt; - Currently there is now way to see the output of the pub commands
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/117&quot;&gt;eclipse/dartboard#117&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Webdev support&lt;/strong&gt; - Dart apps that should be run on the browser need to be run using the &lt;code&gt;$ webdev&lt;/code&gt; command line tools
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/110&quot;&gt;eclipse/dartboard#110&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope to be able to work on them but community contributions are always welcome.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;A full list of commits and issues can be found on the &lt;a href=&quot;https://github.com/eclipse/dartboard&quot;&gt;project's GitHub repository&lt;/a&gt;.
Installation instructions can also be found there.&lt;/p&gt;
&lt;h1&gt;Appreciation&lt;/h1&gt;
&lt;p&gt;In the early days, Lakshminarayana Nekkanti has joined the project as a committer.
He has been extremely helpful since by fixing bugs in the Eclipse platform that have been open for years (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=513034&quot;&gt;Bug 513034&lt;/a&gt;) and contributing a lot of features and knowledge to the plugin.
Thank you, Lakshminarayana!&lt;/p&gt;
&lt;p&gt;I would also like to thank Lars Vogel who has been my Mentor and helped tremendously when I was unsure what to do.&lt;/p&gt;</description>
	<pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Jonas Hungershausen: Dartboard: Pub support, Stagehand templates &amp; better theming</title>
	<guid isPermaLink="true">https://jonas-jonas.dev/posts/dartboard-fourth-update/</guid>
	<link>https://jonas-jonas.dev/posts/dartboard-fourth-update/</link>
	<description>&lt;p&gt;Automatic &lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; dependency synchronization, &lt;a href=&quot;https://pub.dev/packages/stagehand&quot;&gt;stagehand templates&lt;/a&gt; and theme improvements for TM4E.&lt;/p&gt;

&lt;h1&gt;Pub dependency synchronization&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; is the main source of packages for Dart projects.
Dependencies are added to a &lt;code&gt;pubspec.yaml&lt;/code&gt; file and the &lt;code&gt;$ pub get&lt;/code&gt; command is used to download the packages from the registry.
Since most projects require at least a few dependencies this step &lt;em&gt;must&lt;/em&gt; be taken before the project compiles without errors.&lt;/p&gt;
&lt;p&gt;To ease this process a little, the command is now automatically run when saving the &lt;code&gt;pubspec.yaml&lt;/code&gt; file in Eclipse.
With this, required dependencies are automatically downloaded when a project is imported or when a new package is added to the &lt;code&gt;pubspec.yaml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;If you don't want this behavior the feature can be disabled from the preference page.
Manually running the synchronization is also supported from the context menu of a project.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pub context handler&quot; src=&quot;https://jonas-jonas.dev/posts/assets/pub-command.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The current progress of the synchronization is reported to the &lt;em&gt;Progress&lt;/em&gt; view.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pub progress&quot; src=&quot;https://jonas-jonas.dev/posts/assets/pub-dependencies.gif&quot; /&gt;&lt;/p&gt;
&lt;h1&gt;Stagehand&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pub.dev/packages/stagehand&quot;&gt;Stagehand&lt;/a&gt; is a CLI tool, written in Dart, that generates new projects from a list of templates.
There are different project types to chose from, like Flutter, AngularDart or just console applications.
After a template is generated the project contains a &lt;code&gt;pubspec.yaml&lt;/code&gt; file containing all necessary dependency information and various entry files that are required by the type of project.&lt;/p&gt;
&lt;p&gt;This tool is now supported graphically by the &lt;em&gt;New Dart Project&lt;/em&gt; wizard also provided by Dartboard.
Under the hood the plugin uses the exact executable from &lt;code&gt;pub.dev&lt;/code&gt;.
And by automatically updating it we make sure that new templates can be immediately used.&lt;/p&gt;
&lt;p&gt;This is how the &lt;em&gt;New Dart Project&lt;/em&gt; wizard looks now:
&lt;img alt=&quot;Stagehand&quot; src=&quot;https://jonas-jonas.dev/posts/assets/stagehand.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At first selection of the Wizard (after a fresh IDE start) &lt;em&gt;Stagehand&lt;/em&gt; is updated and its templates are fetched.
After that job is finished the available templates are added to the combo box.
If no template should be used the &lt;em&gt;Use Stagehand template&lt;/em&gt; checkbox can be unchecked and an empty project is generated.&lt;/p&gt;
&lt;p&gt;Subsequent usages of the wizard use cached versions of the templates list to not strain your network or the &lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; registry too much.&lt;/p&gt;
&lt;h1&gt;Project import&lt;/h1&gt;
&lt;p&gt;Not every Dart project was created from Eclipse though.
So to be able to use Dartboard with existing Dart projects it is required to import them into the workspace.
For this task we now provide a shortcut to import Dart projects from the &lt;em&gt;Import Project&lt;/em&gt; context menu entry.&lt;/p&gt;
&lt;p&gt;Currently it simply opens the &lt;em&gt;Projects from Folder or Archive&lt;/em&gt; wizard.
This wizard however allows to specify a &lt;code&gt;ProjectConfigurator&lt;/code&gt; that takes care of selecting folders that should be imported as a project.
In our own configurator we traverse all children and look for &lt;code&gt;pubspec.yaml&lt;/code&gt; files.
Every folder that contains such a file is considered to be a separate project.&lt;/p&gt;
&lt;h1&gt;Eclipse light theme for TM4E&lt;/h1&gt;
&lt;p&gt;TM4E can be used to apply different syntax highlighting to the editor.
We provide a configuration file that specifies how certain words inside the editor should look.
It also gives the option to select what theme to use.
There are different light and dark themes available, like &lt;em&gt;Solarized Light&lt;/em&gt; or the classic Eclipse Java editor theme.&lt;/p&gt;
&lt;p&gt;I provided a patch to add some missing styles to the latter to make it look more like the classic theme.
This is what it looks like now:
&lt;img alt=&quot;Eclipse light theme&quot; src=&quot;https://jonas-jonas.dev/posts/assets/eclipse-light-new.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/215&quot;&gt;eclipse/tm4e#215&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Wrap up&lt;/h1&gt;
&lt;p&gt;With two weeks to go until the end of Summer of Code 2019 there is not that much left to do for me to fulfill my proposed timeline.
One major thing that is still missing are automated tests.
I have started work on it now and will work on that for the last two weeks.&lt;/p&gt;
&lt;p&gt;This will also be my last update post on Summer of Code as the next post will be a summary of my whole summer.&lt;/p&gt;</description>
	<pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: KubeCon Shanghai 2019: Cloud Native at China Scale</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4295</guid>
	<link>https://www.aniszczyk.org/2019/07/29/kubecon-shanghai-2019-cloud-native-at-china-scale/</link>
	<description>&lt;p&gt;Last month, we held KubeCon + Cloud NativeCon in Shanghai, one of the largest open source events in China. Recently, we published the &lt;a href=&quot;https://drive.google.com/file/d/1gnIUxCj33EJkXMDyFwP7JbwdM3bmXHBJ/view&quot;&gt;conference transparency report&lt;/a&gt; detailing how the 3500 person event went but I’d like to share a couple take aways as someone who has been traveling to China quite a bit the last few years.&lt;/p&gt;



&lt;figure class=&quot;wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter&quot;&gt;&lt;div class=&quot;wp-block-embed__wrapper&quot;&gt;
https://twitter.com/CloudNativeFdn/status/1154783210221527040
&lt;/div&gt;&lt;/figure&gt;



&lt;h2&gt;Cloud Native at China Scale&lt;/h2&gt;



&lt;p&gt;The scale of operating a popular service in China can be wild when you serve a billion users. This forces many of these companies to operate in a cloud native fashion, similar to their internet scale peers in Silicon Valley. I strongly believe we will see more interesting open source technology born in China over the next decade as they deal with scaling issues, similar to how a lot of internet scale open source technology was born from Google and other SV companies that had to support a larger user base. I highly recommend this great &lt;a href=&quot;https://softwareengineeringdaily.com/2019/02/26/china-scale-the-new-sandbox-to-battle-test-innovative-technology/&quot;&gt;interview from Kevin Xu&lt;/a&gt; highlights some of the scale and open source projects coming out of China.&lt;/p&gt;



&lt;p&gt;Also, Ant Financial &lt;a href=&quot;https://www.cncf.io/announcement/2019/06/24/cloud-native-computing-foundation-welcomes-ant-financial-as-gold-end-user-member/&quot;&gt;joined&lt;/a&gt; CNCF as a Gold End User member, which is indicative of the trends of Chinese companies supporting open source they depend on and sharing the lessons they have learned. For those that aren’t aware, Ant Financial is the largest mobile payments company in the world (Alipay), running on Kubernetes and other CNCF projects. You can read their CNCF Case study &lt;a href=&quot;https://www.cncf.io/case-study/ant-financial/&quot;&gt;here&lt;/a&gt; how they run on tens of thousands of Kubernetes nodes serving nearly a billion Alipay customers.&lt;/p&gt;



&lt;h2&gt;Giving Back: China: #2 contributor to Kubernetes&lt;/h2&gt;



&lt;p&gt;For those who aren’t aware, China is the &lt;a href=&quot;https://k8s.devstats.cncf.io/d/50/countries-stats?orgId=1&quot;&gt;second largest contributor to Kubernetes&lt;/a&gt; (and third to CNCF projects overall).&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://lh4.googleusercontent.com/yDpuca3jvLEu4Hbv_XRyzU7LGsnYXpIY9YbOnkF6_QBZvbftA45dsL9Ww5gfutOywtAAKYAFGJ6hwsP8Bfn6lfydbBbNe_Kq9mte87KOjayI-BsvJDvK2y2mJZojClKX62CWJmXQmrM&quot; /&gt;&lt;figcaption&gt;DevStats: &lt;a href=&quot;https://k8s.devstats.cncf.io/d/50/countries-stats?orgId=1&quot;&gt;https://k8s.devstats.cncf.io/d/50/countries-stats?orgId=1&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;It’s always great to have consumers contribute code back as that’s one important way how open source is &lt;a href=&quot;https://opensource.com/article/19/4/ways-support-sustain-open-source&quot;&gt;sustainable&lt;/a&gt; in the long run.&lt;/p&gt;



&lt;p&gt;On the whole, it was a fantastic to spend time with our cloud native community in Shanghai and we look forward to coming back to China next year, stay tuned for details for KubeCon + CloudNativeCon 2020 China! For now, we look forward to seeing many folks at &lt;a href=&quot;https://events.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2019/&quot;&gt;KubeCon + CloudNativeCon 2019 San Diego&lt;/a&gt; which is gearing to be one of the largest open source events in the world.&lt;/p&gt;</description>
	<pubDate>Mon, 29 Jul 2019 16:08:25 +0000</pubDate>
</item>
<item>
	<title>Andrey Loskutov: Pimping the status line</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-6299947500212529376</guid>
	<link>http://javaclipse.blogspot.com/2019/07/pimping-status-line.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;This weekend I've tried to write a &lt;a href=&quot;https://git.eclipse.org/r/#/c/146706/1/org.eclipse.jdt.debug.tests/tests/org/eclipse/jdt/debug/tests/ui/DebugHoverTests.java@169&quot;&gt;test for Eclipse debug hover&lt;/a&gt;, that required to know exact position of the selected text, somewhere in the middle of the editor. If you think this is easy - go figure out in Eclipse at which offset is your cursor - surprisingly there is no obvious way to do so!&lt;br /&gt;&lt;br /&gt;So I've used some 3rd party editor that was kind enough to provide this information in the status line. Why shouldn't this be offered by Eclipse itself?&lt;br /&gt;&lt;br /&gt;So I've created an &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=549604&quot;&gt;enhancement request&lt;/a&gt; and &lt;a href=&quot;https://git.eclipse.org/r/146707&quot;&gt;pushed patch&lt;/a&gt; that adds both features to Eclipse. By default, status line shows now cursor position, and if editor has something selected, the number of characters in the selection (works also in block selection mode). Both new additions to the status line can be disabled via preferences.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-6JdWZY0NQgA/XT3Q7KD_0AI/AAAAAAAAlKk/Dh05jqydDNwY56E5IVTB4uFlb8JZ8-kfACLcBGAs/s1600/selection.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;261&quot; src=&quot;https://1.bp.blogspot.com/-6JdWZY0NQgA/XT3Q7KD_0AI/AAAAAAAAlKk/Dh05jqydDNwY56E5IVTB4uFlb8JZ8-kfACLcBGAs/s640/selection.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt; If there is no selection, cursor offset is shown:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-xBdqrKMSgrQ/XT3Q83kAOTI/AAAAAAAAlKo/7wOG4lsXhUEv7SdBwc4XVMtXdowiHzFtgCLcBGAs/s1600/cursor_offset.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;258&quot; src=&quot;https://1.bp.blogspot.com/-xBdqrKMSgrQ/XT3Q83kAOTI/AAAAAAAAlKo/7wOG4lsXhUEv7SdBwc4XVMtXdowiHzFtgCLcBGAs/s640/cursor_offset.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Both new additions to the status line can be disabled via preferences:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-KKk69IFHhCo/XT3Q_qDD2lI/AAAAAAAAlKs/49iYXizuftoP6Lpi-bGG-IEQfKzd1iyqACLcBGAs/s1600/preferences.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;640&quot; src=&quot;https://1.bp.blogspot.com/-KKk69IFHhCo/XT3Q_qDD2lI/AAAAAAAAlKs/49iYXizuftoP6Lpi-bGG-IEQfKzd1iyqACLcBGAs/s640/preferences.png&quot; width=&quot;420&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=549604&quot;&gt;WDYT?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 28 Jul 2019 16:50:05 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>Andrey Loskutov: Incompatible Eclipse workspaces</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-3852949671843488587</guid>
	<link>http://javaclipse.blogspot.com/2019/05/incompatible-eclipse-workspaces.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;Eclipse has mechanism to recognize if the workspace to be used is created with older Eclipse version.&lt;br /&gt;In such case, to be safe, Eclipse shows dialog like:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-bzIVjTZG780/XN0sZj-ZbJI/AAAAAAAAjw0/FA3w7k-vlLwAkttD9rsM3asrAl0w8cW-ACLcBGAs/s1600/old_workspace_warning.png&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-bzIVjTZG780/XN0sZj-ZbJI/AAAAAAAAjw0/FA3w7k-vlLwAkttD9rsM3asrAl0w8cW-ACLcBGAs/s1600/old_workspace_warning.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;As of today (Eclipse 4.12 M1), if you click on &quot;Cancel&quot; button, Eclipse will behave differently, depending on the use cases &quot;history&quot;:&lt;br /&gt;&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;A. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog.&lt;/li&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with&lt;/b&gt; &quot;-data&quot; argument pointing to the incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;B. If the workbench was started:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;This behavior is inconvenient (at least), so we have &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=538830&quot;&gt;bug 538830&lt;/a&gt;.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Fix Proposal #1&lt;/h4&gt;The proposal is, that &lt;b&gt;independently&lt;/b&gt; on the way Eclipse was started, if user clicks on the &quot;Cancel&quot; button in the &quot;Older Workspace Version&quot; dialog, we &lt;b&gt;always&lt;/b&gt; show the default workspace selection dialog (instead of termination):&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-U2VeCqT6SEk/XN0uJV2m7EI/AAAAAAAAjxA/D5Kdw_JQKiMOmuzCZmfDJ56abEwLBMXSgCLcBGAs/s1600/workspace_selection_dialog.png&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-U2VeCqT6SEk/XN0uJV2m7EI/AAAAAAAAjxA/D5Kdw_JQKiMOmuzCZmfDJ56abEwLBMXSgCLcBGAs/s1600/workspace_selection_dialog.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;In this dialog above user has two choices: launch any workspace or finally terminate Eclipse via &quot;Cancel&quot;.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Proposal #1 Matrix&lt;/h4&gt;&lt;h4&gt;A1. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with or without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog. To terminate Eclipse, user has to click &quot;Cancel&quot; in the workspace selection dialog.&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;B1. If the workbench was started:&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer to select another workspace.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;Fix Proposal #2&lt;/h4&gt;The proposal is, that &lt;b&gt;depending&lt;/b&gt; on the way Eclipse was started, if user clicks on the &quot;Cancel&quot; button in the &quot;Older Workspace Version&quot; dialog, we &lt;b&gt;may or may not&lt;/b&gt; show the default workspace selection dialog. So what happens after &quot;Older Workspace Version&quot; dialog is shown is &lt;b&gt;not predictable&lt;/b&gt; by just looking on this dialog - it depends on the &lt;b&gt;history&lt;/b&gt; of this dialog.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Proposal #2 Matrix&lt;/h4&gt;&lt;h4&gt;A2. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog.&lt;/li&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with&lt;/b&gt; &quot;-data&quot; argument pointing to the incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;B2. If the workbench was started:&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer to select another workspace.&lt;/li&gt;&lt;/ol&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Similarities&lt;/h4&gt;&lt;div&gt;Both proposals fix second bullet in the use case B2.&lt;/div&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Differences&lt;/h4&gt;&lt;div&gt;We see that Proposal #1 has no second bullet for A1 case, and is always consistent in the way how UI behaves after clicking on &quot;Cancel&quot; in the &quot;Older Workspace Version&quot; dialog. Proposal #2 fixes only B2 use case, inconsistency in UI behavior for the second part of A1 use case remains.&lt;/div&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Technical (biased) notes:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Proposal #1 is implemented and the &lt;a href=&quot;https://git.eclipse.org/r/142139&quot;&gt;patch is available&lt;/a&gt;, along with the &lt;a href=&quot;https://bugs.eclipse.org/bugs/attachment.cgi?id=278605&quot;&gt;demo video&lt;/a&gt;. To test it live, one has to build Eclipse - but here I have &lt;a href=&quot;https://drive.google.com/drive/folders/0B7vALkuico9heWlDMlhfRGlRbm8&quot;&gt;SDK binaries with the patch applied&lt;/a&gt;. The patch is relatively simple and only affects Platform UI internal code.&lt;/li&gt;&lt;li&gt;Proposal #2 is not implemented yet. I assume that this will require more work compared to the patch #1. We will need a new command line argument for Eclipse to differentiate between &quot;&lt;i&gt;I want you not to terminate even if incompatible -data is supplied because I'm calling you from UI&lt;/i&gt;&quot; and &quot;&lt;i&gt;Please terminate if incompatible data is supplied because I'm calling you from the command line&lt;/i&gt;&quot;. A new command line argument for Eclipse means not just Platform UI internal change, but also requires changes in the Equinox and Help, and also means public interface change.&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;&lt;h4&gt;Question to the masses!&lt;/h4&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: red; font-size: large;&quot;&gt;We want to know your opinion - which proposal should be implemented?&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Please reply here or on the &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=538830&quot;&gt;bug 538830&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Update:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;This version was implemented and available in 4.13 M1:&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-oJMooR48pR8/XT3OfYIFEaI/AAAAAAAAlKY/xnEhIZt_aYACFYd8N9LhLQKkJncs5nsoQCLcBGAs/s1600/workspace_selection_dialog1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-oJMooR48pR8/XT3OfYIFEaI/AAAAAAAAlKY/xnEhIZt_aYACFYd8N9LhLQKkJncs5nsoQCLcBGAs/s1600/workspace_selection_dialog1.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 28 Jul 2019 16:35:08 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>PapyrusUML: Papyrus SysML 1.6  available from the Eclipse Marketplace.</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=2364</guid>
	<link>https://papyrusuml.wordpress.com/2019/07/12/papyrus-sysml-1-6-available-from-the-eclipse-marketplace/</link>
	<description>&lt;p&gt;I should have mentioned, yesterday, that Papyrus SysML 1.6 is available from the Eclipse market place at &lt;a href=&quot;https://marketplace.eclipse.org/content/papyrus-sysml-16&quot;&gt;https://marketplace.eclipse.org/content/papyrus-sysml-16&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 12 Jul 2019 14:03:10 +0000</pubDate>
</item>
<item>
	<title>Christian Pontesegger: Building UIs with EASE</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-390668608738243831</guid>
	<link>http://codeandme.blogspot.com/2019/07/building-uis-with-ease.html</link>
	<description>You probably used &lt;a href=&quot;https://www.eclipse.org/ease/&quot; target=&quot;_blank&quot;&gt;EASE&lt;/a&gt; before to automate daily tasks in your IDE or to &lt;a href=&quot;http://codeandme.blogspot.com/2014/12/ease-scripts-conquer-ui.html&quot; target=&quot;_blank&quot;&gt;augment toolbars and menus&lt;/a&gt; with custom functionality. But so far scripts could not be used to build UIs. This changed with the recent contribution of the &lt;i&gt;UI Builder&lt;/i&gt; module.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;What it is all about&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;The &lt;i&gt;UI Builder&lt;/i&gt; module allows to create views and dialogs by pure script code in your IDE. It is great for custom views that developers do not want to put into their products, for rapid prototyping and even for mocking.&lt;br /&gt;&lt;br /&gt;The aim of EASE is to hide layout complexity as much as possible and provide a simple, yet flexible way to implement typical UI tasks.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Example 1: Input Form&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;We will start by creating a simple input form for address data.&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;loadModule(&quot;/System/UI Builder&quot;);&lt;br /&gt;createView(&quot;Create Contact&quot;);&lt;br /&gt;&lt;br /&gt;setColumnCount(2);&lt;br /&gt;createLabel(&quot;First Name:&quot;);&lt;br /&gt;var txtFirstName = createText();&lt;br /&gt;createLabel(&quot;Last Name:&quot;);&lt;br /&gt;var txtLastName = createText();&lt;br /&gt;&lt;/pre&gt;This snippet will create a dynamic view as shown below:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-brN2-68HYis/XSNop8MmpuI/AAAAAAAABHQ/iEPADCmZMakR19LW21MSDgjGPj7gmKjtwCLcBGAs/s1600/script_form.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;155&quot; src=&quot;https://1.bp.blogspot.com/-brN2-68HYis/XSNop8MmpuI/AAAAAAAABHQ/iEPADCmZMakR19LW21MSDgjGPj7gmKjtwCLcBGAs/s400/script_form.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;The renderer used will apply a &lt;a href=&quot;https://www.eclipse.org/articles/Article-Understanding-Layouts/Understanding-Layouts.htm&quot; target=&quot;_blank&quot;&gt;GridLayout&lt;/a&gt;. By setting the &lt;i&gt;columnCount&lt;/i&gt; to 2 we may simply add our elements without providing any additional layout information - a simple way to create basic layouts.&lt;br /&gt;&lt;br /&gt;If needed EASE provides more control by providing layout information when creating components:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createView(&quot;Create Contact&quot;);&lt;br /&gt;createLabel(&quot;First Name:&quot;, &quot;1/1 &amp;gt;x&quot;);&lt;br /&gt;var txtFirstName = createText(&quot;2-4/1 o!&quot;);&lt;br /&gt;createLabel(&quot;Last Name:&quot;, &quot;1/2 &amp;gt;x&quot;);&lt;br /&gt;var txtLastName = createText(&quot;2-4/2 o!&quot;);&lt;br /&gt;&lt;/pre&gt;Creates the same view as above, but now with detailed layout information.&lt;br /&gt;As an example &lt;i&gt;&quot;1/2 &amp;gt;x&quot;&lt;/i&gt; means: first column, second row, horizontal align right, vertical align middle. A full documentation on the syntax is provided in the module documentation (Hover over the &lt;i&gt;UI Builder&lt;/i&gt; module in the &lt;i&gt;Modules Explorer&lt;/i&gt; view).&lt;br /&gt;&lt;br /&gt;Now lets create a combo viewer to select a country for the address:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;cmbCountry = createComboViewer([&quot;Austria&quot;, &quot;Germany&quot;, &quot;India&quot;, &quot;USA&quot;])&lt;br /&gt;&lt;/pre&gt;Simple, isn't it?&lt;br /&gt;&lt;br /&gt;So far we did not need to react on any of our UI elements. Next step is to create a button which needs some kind of callback action:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createButton(&quot;Save 1&quot;, 'print(&quot;you hit the save button&quot;)')&lt;br /&gt;createButton(&quot;Save 2&quot;, saveAddress)&lt;br /&gt;&lt;br /&gt;function saveAddress() {&lt;br /&gt; print(&quot;This is the save method&quot;);&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;The first version of a button adds the callback code as string argument. When the button gets pressed, the callback code will be executed. You may call any script code that the engine is capable of interpreting.&lt;br /&gt;&lt;br /&gt;The second version looks a bit cleaner, as it defines a function &lt;i&gt;saveAddress() &lt;/i&gt;which is called on a button click. Note that we provide a function reference to &lt;i&gt;createButton()&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/AddressBook/Address%20Input.js&quot; target=&quot;_blank&quot;&gt;View the full example&lt;/a&gt; of this script on our &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree&quot; target=&quot;_blank&quot;&gt;script repository&lt;/a&gt;. In addition to some more layouting it also contains a working implementation of the save action to store addresses as JSON data files.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/--lzn_mY5Qgk/XSOChZd5CcI/AAAAAAAABHg/m7V3kv57g4Y-a3oHdQEhIBd44Pq6KaESQCLcBGAs/s1600/script_form2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;211&quot; src=&quot;https://1.bp.blogspot.com/--lzn_mY5Qgk/XSOChZd5CcI/AAAAAAAABHg/m7V3kv57g4Y-a3oHdQEhIBd44Pq6KaESQCLcBGAs/s400/script_form2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;u&gt;Interacting with SWT controls&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;The saveAddress() method needs to read data from the input fields of our form. This could be done using&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var firstName = txtFirstName.getText();&lt;/pre&gt;Unfortunately SWT Controls can only be queried in the UI thread, while the script engine is executed in its own thread. To move code execution to the UI thread, the UI module provides a function executeUI(). By default this functionality is disabled as a bad script executed in the UI thread might stall your Eclipse IDE. To enable it you need to set a checkbox in &lt;i&gt;Preferences/Scripting&lt;/i&gt;. The full call then looks like this:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;loadModule(&quot;/System/UI&quot;)&lt;br /&gt;var firstName = executeUI('txtFirstName.getText();');&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Example 2: A viewer for our phone numbers&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Now that we are able to create some sample data, we also need a viewer for our phone numbers. Say we are able to load all our addresses into an array, the only thing we need is a table viewer to visualize our entries. Following 2 lines will do the job:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var addresses = readAddresses();&lt;br /&gt;var tableViewer = createTableViewer(addresses)&lt;br /&gt;&lt;/pre&gt;Where &lt;i&gt;readAddresses()&lt;/i&gt; collects our &lt;i&gt;*.address&lt;/i&gt; files and stores them into an array.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-68LKx5DHLtI/XSOGL7c-VsI/AAAAAAAABHs/sTsk1alaXqMcfAsazcqoIM7gam9lEw1tACLcBGAs/s1600/phonebook_1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;135&quot; src=&quot;https://1.bp.blogspot.com/-68LKx5DHLtI/XSOGL7c-VsI/AAAAAAAABHs/sTsk1alaXqMcfAsazcqoIM7gam9lEw1tACLcBGAs/s400/phonebook_1.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;So the viewer works, however we need to define how our columns shall be rendered.&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createViewerColumn(tableViewer, &quot;Name&quot;, createLabelProvider(&quot;getProviderElement().firstName + ' ' + getProviderElement().lastName&quot;))&lt;br /&gt;createViewerColumn(tableViewer, &quot;Phone&quot;, createLabelProvider(&quot;getProviderElement().phone&quot;))&lt;br /&gt;&lt;/pre&gt;Whenever a callback needs a viewer element, getProviderElement() holds the actual element.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-Y62uH5tW7DY/XSOH3xupNrI/AAAAAAAABH4/nc-_VNd0Zq0zqyNDTvoj3qKzbOtZOc3pwCLcBGAs/s1600/phonebook_2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;135&quot; src=&quot;https://1.bp.blogspot.com/-Y62uH5tW7DY/XSOH3xupNrI/AAAAAAAABH4/nc-_VNd0Zq0zqyNDTvoj3qKzbOtZOc3pwCLcBGAs/s400/phonebook_2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;We are done! 3 lines of code for a TableViewer does not sound too bad, right? Again a &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/AddressBook/List.js&quot; target=&quot;_blank&quot;&gt;full example&lt;/a&gt; is available on our script repository. It automatically loads &lt;i&gt;*.address&lt;/i&gt; files from your workspace and displays them in the view.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;u&gt;Example 3: A workspace viewer&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;We had a &lt;i&gt;TableViewer&lt;/i&gt; before, now lets try a &lt;i&gt;TreeViewer&lt;/i&gt;. As a tree needs structure, we need to provide a callback to calculate child elements from a given parent:&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var viewer = createTreeViewer(getWorkspace().getProjects(), getChildren);&lt;br /&gt;&lt;br /&gt;function getChildren() {&lt;br /&gt; if (getProviderElement() instanceof org.eclipse.core.resources.IContainer)&lt;br /&gt;  return getProviderElement().members();&lt;br /&gt; &lt;br /&gt; return null;&lt;br /&gt;}&lt;/pre&gt;So simple! The &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/Project%20Info%20Viewer.js&quot; target=&quot;_blank&quot;&gt;full example&lt;/a&gt; looks like this:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-2MQ7dKZ66Ss/XSOJgJTpDsI/AAAAAAAABIE/29WKkpR8C7MMNsg_P2MVCcj2qZD46KNKQCLcBGAs/s1600/project_viewer.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-2MQ7dKZ66Ss/XSOJgJTpDsI/AAAAAAAABIE/29WKkpR8C7MMNsg_P2MVCcj2qZD46KNKQCLcBGAs/s1600/project_viewer.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;u&gt;Example 4: Math function viewer&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The last example demonstrates how to add a custom &lt;i&gt;Control&lt;/i&gt; to a view.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-_rcEjTB8-xI/XSOKb3F8QCI/AAAAAAAABIM/f8-GYaCBZmMrMkw4VBFso6qqvkPX3vOFwCLcBGAs/s1600/functions.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;304&quot; src=&quot;https://1.bp.blogspot.com/-_rcEjTB8-xI/XSOKb3F8QCI/AAAAAAAABIM/f8-GYaCBZmMrMkw4VBFso6qqvkPX3vOFwCLcBGAs/s640/functions.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;For plotting we use the Charting module that is shipped with EASE. The &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/Plot%20function.js&quot; target=&quot;_blank&quot;&gt;source code&lt;/a&gt; should be pretty much self explanatory.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Some Tips &amp;amp; Tricks&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Layouting is dynamic.&lt;br /&gt;Unlike the Java &lt;i&gt;GridLayout&lt;/i&gt; you do not need to fill all cells of your layout. The EASE renderer takes care to automatically fill empty cells with placeholders&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Elements can be replaced.&lt;br /&gt;If you use coordinates when creating controls, you may easily replace a given control by another one. This simplifies the process of layouting (eg if you experience with alignments) and even allows a view to dynamically change its components depending on some external data/events&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Full control.&lt;br /&gt;While some methods from SWT do not have a corresponding script function, still all SWT calls may be used as the &lt;i&gt;create*&lt;/i&gt; methods expose the underlying SWT instances.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Layout help.&lt;br /&gt;To simplify layouting use the &lt;i&gt;showGrid()&lt;/i&gt; function. It displays cell borders that help you to see row/column borders.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 08 Jul 2019 18:54:52 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>
<item>
	<title>Jens Reimann: Eclipse Milo 0.3, updated examples</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4271</guid>
	<link>https://dentrassi.de/2019/07/06/eclipse-milo-0-3-updated-examples/</link>
	<description>&lt;p&gt;We while back I wrote&lt;a href=&quot;https://dentrassi.de/2017/09/14/creating-opc-ua-solutions-eclipse-milo/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt; a blog post about OPC UA, using Milo&lt;/a&gt; and added a bunch of examples, in order to get you started. Time passed by and now Milo 0.3.x is released, with a changed API and so those examples no longer work. Not too much has changed, but the experience of running into compile errors isn’t a good one. Finally I found some time to update the examples.&lt;/p&gt;



&lt;span id=&quot;more-4271&quot;&gt;&lt;/span&gt;



&lt;p&gt;This blog post will focus on the changes, compared to the old blog post. As the old blog post is still valid, I though it might make sense to keep it, and introduce the changes of Milo here. The examples repository however is updated to show the new APIs on the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;



&lt;h2&gt;Making contact&lt;/h2&gt;



&lt;p&gt;This is the first situation where you run into the changed API, getting the endpoints. Although the new code is not much different, the old will no longer work:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;List&amp;lt;EndpointDescription&amp;gt; endpoints =
  DiscoveryClient.getEndpoints(&quot;opc.tcp://localhost:4840&quot;)
    .get();&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;When you compare that to the old code, then you will notice that instead of an array, now a list is being used and the class name changed. Not too bad.&lt;/p&gt;



&lt;p&gt;Also, the way you create a new client instance with Milo 0.3.x is a bit different now:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;OpcUaClientConfigBuilder cfg = new OpcUaClientConfigBuilder();
cfg.setEndpoint(endpoints[0]); // please do better, and not only pick the first entry

OpcUaClient client = OpcUaClient.create(cfg.build());
client.connect().get();&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Using the static &lt;code&gt;create&lt;/code&gt; method instead of the constructor allows for a bit more processing, before the class instance is actually created. Also may this new method throw an exception now. Handling this in an async way isn’t too hard when you are using Java 9+:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;public static CompletableFuture&amp;lt;OpcUaClient&amp;gt; createClient(String uri) {
  return DiscoveryClient
    .getEndpoints(uri) // look up endpoints from remote
    .thenCompose(endpoints -&amp;gt; {
      try {
        return CompletableFuture.completedFuture(
            OpcUaClient.create(buildConfiguration(endpoints)) // &quot;buildConfiguration&quot; should pick an endpoint
        );
      } catch (final UaException e) {
        return CompletableFuture.failedFuture(e);
      }
    });
}&lt;/code&gt;&lt;/pre&gt;



&lt;h2&gt;That’s it? That’s it!&lt;/h2&gt;



&lt;p&gt;Well, pretty much. However, we have only been looking at the client side of Milo. Implementing your own server requires to use the server side API, and that change much more. But to be fair, the changes improve the situation a lot, and make things much easier to use.&lt;/p&gt;



&lt;h2&gt;Milo examples repository&lt;/h2&gt;



&lt;p&gt;As mentioned, the examples in the repository &lt;a href=&quot;https://github.com/ctron/milo-ece2017&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;ctron/milo-ece2017&lt;/a&gt; have been updated as well. They also contain the changed server side, which changed a lot more than the client side.&lt;/p&gt;



&lt;p&gt;When you &lt;a href=&quot;https://github.com/ctron/milo-ece2017/compare/milo-0.2x...master&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;compare the two branches&lt;/a&gt; &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;milo-0.2.x&lt;/code&gt;, you can see the changed I made for updating to the new version.&lt;/p&gt;



&lt;p&gt;I hope this helps a bit in getting started with Milo 0.3.x. And please be sure to read the &lt;a href=&quot;https://dentrassi.de/2017/09/14/creating-opc-ua-solutions-eclipse-milo/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;original post&lt;/a&gt;, giving a more detailed introduction, as well.&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/07/06/eclipse-milo-0-3-updated-examples/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Milo 0.3, updated examples&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Sat, 06 Jul 2019 20:22:28 +0000</pubDate>
</item>
<item>
	<title>Doug Schaefer: Current State of C/C++ Language Servers</title>
	<guid isPermaLink="false">https://medium.com/p/ab87e6fc186b</guid>
	<link>https://medium.com/@dougschaefer/current-state-of-c-c-language-servers-ab87e6fc186b?source=rss-8f7a70438965------2</link>
	<description>&lt;h3&gt;A Bit of History&lt;/h3&gt;&lt;p&gt;When I joined the Eclipse CDT project back in 2002 (yeah, it’s been a long time), I was working on modeling tools for “real time”, or more accurately, embedded reactive systems. Communicating state machines. I wrote code generators that generated C and C++ from &lt;a href=&quot;https://en.wikipedia.org/wiki/Real-Time_Object-Oriented_Modeling&quot;&gt;ROOM models&lt;/a&gt; and then eventually &lt;a href=&quot;https://www.omg.org/news/meetings/workshops/presentations/embedded-rt2002/04-1_Selic-Watson_RT-UML.tutorial&quot;&gt;UML-RT&lt;/a&gt;. ROOM was way better by the way and easier to generate for because it was more semantically complete and well defined. That objective is key later in this story.&lt;/p&gt;&lt;p&gt;We had the vision to integrate our modeling tools more closely with Integrated Development Environments. We started looking at Visual Studio but Eclipse was the young up and comer. That and IBM bought us, Rational by that point, and had already bought OTI who built Eclipse so it was a natural fit. And we were all in Ottawa. And by chance, Ottawa-based QNX had already written a C/C++ IDE based on Eclipse and were open sourcing it and it was perfect for our customers as well. It’s amazing how that all happened and led to my life as CDT Doug.&lt;/p&gt;&lt;p&gt;Our first order of business was to help the CDT become an industry class C/C++ IDE and become a foundation for integrating our modeling tools. Since we wanted to be able to generate model elements from code, it required we have accurate C and C++ parsers and indexers. No one figured we could do it, but we were able to put together a somewhat decent system written in Java in the org.eclipse.cdt.core plug-in.&lt;/p&gt;&lt;h3&gt;Scaling is Hard&lt;/h3&gt;&lt;p&gt;However, as the community started to try it out on real projects, especially ones of a significant size, we started to run into pretty massive performance problems with the indexer. We were essentially doing full builds of the user’s projects and storing the results in a string table. On large projects, builds take a long time. But users expect that and put up with it because they really need those binaries it produces. They don’t have the same patience for their IDEs building indexes the don’t really see and we paid a pretty high price for that.&lt;/p&gt;&lt;p&gt;As a solution, I wondered if we could store the symbol information that we were gathering in a way that we could load it up from disk as we were parsing other files and plug the symbol info into the AST the same way we do symbols normally. This would allow us to parse header files once and reuse the results, similar to how precompiled headers work. The price you pay is in accuracy since some systems parse header files multiple times with different macro settings. But my guess was that it wouldn’t be that bad.&lt;/p&gt;&lt;p&gt;It was hard to convince my team at IBM Rational to take this road. Accuracy was king for our modeling tools. But when I moved to join QNX, I decide to forgo that requirement and give this “fast indexer” strategy a go. And the rest is history. Performance on large projects was an order of magnitude faster. Incremental indexing of files as they were saved isn’t even noticeable. It was a huge success and my proudest contribution to the CDT. And I was even better when other community members handed us their expertise to make the accuracy better and better so you barely notice that at all either.&lt;/p&gt;&lt;h3&gt;C++ Rises from the “Dead”&lt;/h3&gt;&lt;p&gt;Move the clock a decade later and we started running into a problem. The C++ standards community has new life and are adding a tonne of new features at a three year cadence. The CDT community has long lost most of the experts that build the original parsers. Lucky for us a new crop of contributors has come along and are doing heroes work to keep up. But it’s getting harder and harder. One thing we benefit from is how slow embedded developers, the majority of users of CDT, are to adopt the new standards. It gives us time, but not forever. We need to find a better way.&lt;/p&gt;&lt;p&gt;Then along came the Language Server Protocol and a small handful of language servers that do C/C++. I’ve investigated four of them. Three of them are based on llvm and clang. One of them is in tree with llvm and clang in clang-tools-extra, i.e., clangd. The other two are projects that use libclang with parts of the tree, i.e., cquery and ccls. Those two projects are what I call “one person projects” and with cquery at least, that person found something else to do last November. Beware of the one person project.&lt;/p&gt;&lt;h3&gt;clangd&lt;/h3&gt;&lt;p&gt;I’ve spent a lot of time with clangd when experimenting with Visual Studio Code. For what it does, clangd is very accurate and really fast. It uses compile_commands.json files to find out what source files are built and what compiler and command lines they use. I’ve had to fork the tree to add in support for discovering compilers it doesn’t know about, but that was pretty easy to put together. It gives great content assist and you get the benefit of clang’s awesome compilation error diagnostics as you type. It shows a lot of promise.&lt;/p&gt;&lt;p&gt;However clangd for the longest time lacked an indexer. When you search for references it only finds them in files you have opened previously. The thought as I understand it is that you use another process to build the index and that is usually done at build time. However, not all users have such an environment set up so having an index created by the IDE is a mandatory feature. Now, clangd did eventually get an indexer but it does what the old CDT indexer did and completely parses the source three. That predictably takes forever on large projects and I don’t think users have the appetite to take a huge step backwards like that.&lt;/p&gt;&lt;h3&gt;IntelliSense&lt;/h3&gt;&lt;p&gt;While waiting for the right solution to arrive for clangd, I thought I’d give the Microsoft C/C++ Tools for VS Code a try. My initial experience was quite surprising. It actually worked well with a gnu tools cross compiler project I used for testing. You have to teach it how to parse your code using a magic JSON file, which fits right in with the rest of VS Code. It’s able to pick out the default include path when you point it at your compiler. It has a MI support for debugging, though no built-in support for remote debugging but that was hackable. It seemed like a reasonable alternative, at least for VS Code.&lt;/p&gt;&lt;p&gt;However when I tried it with one of our production projects it quickly fell apart. It does a great job trying to figure out include paths, similar to the heuristics we use in CDT. That includes things like treating all the folders in your workspace as a potential include path entry. But it tended to make mistakes. It even has support for compile_commands.json files so I could tell it the command lines that were use. It did better but still tried to do too much and gave incorrect results.&lt;/p&gt;&lt;p&gt;That and it doesn’t have an index yet either. One is coming soon, but if it can’t figure out how to parse my files correctly, it’s not going to be a great experience. Still a lot of work to do there.&lt;/p&gt;&lt;h3&gt;Where do we go from here?&lt;/h3&gt;&lt;p&gt;As it stands today, at least from a CDT perspective, there really isn’t a language server solution that comes near what we have in CDT. Yes, some things are better. Both these language servers are using real parsers to parse the code. (or at least clangd is. Microsoft’s, of course, is closed source so I can only assume). They give really good content assist and error diagnostics and open declaration works. But without a usable indexer, you don’t get accurate symbol references. And I haven’t even mentioned refactoring which CDT has and which is not even suggested in the language server protocol.&lt;/p&gt;&lt;p&gt;So if all your doing is typing in code, the new language servers are great. But if you need to do some code mining to understand the code before you change it, you’re out of luck. The good news is that we are continuing to see investment in them so who knows. But then, maybe the CDT parsers catch up with the language standards before these other language servers grow great indexers making the whole thing moot. I wouldn’t bet against that right now.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=ab87e6fc186b&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 28 Jun 2019 19:59:53 +0000</pubDate>
</item>
<item>
	<title>itemis: Graphical Editing Framework (GEF) 5.1.0 Release</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/graphical-editing-framework-gef-5.1.0-release</guid>
	<link>https://blogs.itemis.com/en/graphical-editing-framework-gef-5.1.0-release</link>
	<description>&lt;p&gt;The Eclipse GEF team is happy to announce that version 5.1.0 of the &lt;a href=&quot;https://www.eclipse.org/gef/&quot; title=&quot; Eclipse&quot;&gt;Eclipse Graphical Editing Framework&lt;/a&gt; is part of the Eclipse 2019-06 simultaneous release:&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;img alt=&quot;GEF_Installation&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Eclipse/GRAPHICAL%20EDITING%20FRAMEWORK%20(GEF)%205.1.0%20RELEASE/GEF_Installation.jpg?width=869&amp;amp;name=GEF_Installation.jpg&quot; style=&quot;width: 869px;&quot; width=&quot;869&quot; /&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;The project team has worked hard since the &lt;strong&gt;&lt;a href=&quot;https://blogs.itemis.com/en/graphical-editing-framework-gef-5.0.0-release&quot; title=&quot; Graphical Editing Framework (GEF) 5.0.0 Release&quot;&gt; Eclipse GEF 5.0.0 release &lt;/a&gt;&lt;/strong&gt; two years ago. The new release fixes &lt;a href=&quot;https://projects.eclipse.org/projects/tools.gef/releases/5.1.0-2019-06/bugs&quot;&gt;&lt;strong&gt;issues&lt;/strong&gt;&lt;/a&gt; on the &lt;em&gt;GEF MVC&lt;/em&gt;, &lt;em&gt;GEF Zest&lt;/em&gt;, and &lt;em&gt;GEF DOT&lt;/em&gt; components.&lt;/p&gt; 
&lt;p&gt;We would like to thank all contributors who made this release possible:&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;GEF_Contributions&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Embedded/GRAPHICAL%20EDITING%20FRAMEWORK%20(GEF)%205.1.0%20RELEASE/GEF_Contributions.png?width=874&amp;amp;name=GEF_Contributions.png&quot; style=&quot;width: 874px;&quot; width=&quot;874&quot; /&gt;&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;Your feedback regarding the new release is highly appreciated. If you have any questions or suggestions, please let us know via the &lt;a href=&quot;https://www.eclipse.org/forums/index.php?t=thread&amp;amp;frm_id=81&quot; title=&quot;Eclipse GEF forum&quot;&gt;&lt;strong&gt;Eclipse GEF forum&lt;/strong&gt;&lt;/a&gt; or create an issue on &lt;a href=&quot;https://bugs.eclipse.org/bugs/describecomponents.cgi?product=GEF&quot; title=&quot;Eclipse Bugzilla&quot;&gt;&lt;strong&gt;Eclipse Bugzilla&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For further information, we recommend to take a look at the &lt;strong&gt;&lt;a href=&quot;https://blogs.itemis.com/topic/gef&quot; title=&quot;More Eclipse GEF blog articles&quot;&gt;Eclipse GEF blog articles&lt;/a&gt;&lt;/strong&gt;, watch the &lt;a href=&quot;https://www.youtube.com/watch?v=GnSVLNYfGlk&quot; title=&quot;Eclipse GEF DOT Video&quot;&gt;&lt;strong&gt;Eclipse GEF session on the EclipseCon Europe 2018&lt;/strong&gt;&lt;/a&gt;, and try out the&lt;strong&gt; &lt;a href=&quot;https://info.itemis.com/en/gef/tutorials/&quot; title=&quot;Online tutorial: Getting started with GEF 5.0&quot;&gt;Getting started with Eclipse GEF online tutorial&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fgraphical-editing-framework-gef-5.1.0-release&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 25 Jun 2019 08:00:00 +0000</pubDate>
	<author>miklossy@itemis.de (Tamas Miklossy)</author>
</item>
<item>
	<title>Vladimir Piskarev: Eclipse Handly 1.2 Released</title>
	<guid isPermaLink="false">http://pisv.wordpress.com/?p=703</guid>
	<link>https://pisv.wordpress.com/2019/06/19/eclipse-handly-1-2-released/</link>
	<description>&lt;p&gt;Eclipse &lt;a href=&quot;https://www.eclipse.org/handly&quot;&gt;Handly&lt;/a&gt; &lt;a href=&quot;https://projects.eclipse.org/projects/technology.handly/releases/1.2&quot;&gt;1.2&lt;/a&gt; has just been released. This release is focused on further enhancements to UI components. Particularly, it provides a framework for creating a full-featured Call Hierarchy view.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.eclipse.org/Handly/New_and_Noteworthy/1.2&quot;&gt;New and Noteworthy&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://wiki.eclipse.org/Handly/Migration/1.2&quot;&gt;Migration Guide&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://projects.eclipse.org/projects/technology.handly/downloads&quot;&gt;Downloads&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 19 Jun 2019 18:50:18 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.14 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink188</guid>
	<link>http://eclipse.org/webtools/releases/3.14</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.14 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-06
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-06/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.14 is included in the 2019-06
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-06/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in several
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.15 update site itself&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink188&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 19 Jun 2019 15:14:59 +0000</pubDate>
</item>
<item>
	<title>Sharon Corbett: Eclipse Individual Committer Agreement 4.0 Update</title>
	<guid isPermaLink="false">6708 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/sharon-corbett/eclipse-individual-committer-agreement-40-update</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;The Eclipse Foundation has been busy over the last six months communicating with the Community at Large in order to update our standard Contributor and Committer Agreements to state explicitly that contributions made to our projects may also be used in specifications.&lt;/p&gt;

&lt;p&gt;Our second milestone in this campaign targeted the &lt;a href=&quot;https://www.eclipse.org/legal/committer_process/EclipseIndividualCommitterAgreement.pdf&quot;&gt;Eclipse Individual Committer Agreement&lt;/a&gt; (ICA) and we are happy to report that a very significant number of our individual committers successfully updated theirs.  On June 13th, we retired all versions of the ICA prior to version 4.0 which has placed a small number of individual committers in a temporary locked position.  Please note this does not impact your status as a Committer; it temporarily locks your commit privileges until the updated agreement is in place. This will ensure the integrity of all of our projects.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We are confident we have connected with all committers in this situation; however, we are here to help!  Email emo-records@eclipse-foundation.org for assistance.&lt;/p&gt;

&lt;p&gt;Thank you to the Eclipse Community for your support of this campaign and for helping make Eclipse a great community!&lt;br /&gt;
 &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 14 Jun 2019 15:27:28 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: My new book on TDD, Build Automation and Continuous Integration</title>
	<guid isPermaLink="false">http://www.lorenzobettini.it/?p=1179</guid>
	<link>http://www.lorenzobettini.it/2019/06/my-new-book-on-tdd-build-automation-and-continuous-integration/</link>
	<description>&lt;p&gt;I haven’t been blogging for some time now. I’m getting back to blogging by announcing my new book on TDD (Test-Driven Development), Build Automation and Continuous Integration.&lt;/p&gt;



&lt;p&gt;The title is indeed, “&lt;strong&gt;Test-Driven Development, Build Automation, Continuous Integration&lt;br /&gt; (with Java, Eclipse and friends)&lt;/strong&gt;” and can be bought from &lt;a href=&quot;https://leanpub.com/tdd-buildautomation-ci&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://leanpub.com/tdd-buildautomation-ci&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;The main goal of the book is to get you started with Test-Driven Development (write tests before the code), Build Automation (make the overall process of compilation and testing automatic with Maven) and Continuous Integration (commit changes and a server will perform the whole build of your code). Using Java, Eclipse and their ecosystems.&lt;/p&gt;



&lt;p&gt;The main subject of this book is software testing. The main premise is that testing is a crucial part of software development. You need to make sure that the software you write behaves correctly. You can manually test your software. However, manual tests require lots of manual work and it is error prone.&lt;/p&gt;



&lt;p&gt;On the contrary, this book focuses on automated tests, which can be done at several levels. In the book we will see a few types of tests, starting from those that test a single component in isolation to those that test the entire application. We will also deal with tests in the presence of a database and with tests that verify the correct behavior of the graphical user interface.&lt;/p&gt;



&lt;p&gt;In particular, we will describe and apply the Test-Driven Development methodology, writing tests before the actual code.&lt;/p&gt;



&lt;p&gt;Throughout the book we will use Java as the main programming language. We use Eclipse as the IDE. Both Java and Eclipse have a huge ecosystem of “friends”, that is, frameworks, tools and plugins. Many of them are related to automated tests and perfectly fit the goals of the book. We will use JUnit throughout the book as the main Java testing framework.&lt;/p&gt;



&lt;p&gt;it is also important to be able to completely automate the build process. In fact, another relevant subject of the book is Build Automation. We will use one of the mainstream tools for build automation in the Java world, Maven.&lt;/p&gt;



&lt;p&gt;We will use Git as the Version Control System and GitHub as the hosting service for our Git repositories. We will then connect our code hosted on GitHub with a cloud platform for Continuous Integration. In particular, we will use Travis CI. With the Continuous Integration process, we will implement a workflow where each time we commit a change in our Git repository, the CI server will automatically run the automated build process, compiling all the code, running all the tests and possibly create additional reports concerning the quality of our code and of our tests.&lt;/p&gt;



&lt;p&gt;The code quality of tests can be measured in terms of a few metrics using code coverage and mutation testing. Other metrics are based on static analysis mechanisms, inspecting the code in search of bugs, code smells and vulnerabilities. For such a static analysis we will use SonarQube and its free cloud version SonarCloud.&lt;/p&gt;



&lt;p&gt;When we need our application to connect to a service like a database, we will use Docker a virtualization program, based on containers, that is much more lightweight than standard virtual machines. Docker will allow us to&lt;/p&gt;



&lt;p&gt;configure the needed services in advance, once and for all, so that the services running in the containers will take part in the reproducibility of the whole build infrastructure. The same configuration of the services will be used in our development environment, during build automation and in the CI server.&lt;/p&gt;



&lt;p&gt;Most of the chapters have a “tutorial” nature. Besides a few general explanations of the main concepts, the chapters will show lots of code. It should be straightforward to follow the chapters and write the code to reproduce the examples. All the sources of the examples are available on GitHub.&lt;/p&gt;



&lt;p&gt;The main goal of the book is to give the basic concepts of the techniques and tools for testing, build automation and continuous integration. Of course, the descriptions of these concepts you find in this book are far from being exhaustive. However, you should get enough information to get started with all the presented techniques and tools.&lt;/p&gt;



&lt;p&gt;I hope you enjoy the book &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Wed, 12 Jun 2019 16:59:24 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: Eclipse Tycho: Disable p2 dependency resolution with tycho.mode=maven</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=1023</guid>
	<link>https://kthoms.wordpress.com/2019/06/12/eclipse-tycho-disable-p2-dependency-resolution-with-tycho-modemaven/</link>
	<description>&lt;p&gt;In Eclipse Tycho based builds the first step is always computation of the target platform and depedency resolution. This takes quite some time and in certain use cases it is not necessary. Typical use cases are updating versions with the &lt;a href=&quot;https://www.eclipse.org/tycho/sitedocs/tycho-release/tycho-versions-plugin/set-version-mojo.html&quot;&gt;tycho-versions-plugin&lt;/a&gt;, or displaying the effective pom with &lt;code&gt;help:effective-pom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The p2 target platform &amp;amp; dependency resolution can be skipped by setting the &lt;code&gt;tycho-mode&lt;/code&gt; system property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mvn -Dtycho.mode=maven &amp;lt;goals&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This useful feature is a bit hidden in just a few posts, e.g. &lt;a href=&quot;https://www.eclipse.org/lists/tycho-user/msg06439.html&quot;&gt;https://www.eclipse.org/lists/tycho-user/msg06439.html&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 12 Jun 2019 01:31:39 +0000</pubDate>
</item>
<item>
	<title>Niko Stotz: Inline Display of Error / Warning / Info Annotations in Eclipse</title>
	<guid isPermaLink="false">https://www.nikostotz.de/blog/?p=436</guid>
	<link>https://www.nikostotz.de/blog/inline-display-of-error-warning-info-annotations-in-eclipse/</link>
	<description>&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; A prototype implementation shows all error, warning, and info annotations (“bubbles” in the left ruler) in Eclipse Java editor as inline text. Thus, we don’t have to use the mouse to view the error message. The error messages update live with changes in the editor.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-438&quot; src=&quot;https://www.nikostotz.de/blog/wp-content/uploads/2019/05/InlineAnnotationsSmall.gif&quot; /&gt;&lt;figcaption&gt;Screencast showing the live effect&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;I’m an avid keyboard user. If I have to touch the mouse, something is wrong. Eclise has tons of shortcuts to ease your live, and I use and enjoy them every day.&lt;/p&gt;



&lt;p&gt;However, if I had an error message in e.g. my Java file, and I couldn’t anticipate the error, I had several bad choices:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt; Opening the &lt;em&gt;Problems&lt;/em&gt; view and navigating to the current error (entries in the  Problems view are called “markers” by Eclipse)&lt;/li&gt;&lt;li&gt;Moving the mouse over the annotation in the left ruler (“annotation” in Eclipse lingo)&lt;/li&gt;&lt;li&gt;Guessing&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Not so long ago, Angelo Zerr and others implemented &lt;a href=&quot;https://github.com/angelozerr/jdt-codemining&quot;&gt;code mining&lt;/a&gt; in Eclipse. This feature displays additional information within a text file without changing the actual contents of the file. Sounds like a natural fit for my problem!&lt;/p&gt;



&lt;p&gt;I first tried to implement the error code mining based on markers, (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=540443&quot;&gt;Bug 540443&lt;/a&gt;). This works in general. However, markers are bound to the &lt;em&gt;persisted state&lt;/em&gt; of a file, i.e. how a file is saved to disk. So they are only updated on saving.&lt;/p&gt;



&lt;p&gt;Most editors in Eclipse are more interactive than that: They update their error information based on the &lt;em&gt;dirty state&lt;/em&gt; of the editor, i.e. the text that’s currently in the editor. This feels way more natural, so I tried to rewrite my error code mining based on annotations. The current prototype is shown in above’s screencast.&lt;/p&gt;



&lt;p&gt;The code is attached to &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=547665&quot;&gt;Bug 547665&lt;/a&gt;. The prototype looks quite promising.&lt;/p&gt;



&lt;p&gt;As above’s screencast shows, I have at least one serious issue to resolve: When the editor is saved, all code minings briefly duplicate. Thankfully, they get back to normal quickly.&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Sun, 26 May 2019 22:11:09 +0000</pubDate>
        <enclosure url="https://www.nikostotz.de/blog/wp-content/uploads/2019/05/InlineAnnotationsSmall.gif" length="2854" type="image/jpeg"/>
</item>
<item>
	<title>Red Hat Developers: Apache Camel development on Eclipse Che 7</title>
	<guid isPermaLink="false">https://developers.redhat.com/blog/?p=597287</guid>
	<link>https://developers.redhat.com/blog/2019/05/21/apache-camel-development-on-eclipse-che-7/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://camel.apache.org&quot;&gt;Apache Camel&lt;/a&gt; development is improving on &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt; 7 compared to Che 6. On Che 6, it is limited to XML DSL and without classical XSD-based XML support. With Che 7, Camel Java DSL is available and XSD-based XML support is working nicely with the Camel XML DSL support. Please note that Che 7 is still in beta.&lt;br /&gt;
&lt;span id=&quot;more-597287&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Camel language features available&lt;/h2&gt;
&lt;p&gt;Inside the same editor, there is access to classic XML tooling and Camel XML DSL support.&lt;/p&gt;
&lt;p&gt;Classic XML tooling completion based on XSD:&lt;br /&gt;
&lt;img alt=&quot;XMl tag completion based on Camel xsd&quot; class=&quot; aligncenter size-large  wp-image-597457 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/compeltionXMLXSD-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel XML DSL tooling completion:&lt;br /&gt;
&lt;img alt=&quot;Camel URI completion with Camel XML DSL&quot; class=&quot;  aligncenter size-large   wp-image-597467 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/completionXMLCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Classic XML tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Validation based on Camel XML xsd&quot; class=&quot;  aligncenter size-large   wp-image-597487 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationXMlXSD-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel XML DSL tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Camel XML DSL validation of Camel URI&quot; class=&quot; aligncenter size-large  wp-image-597507 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationXMLCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Inside the same editor, there is access to classic Java tooling and Camel Java DSL support.&lt;/p&gt;
&lt;p&gt;Classic Java tooling completion:&lt;br /&gt;
&lt;img alt=&quot;Classic Java completion&quot; class=&quot; aligncenter size-large  wp-image-597527 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/compeltionJavaClassic-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel Java DSL completion:&lt;br /&gt;
&lt;img alt=&quot;Camel URI completion with Camel Java DSL&quot; class=&quot; aligncenter size-large  wp-image-597537 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/compeltionJavaCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Classic Java tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Classic Java validation&quot; class=&quot; aligncenter size-large  wp-image-597557 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationJavaClassic-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel Java DSL tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Camel URI validation with Java DSL&quot; class=&quot; aligncenter size-large  wp-image-597567 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationJavaCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;How to configure on che.openshift.io&lt;/h2&gt;
&lt;p&gt;Currently, some advanced steps are needed to have all extensions working together on a resource-limited Che environment, which is the default for che.openshift.io. Let’s see how to activate it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;a href=&quot;https://che.openshift.io&quot;&gt;che.openshift.io&lt;/a&gt; (you will have to register if you’ve not done so already).&lt;/li&gt;
&lt;li&gt;Create a workspace based on Che 7.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;Create Che 7 Workspace&quot; class=&quot; aligncenter size-large  wp-image-597297 &quot; height=&quot;347&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/createWorkspaceChe7-1024x555.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wait that workspace creation is finished.&lt;/li&gt;
&lt;li&gt;Import the Camel/Fuse project that you want.&lt;/li&gt;
&lt;li&gt;Go back to workspace configuration by using the top-left yellow arrow and clicking on Workspaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;Go to workspace config&quot; class=&quot; aligncenter size-large  wp-image-597597 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/GoToSWorkspaceConfig-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on the running workspace.&lt;/li&gt;
&lt;li&gt;Click stop at the top right.&lt;/li&gt;
&lt;li&gt;Go to Plugins tab.&lt;/li&gt;
&lt;li&gt;Enable Language Support for Apache Camel, Language Support for Java and XML.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;Enable Camel, Java and XML plugins&quot; class=&quot; aligncenter size-large  wp-image-597807 &quot; height=&quot;347&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/enablePlugins-2-1024x555.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to config tab.&lt;/li&gt;
&lt;li&gt;Search for “attributes”, add memory limits for each of the plugins, you should end with something like:
&lt;pre&gt;&quot;attributes&quot;: {
&quot;sidecar.redhat/java.memory_limit&quot;: &quot;1280Mi&quot;,
&quot;sidecar.camel-tooling/vscode-apache-camel.memory_limit&quot;: &quot;128Mi&quot;,
&quot;sidecar.redhat/vscode-xml.memory_limit&quot;: &quot;128Mi&quot;,
&quot;sidecar.eclipse/che-theia.memory_limit&quot;: &quot;512Mi&quot;,
&quot;editor&quot;: &quot;eclipse/che-theia/next&quot;,
&quot;plugins&quot;: &quot;eclipse/che-machine-exec-plugin/0.0.1,redhat/java/0.43.0,camel-tooling/vscode-apache-camel/0.0.14,redhat/vscode-xml/0.5.1&quot;
}&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Click on Open button on top right.&lt;/li&gt;
&lt;li&gt;Open a Java file and wait that the Java Language Server has started (it can take several minutes).&lt;/li&gt;
&lt;li&gt;Enjoy!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;What’s next?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;As you’ve noticed, the installation is currently a bit cumbersome as it requires you to touch the YAML config file. Don’t worry; there is work in progress to improve the installation experience, such as providing a &lt;a href=&quot;https://github.com/eclipse/che/issues/13182&quot;&gt;specific Camel stack&lt;/a&gt;. This will allow you to create a workspace preconfigured, which means doing only the first three steps instead of the 11 steps of the configuration. Several other features are in the works by incorporating existing VS Code extensions inside Che 7. Stay tuned.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;a2a_button_facebook&quot; href=&quot;https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_twitter&quot; href=&quot;https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_linkedin&quot; href=&quot;https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;LinkedIn&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_email&quot; href=&quot;https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Email&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_print&quot; href=&quot;https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Print&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_reddit&quot; href=&quot;https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Reddit&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_flipboard&quot; href=&quot;https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Flipboard&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;title=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot;&gt;&lt;img alt=&quot;Share&quot; src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://developers.redhat.com/blog/2019/05/21/apache-camel-development-on-eclipse-che-7/&quot; rel=&quot;nofollow&quot;&gt;Apache Camel development on Eclipse Che 7&lt;/a&gt; appeared first on &lt;a href=&quot;https://developers.redhat.com/blog&quot; rel=&quot;nofollow&quot;&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 21 May 2019 07:00:32 +0000</pubDate>
</item>

</channel>
</rss>
